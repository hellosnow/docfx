{
  "api/Microsoft.DocAsCode.Build.Engine.TemplateRendererResource.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateRendererResource.html",
    "title": "Class TemplateRendererResource | DocFX website",
    "keywords": "Class TemplateRendererResource Inheritance Object TemplateRendererResource Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateRendererResource Constructors | Improve this Doc View Source TemplateRendererResource(String, String) Declaration public TemplateRendererResource(string resourceName, string content) Parameters Type Name Description String resourceName String content Fields | Improve this Doc View Source TemplateRenderTypeMapping Declaration public static readonly Dictionary<string, TemplateRendererType> TemplateRenderTypeMapping Field Value Type Description Dictionary < String , TemplateRendererType > Properties | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source ResourceName Declaration public string ResourceName { get; } Property Value Type Description String | Improve this Doc View Source Type Declaration public TemplateRendererType Type { get; } Property Value Type Description TemplateRendererType Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateRendererType.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateRendererType.html",
    "title": "Enum TemplateRendererType | DocFX website",
    "keywords": "Enum TemplateRendererType Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public enum TemplateRendererType Fields Name Description Liquid Mustache Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateResourceInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateResourceInfo.html",
    "title": "Class TemplateResourceInfo | DocFX website",
    "keywords": "Class TemplateResourceInfo Inheritance Object TemplateResourceInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class TemplateResourceInfo Constructors | Improve this Doc View Source TemplateResourceInfo(String, String, Boolean) Declaration public TemplateResourceInfo(string resourceKey, string filePath, bool isRegexPattern) Parameters Type Name Description String resourceKey String filePath Boolean isRegexPattern Properties | Improve this Doc View Source FilePath Declaration public string FilePath { get; } Property Value Type Description String | Improve this Doc View Source IsRegexPattern Declaration public bool IsRegexPattern { get; } Property Value Type Description Boolean | Improve this Doc View Source ResourceKey Declaration public string ResourceKey { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateType.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateType.html",
    "title": "Enum TemplateType | DocFX website",
    "keywords": "Enum TemplateType Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public enum TemplateType Fields Name Description Auxiliary Auxiliary template type means documents processed by this template will not be referenced by other documents Default Primary Primary template type means documents processed by this template will be responsible for hyperlink Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateUtility.html",
    "title": "Class TemplateUtility | DocFX website",
    "keywords": "Class TemplateUtility Inheritance Object TemplateUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateUtility Constructors | Improve this Doc View Source TemplateUtility(DocumentBuildContext) Declaration public TemplateUtility(DocumentBuildContext context) Parameters Type Name Description DocumentBuildContext context Methods | Improve this Doc View Source ResolveSourceRelativePath(String, String) Declaration public string ResolveSourceRelativePath(string originPath, string currentFileOutputPath) Parameters Type Name Description String originPath String currentFileOutputPath Returns Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TransformModelOptions.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TransformModelOptions.html",
    "title": "Class TransformModelOptions | DocFX website",
    "keywords": "Class TransformModelOptions Inheritance Object TransformModelOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TransformModelOptions Properties | Improve this Doc View Source Bookmarks Declaration [JsonProperty(PropertyName = \"bookmarks\")] public Dictionary<string, string> Bookmarks { get; set; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source IsShared Declaration [JsonProperty(PropertyName = \"isShared\")] public bool IsShared { get; set; } Property Value Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchive.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchive.html",
    "title": "Class XRefArchive | DocFX website",
    "keywords": "Class XRefArchive Inheritance Object XRefArchive Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class XRefArchive : IXRefContainer, IDisposable Fields | Improve this Doc View Source MajorFileName Declaration public const string MajorFileName = \"xrefmap.yml\" Field Value Type Description String Properties | Improve this Doc View Source Entries Declaration public ImmutableList<string> Entries { get; } Property Value Type Description System.Collections.Immutable.ImmutableList < String > Methods | Improve this Doc View Source CreateMajor(XRefMap) Declaration public string CreateMajor(XRefMap map) Parameters Type Name Description XRefMap map Returns Type Description String | Improve this Doc View Source CreateMinor(XRefMap, IEnumerable<String>) Declaration public string CreateMinor(XRefMap map, IEnumerable<string> names) Parameters Type Name Description XRefMap map IEnumerable < String > names Returns Type Description String | Improve this Doc View Source Delete(String) Declaration public void Delete(string name) Parameters Type Name Description String name | Improve this Doc View Source DeleteMajor() Declaration public void DeleteMajor() | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Get(String) Declaration public XRefMap Get(string name) Parameters Type Name Description String name Returns Type Description XRefMap | Improve this Doc View Source GetMajor() Declaration public XRefMap GetMajor() Returns Type Description XRefMap | Improve this Doc View Source GetReader() Declaration public IXRefContainerReader GetReader() Returns Type Description IXRefContainerReader Implements IXRefContainer.GetReader() | Improve this Doc View Source HasEntry(String) Declaration public bool HasEntry(string name) Parameters Type Name Description String name Returns Type Description Boolean | Improve this Doc View Source Open(String, XRefArchiveMode) Declaration public static XRefArchive Open(string file, XRefArchiveMode mode) Parameters Type Name Description String file XRefArchiveMode mode Returns Type Description XRefArchive | Improve this Doc View Source Update(String, XRefMap) Declaration public void Update(string name, XRefMap map) Parameters Type Name Description String name XRefMap map | Improve this Doc View Source UpdateMajor(XRefMap) Declaration public void UpdateMajor(XRefMap map) Parameters Type Name Description XRefMap map Explicit Interface Implementations | Improve this Doc View Source IXRefContainer.GetRedirections() Declaration IEnumerable<XRefMapRedirection> IXRefContainer.GetRedirections() Returns Type Description IEnumerable < XRefMapRedirection > Implements IXRefContainer.GetRedirections() | Improve this Doc View Source IXRefContainer.IsEmbeddedRedirections Declaration bool IXRefContainer.IsEmbeddedRedirections { get; } Returns Type Description Boolean Implements IXRefContainer.IsEmbeddedRedirections Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveBuilder.html",
    "title": "Class XRefArchiveBuilder | DocFX website",
    "keywords": "Class XRefArchiveBuilder Inheritance Object XRefArchiveBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefArchiveBuilder Methods | Improve this Doc View Source DownloadAsync(Uri, String) Declaration public Task<bool> DownloadAsync(Uri uri, string outputFile) Parameters Type Name Description Uri uri String outputFile Returns Type Description Task < Boolean > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveMode.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveMode.html",
    "title": "Enum XRefArchiveMode | DocFX website",
    "keywords": "Enum XRefArchiveMode Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public enum XRefArchiveMode Fields Name Description Create Read Update Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveReader.html",
    "title": "Class XRefArchiveReader | DocFX website",
    "keywords": "Class XRefArchiveReader Inheritance Object XRefRedirectionReader XRefArchiveReader Inherited Members XRefRedirectionReader.Find(String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefArchiveReader : XRefRedirectionReader, IXRefContainerReader, IDisposable Constructors | Improve this Doc View Source XRefArchiveReader(XRefArchive) Declaration public XRefArchiveReader(XRefArchive archive) Parameters Type Name Description XRefArchive archive Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source GetMap(String) Declaration protected override IXRefContainer GetMap(string name) Parameters Type Name Description String name Returns Type Description IXRefContainer Overrides XRefRedirectionReader.GetMap(String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMap.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMap.html",
    "title": "Class XRefMap | DocFX website",
    "keywords": "Class XRefMap Inheritance Object XRefMap Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefMap : IXRefContainer Properties | Improve this Doc View Source BaseUrl Declaration [YamlMember(Alias = \"baseUrl\")] public string BaseUrl { get; set; } Property Value Type Description String | Improve this Doc View Source HrefUpdated Declaration [YamlMember(Alias = \"hrefUpdated\")] public bool ? HrefUpdated { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source IsEmbeddedRedirections Declaration public bool IsEmbeddedRedirections { get; } Property Value Type Description Boolean Implements IXRefContainer.IsEmbeddedRedirections | Improve this Doc View Source Others Declaration [ExtensibleMember] public Dictionary<string, object> Others { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Redirections Declaration [YamlMember(Alias = \"redirections\")] public List<XRefMapRedirection> Redirections { get; set; } Property Value Type Description List < XRefMapRedirection > | Improve this Doc View Source References Declaration [YamlMember(Alias = \"references\")] public List<XRefSpec> References { get; set; } Property Value Type Description List < XRefSpec > | Improve this Doc View Source Sorted Declaration [YamlMember(Alias = \"sorted\")] public bool ? Sorted { get; set; } Property Value Type Description Nullable < Boolean > Methods | Improve this Doc View Source GetReader() Declaration public IXRefContainerReader GetReader() Returns Type Description IXRefContainerReader Implements IXRefContainer.GetReader() | Improve this Doc View Source GetRedirections() Declaration public IEnumerable<XRefMapRedirection> GetRedirections() Returns Type Description IEnumerable < XRefMapRedirection > Implements IXRefContainer.GetRedirections() | Improve this Doc View Source Sort() Declaration public void Sort() | Improve this Doc View Source UpdateHref(Uri) Declaration public void UpdateHref(Uri baseUri) Parameters Type Name Description Uri baseUri Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMapDownloader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMapDownloader.html",
    "title": "Class XRefMapDownloader | DocFX website",
    "keywords": "Class XRefMapDownloader Inheritance Object XRefMapDownloader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefMapDownloader Constructors | Improve this Doc View Source XRefMapDownloader(String, Int32) Declaration public XRefMapDownloader(string baseFolder = null, int maxParallelism = 16) Parameters Type Name Description String baseFolder Int32 maxParallelism Methods | Improve this Doc View Source DownloadAsync(Uri) Download xref map file from uri (async). Declaration public Task<IXRefContainer> DownloadAsync(Uri uri) Parameters Type Name Description Uri uri The uri of xref map file. Returns Type Description Task < IXRefContainer > An instance of XRefMap . | Improve this Doc View Source DownloadBySchemeAsync(Uri) Declaration protected virtual Task<IXRefContainer> DownloadBySchemeAsync(Uri uri) Parameters Type Name Description Uri uri Returns Type Description Task < IXRefContainer > Remarks Support scheme: http, https, ftp, file, embedded. | Improve this Doc View Source DownloadFromLocal(Uri) Declaration protected static IXRefContainer DownloadFromLocal(Uri uri) Parameters Type Name Description Uri uri Returns Type Description IXRefContainer | Improve this Doc View Source DownloadFromWebAsync(Uri) Declaration protected static Task<XRefMap> DownloadFromWebAsync(Uri uri) Parameters Type Name Description Uri uri Returns Type Description Task < XRefMap > | Improve this Doc View Source UpdateHref(XRefMap, Uri) Declaration public static void UpdateHref(XRefMap map, Uri uri) Parameters Type Name Description XRefMap map Uri uri Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMapReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMapReader.html",
    "title": "Class XRefMapReader | DocFX website",
    "keywords": "Class XRefMapReader Inheritance Object XRefRedirectionReader XRefMapReader Inherited Members XRefRedirectionReader.Find(String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class XRefMapReader : XRefRedirectionReader, IXRefContainerReader Constructors | Improve this Doc View Source XRefMapReader(String, Dictionary<String, IXRefContainer>) Declaration public XRefMapReader(string majorKey, Dictionary<string, IXRefContainer> maps) Parameters Type Name Description String majorKey Dictionary < String , IXRefContainer > maps Methods | Improve this Doc View Source GetMap(String) Declaration protected override IXRefContainer GetMap(string name) Parameters Type Name Description String name Returns Type Description IXRefContainer Overrides XRefRedirectionReader.GetMap(String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMapRedirection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMapRedirection.html",
    "title": "Class XRefMapRedirection | DocFX website",
    "keywords": "Class XRefMapRedirection Inheritance Object XRefMapRedirection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefMapRedirection Properties | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source UidPrefix Declaration [YamlMember(Alias = \"uidPrefix\")] public string UidPrefix { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.CascadableOptions.html": {
    "href": "api/Microsoft.DocAsCode.CascadableOptions.html",
    "title": "Class CascadableOptions | DocFX website",
    "keywords": "Class CascadableOptions Inheritance Object CascadableOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class CascadableOptions Properties | Improve this Doc View Source ForceRebuild Declaration [Option('f', \"force\")] public bool ForceRebuild { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Log Declaration [Option('l', \"log\", HelpText = \"Specify the file name to save processing log\")] public string Log { get; set; } Property Value Type Description String | Improve this Doc View Source LogLevel Declaration [Option(\"logLevel\", HelpText = \"Specify to which log level will be logged. By default log level >= Info will be logged. The acceptable value could be Verbose, Info, Warning, Error.\")] public LogLevel? LogLevel { get; set; } Property Value Type Description Nullable < LogLevel > | Improve this Doc View Source Port Declaration [Option('p', \"port\", HelpText = \"Specify the port of the hosted website\")] public int ? Port { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source PreserveRawInlineComments Declaration [Option(\"raw\", HelpText = \"Preserve the existing xml comment tags inside 'summary' triple slash comments\")] public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RootOutputFolder Declaration [Option('o', \"output\")] public string RootOutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source Serve Declaration [Option('s', \"serve\", HelpText = \"Host the generated documentation to a website\")] public bool Serve { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Templates Declaration [OptionList('t', \"template\", Separator = ',', HelpText = \"Specifies the template name to apply to. If not specified, output YAML file will not be transformed.\")] public List<string> Templates { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Themes Declaration [OptionList(\"theme\", Separator = ',', HelpText = \"Specifies which theme to use. By default 'default' theme is offered.\")] public List<string> Themes { get; set; } Property Value Type Description List < String > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ConsoleLogListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.ConsoleLogListener.html",
    "title": "Class ConsoleLogListener | DocFX website",
    "keywords": "Class ConsoleLogListener Inheritance Object ConsoleLogListener Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class ConsoleLogListener : ILoggerListener, IDisposable Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Flush() Declaration public void Flush() Implements ILoggerListener.Flush() | Improve this Doc View Source WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ConsoleUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.ConsoleUtility.html",
    "title": "Class ConsoleUtility | DocFX website",
    "keywords": "Class ConsoleUtility Inheritance Object ConsoleUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class ConsoleUtility Methods | Improve this Doc View Source WriteLine(String, ConsoleColor) Declaration public static void WriteLine(string message, ConsoleColor color) Parameters Type Name Description String message ConsoleColor color"
  },
  "api/Microsoft.DocAsCode.Common.CrossAppDomainListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.CrossAppDomainListener.html",
    "title": "Class CrossAppDomainListener | DocFX website",
    "keywords": "Class CrossAppDomainListener Inheritance Object MarshalByRefObject CrossAppDomainListener Inherited Members MarshalByRefObject.MemberwiseClone(Boolean) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class CrossAppDomainListener : MarshalByRefObject, ILoggerListener, IDisposable Properties | Improve this Doc View Source LogLevelThreshold Declaration public LogLevel LogLevelThreshold { get; set; } Property Value Type Description LogLevel Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Flush() Declaration public void Flush() Implements ILoggerListener.Flush() | Improve this Doc View Source WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.HtmlLogListener.MessageSeverity.html": {
    "href": "api/Microsoft.DocAsCode.Common.HtmlLogListener.MessageSeverity.html",
    "title": "Enum HtmlLogListener.MessageSeverity | DocFX website",
    "keywords": "Enum HtmlLogListener.MessageSeverity Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public enum MessageSeverity Fields Name Description Diagnostic Error Info Verbose Warning Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.HtmlLogListener.ReportItem.html": {
    "href": "api/Microsoft.DocAsCode.Common.HtmlLogListener.ReportItem.html",
    "title": "Class HtmlLogListener.ReportItem | DocFX website",
    "keywords": "Class HtmlLogListener.ReportItem Inheritance Object HtmlLogListener.ReportItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ReportItem Properties | Improve this Doc View Source DateTime Declaration [JsonProperty(\"date_time\")] public DateTime DateTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source File Declaration [JsonProperty(\"file\")] public string File { get; set; } Property Value Type Description String | Improve this Doc View Source Line Declaration [JsonProperty(\"line\")] public string Line { get; set; } Property Value Type Description String | Improve this Doc View Source Message Declaration [JsonProperty(\"message\")] public string Message { get; set; } Property Value Type Description String | Improve this Doc View Source Severity Declaration [JsonProperty(\"message_severity\")] public HtmlLogListener.MessageSeverity Severity { get; set; } Property Value Type Description HtmlLogListener.MessageSeverity | Improve this Doc View Source Source Declaration [JsonProperty(\"source\")] public string Source { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.HtmlLogListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.HtmlLogListener.html",
    "title": "Class HtmlLogListener | DocFX website",
    "keywords": "Class HtmlLogListener Inheritance Object HtmlLogListener Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class HtmlLogListener : ILoggerListener, IDisposable Constructors | Improve this Doc View Source HtmlLogListener(StreamWriter) Declaration public HtmlLogListener(StreamWriter writer) Parameters Type Name Description StreamWriter writer | Improve this Doc View Source HtmlLogListener(String) Declaration public HtmlLogListener(string reportPath) Parameters Type Name Description String reportPath Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Escape(String, Boolean) Declaration public string Escape(string html, bool encode = false) Parameters Type Name Description String html Boolean encode Returns Type Description String | Improve this Doc View Source Flush() Declaration public void Flush() Implements ILoggerListener.Flush() | Improve this Doc View Source ReplaceRegex(String, Regex, String) Declaration public string ReplaceRegex(string input, Regex pattern, string replacement) Parameters Type Name Description String input Regex pattern String replacement Returns Type Description String | Improve this Doc View Source WriteCommonHeader() Declaration public void WriteCommonHeader() | Improve this Doc View Source WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ILoggerListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.ILoggerListener.html",
    "title": "Interface ILoggerListener | DocFX website",
    "keywords": "Interface ILoggerListener Inherited Members IDisposable.Dispose() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public interface ILoggerListener : IDisposable Methods | Improve this Doc View Source Flush() Declaration void Flush() | Improve this Doc View Source WriteLine(ILogItem) Declaration void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ILogItem.html": {
    "href": "api/Microsoft.DocAsCode.Common.ILogItem.html",
    "title": "Interface ILogItem | DocFX website",
    "keywords": "Interface ILogItem Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public interface ILogItem Properties | Improve this Doc View Source File Declaration string File { get; } Property Value Type Description String | Improve this Doc View Source Line Declaration string Line { get; } Property Value Type Description String | Improve this Doc View Source LogLevel Declaration LogLevel LogLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source Message Declaration string Message { get; } Property Value Type Description String | Improve this Doc View Source Phase Declaration string Phase { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.JsonUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.JsonUtility.html",
    "title": "Class JsonUtility | DocFX website",
    "keywords": "Class JsonUtility Inheritance Object JsonUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class JsonUtility Fields | Improve this Doc View Source DefaultSerializer Declaration public static readonly ThreadLocal<JsonSerializer> DefaultSerializer Field Value Type Description ThreadLocal < Newtonsoft.Json.JsonSerializer > Methods | Improve this Doc View Source Deserialize<T>(TextReader, JsonSerializer) Declaration public static T Deserialize<T>(TextReader reader, JsonSerializer serializer = null) Parameters Type Name Description TextReader reader Newtonsoft.Json.JsonSerializer serializer Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Deserialize<T>(String, JsonSerializer) Declaration public static T Deserialize<T>(string path, JsonSerializer serializer = null) Parameters Type Name Description String path Newtonsoft.Json.JsonSerializer serializer Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source FromJsonString<T>(String, JsonSerializer) Declaration public static T FromJsonString<T>(this string json, JsonSerializer serializer = null) Parameters Type Name Description String json Newtonsoft.Json.JsonSerializer serializer Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Serialize(TextWriter, Object, Formatting, JsonSerializer) Declaration public static void Serialize(TextWriter writer, object graph, Formatting formatting = Formatting.None, JsonSerializer serializer = null) Parameters Type Name Description TextWriter writer Object graph Newtonsoft.Json.Formatting formatting Newtonsoft.Json.JsonSerializer serializer | Improve this Doc View Source Serialize(Object, Formatting, JsonSerializer) Declaration public static string Serialize(object graph, Formatting formatting = Formatting.None, JsonSerializer serializer = null) Parameters Type Name Description Object graph Newtonsoft.Json.Formatting formatting Newtonsoft.Json.JsonSerializer serializer Returns Type Description String | Improve this Doc View Source Serialize(String, Object, Formatting, JsonSerializer) Declaration public static void Serialize(string path, object graph, Formatting formatting = Formatting.None, JsonSerializer serializer = null) Parameters Type Name Description String path Object graph Newtonsoft.Json.Formatting formatting Newtonsoft.Json.JsonSerializer serializer | Improve this Doc View Source ToJsonString(Object, Formatting, JsonSerializer) Declaration public static string ToJsonString(this object graph, Formatting formatting = Formatting.None, JsonSerializer serializer = null) Parameters Type Name Description Object graph Newtonsoft.Json.Formatting formatting Newtonsoft.Json.JsonSerializer serializer Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.Common.Logger.html": {
    "href": "api/Microsoft.DocAsCode.Common.Logger.html",
    "title": "Class Logger | DocFX website",
    "keywords": "Class Logger Inheritance Object Logger Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class Logger Fields | Improve this Doc View Source LogLevelThreshold Declaration public static volatile LogLevel LogLevelThreshold Field Value Type Description LogLevel Methods | Improve this Doc View Source FindListener(Predicate<ILoggerListener>) Declaration public static ILoggerListener FindListener(Predicate<ILoggerListener> predicate) Parameters Type Name Description Predicate < ILoggerListener > predicate Returns Type Description ILoggerListener | Improve this Doc View Source Flush() Declaration public static void Flush() | Improve this Doc View Source Log(ILogItem) Declaration public static void Log(ILogItem result) Parameters Type Name Description ILogItem result | Improve this Doc View Source Log(LogLevel, String, String, String, String) Declaration public static void Log(LogLevel level, string message, string phase = null, string file = null, string line = null) Parameters Type Name Description LogLevel level String message String phase String file String line | Improve this Doc View Source Log(Object) Declaration public static void Log(object result) Parameters Type Name Description Object result | Improve this Doc View Source LogDiagnostic(String, String, String, String) Declaration public static void LogDiagnostic(string message, string phase = null, string file = null, string line = null) Parameters Type Name Description String message String phase String file String line | Improve this Doc View Source LogError(String, String, String, String) Declaration public static void LogError(string message, string phase = null, string file = null, string line = null) Parameters Type Name Description String message String phase String file String line | Improve this Doc View Source LogInfo(String, String, String, String) Declaration public static void LogInfo(string message, string phase = null, string file = null, string line = null) Parameters Type Name Description String message String phase String file String line | Improve this Doc View Source LogVerbose(String, String, String, String) Declaration public static void LogVerbose(string message, string phase = null, string file = null, string line = null) Parameters Type Name Description String message String phase String file String line | Improve this Doc View Source LogWarning(String, String, String, String) Declaration public static void LogWarning(string message, string phase = null, string file = null, string line = null) Parameters Type Name Description String message String phase String file String line | Improve this Doc View Source RegisterListener(ILoggerListener) Declaration public static void RegisterListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener | Improve this Doc View Source UnregisterAllListeners() Declaration public static void UnregisterAllListeners() | Improve this Doc View Source UnregisterListener(ILoggerListener) Declaration public static void UnregisterListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener"
  },
  "api/Microsoft.DocAsCode.Common.LoggerFileScope.html": {
    "href": "api/Microsoft.DocAsCode.Common.LoggerFileScope.html",
    "title": "Class LoggerFileScope | DocFX website",
    "keywords": "Class LoggerFileScope Inheritance Object LoggerFileScope Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class LoggerFileScope : IDisposable Constructors | Improve this Doc View Source LoggerFileScope(String) Declaration public LoggerFileScope(string fileName) Parameters Type Name Description String fileName Methods | Improve this Doc View Source Capture() Declaration public static object Capture() Returns Type Description Object | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Restore(Object) Declaration public static LoggerFileScope Restore(object captured) Parameters Type Name Description Object captured Returns Type Description LoggerFileScope Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.LoggerPhaseScope.html": {
    "href": "api/Microsoft.DocAsCode.Common.LoggerPhaseScope.html",
    "title": "Class LoggerPhaseScope | DocFX website",
    "keywords": "Class LoggerPhaseScope Inheritance Object LoggerPhaseScope Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class LoggerPhaseScope : IDisposable Constructors | Improve this Doc View Source LoggerPhaseScope(String) Declaration public LoggerPhaseScope(string phaseName) Parameters Type Name Description String phaseName | Improve this Doc View Source LoggerPhaseScope(String, Boolean) Declaration public LoggerPhaseScope(string phaseName, bool enablePerformanceScope) Parameters Type Name Description String phaseName Boolean enablePerformanceScope Methods | Improve this Doc View Source Capture() Declaration public static object Capture() Returns Type Description Object | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Restore(Object) Declaration public static LoggerPhaseScope Restore(object captured) Parameters Type Name Description Object captured Returns Type Description LoggerPhaseScope | Improve this Doc View Source Restore(Object, Boolean) Declaration public static LoggerPhaseScope Restore(object captured, bool enablePerformanceScope) Parameters Type Name Description Object captured Boolean enablePerformanceScope Returns Type Description LoggerPhaseScope Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.LogLevel.html": {
    "href": "api/Microsoft.DocAsCode.Common.LogLevel.html",
    "title": "Enum LogLevel | DocFX website",
    "keywords": "Enum LogLevel Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public enum LogLevel Fields Name Description Diagnostic Error Info Verbose Warning Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.IncrementalCheckPropertiesResolver.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.IncrementalCheckPropertiesResolver.html",
    "title": "Class IncrementalCheckPropertiesResolver | DocFX website",
    "keywords": "Class IncrementalCheckPropertiesResolver Inheritance Object Newtonsoft.Json.Serialization.DefaultContractResolver IncrementalCheckPropertiesResolver Inherited Members Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection) Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo) Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo) Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String) Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String) Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String) Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public sealed class IncrementalCheckPropertiesResolver : DefaultContractResolver, IContractResolver Methods | Improve this Doc View Source CreateProperty(MemberInfo, MemberSerialization) Declaration protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization) Parameters Type Name Description MemberInfo member Newtonsoft.Json.MemberSerialization memberSerialization Returns Type Description Newtonsoft.Json.Serialization.JsonProperty Overrides Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.ProcessorInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.ProcessorInfo.html",
    "title": "Class ProcessorInfo | DocFX website",
    "keywords": "Class ProcessorInfo Inheritance Object ProcessorInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public class ProcessorInfo Properties | Improve this Doc View Source IncrementalContextHash The context hash for incremental. Declaration public string IncrementalContextHash { get; set; } Property Value Type Description String | Improve this Doc View Source Name The name of processor. Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Steps The information for steps. Declaration public List<ProcessorStepInfo> Steps { get; } Property Value Type Description List < ProcessorStepInfo > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.ProcessorStepInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.ProcessorStepInfo.html",
    "title": "Class ProcessorStepInfo | DocFX website",
    "keywords": "Class ProcessorStepInfo Inheritance Object ProcessorStepInfo Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public sealed class ProcessorStepInfo Properties | Improve this Doc View Source IncrementalContextHash The context hash for incremental. Declaration public string IncrementalContextHash { get; set; } Property Value Type Description String | Improve this Doc View Source Name The name of processor step. Declaration public string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.html",
    "title": "Namespace Microsoft.DocAsCode.Build.Incrementals | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.Incrementals Classes BuildInfo BuildOutputItem BuildOutputs BuildVersionInfo ChangeItem ChangeList DependencyGraph FileAttributeItem FileAttributes IncrementalCheckAttribute IncrementalCheckPropertiesResolver ProcessorInfo ProcessorStepInfo Enums ChangeKind ChangeKindWithDependency"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyOverwriteDocumentForMref.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyOverwriteDocumentForMref.html",
    "title": "Class ApplyOverwriteDocumentForMref | DocFX website",
    "keywords": "Class ApplyOverwriteDocumentForMref Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument ApplyOverwriteDocumentForMref Inherited Members ApplyOverwriteDocument.Postbuild(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrites(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrite<T>(IHostService, List<FileModel>, String, List<FileModel>, Func<FileModel, String, IHostService, IEnumerable<T>>, Func<FileModel, String, IHostService, IEnumerable<T>>) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof (IDocumentBuildStep))] public class ApplyOverwriteDocumentForMref : ApplyOverwriteDocument, IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) Declaration protected override void ApplyOverwrite(IHostService host, List<FileModel> od, string uid, List<FileModel> articles) Parameters Type Name Description IHostService host List < FileModel > od String uid List < FileModel > articles Overrides ApplyOverwriteDocument.ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) | Improve this Doc View Source GetItemsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<ItemViewModel> GetItemsFromOverwriteDocument(FileModel fileModel, string uid, IHostService host) Parameters Type Name Description FileModel fileModel String uid IHostService host Returns Type Description IEnumerable < ItemViewModel > | Improve this Doc View Source GetItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<ItemViewModel> GetItemsToOverwrite(FileModel fileModel, string uid, IHostService host) Parameters Type Name Description FileModel fileModel String uid IHostService host Returns Type Description IEnumerable < ItemViewModel > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyPlatformVersion.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyPlatformVersion.html",
    "title": "Class ApplyPlatformVersion | DocFX website",
    "keywords": "Class ApplyPlatformVersion Inheritance Object BaseDocumentBuildStep ApplyPlatformVersion Inherited Members BaseDocumentBuildStep.Build(FileModel, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax public class ApplyPlatformVersion : BaseDocumentBuildStep, IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Prebuild(ImmutableList<FileModel>, IHostService) Declaration public override IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Overrides BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildManagedReferenceDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildManagedReferenceDocument.html",
    "title": "Class BuildManagedReferenceDocument | DocFX website",
    "keywords": "Class BuildManagedReferenceDocument Inheritance Object BaseDocumentBuildStep BuildManagedReferenceDocument Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof (IDocumentBuildStep))] public class BuildManagedReferenceDocument : BaseDocumentBuildStep, IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) | Improve this Doc View Source BuildItem(IHostService, ItemViewModel, FileModel, Func<String, Boolean>) Declaration public static ItemViewModel BuildItem(IHostService host, ItemViewModel item, FileModel model, Func<string, bool> filter = null) Parameters Type Name Description IHostService host ItemViewModel item FileModel model Func < String , Boolean > filter Returns Type Description ItemViewModel Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutput.html",
    "title": "Class ApiBuildOutput | DocFX website",
    "keywords": "Class ApiBuildOutput Inheritance Object ApiBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiBuildOutput Properties | Improve this Doc View Source AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Children Declaration [YamlMember(Alias = \"children\")] [JsonProperty(\"children\")] public List<ApiReferenceBuildOutput> Children { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > | Improve this Doc View Source Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ApiExceptionInfoBuildOutput> Exceptions { get; set; } Property Value Type Description List < ApiExceptionInfoBuildOutput > | Improve this Doc View Source ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<ApiReferenceBuildOutput> ExtensionMethods { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public List<ApiLanguageValuePair> FullName { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<ApiNames> Implements { get; set; } Property Value Type Description List < ApiNames > | Improve this Doc View Source Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"inheritance\")] public List<ApiReferenceBuildOutput> Inheritance { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > | Improve this Doc View Source InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<ApiReferenceBuildOutput> InheritedMembers { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > | Improve this Doc View Source IsExplicitInterfaceImplementation Declaration [YamlMember(Alias = \"isEii\")] [JsonProperty(\"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Level Declaration [YamlMember(Alias = \"level\")] [JsonProperty(\"level\")] public int Level { get; } Property Value Type Description Int32 | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public List<ApiLanguageValuePair> Name { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public ApiReferenceBuildOutput NamespaceName { get; set; } Property Value Type Description ApiReferenceBuildOutput | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public List<ApiLanguageValuePair> NameWithType { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public ApiNames Overridden { get; set; } Property Value Type Description ApiNames | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public ApiReferenceBuildOutput Parent { get; set; } Property Value Type Description ApiReferenceBuildOutput | Improve this Doc View Source Platform Declaration [YamlMember(Alias = \"platform\")] [JsonProperty(\"platform\")] public List<string> Platform { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<ApiLinkInfoBuildOutput> SeeAlsos { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > | Improve this Doc View Source Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<ApiLinkInfoBuildOutput> Sees { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > | Improve this Doc View Source Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source SupportedLanguages Declaration [YamlMember(Alias = \"langs\")] [JsonProperty(\"langs\")] public string[] SupportedLanguages { get; set; } Property Value Type Description String [] | Improve this Doc View Source Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public ApiSyntaxBuildOutput Syntax { get; set; } Property Value Type Description ApiSyntaxBuildOutput | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public MemberType? Type { get; set; } Property Value Type Description Nullable < MemberType > | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source FromModel(PageViewModel) Declaration public static ApiBuildOutput FromModel(PageViewModel model) Parameters Type Name Description PageViewModel model Returns Type Description ApiBuildOutput Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutputUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutputUtility.html",
    "title": "Class ApiBuildOutputUtility | DocFX website",
    "keywords": "Class ApiBuildOutputUtility Inheritance Object ApiBuildOutputUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax public static class ApiBuildOutputUtility Methods | Improve this Doc View Source GetApiNames(String, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiNames GetApiNames(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiNames | Improve this Doc View Source GetHref(String, String) Declaration public static string GetHref(string url, string altText = null) Parameters Type Name Description String url String altText Returns Type Description String | Improve this Doc View Source GetReferenceViewModel(String, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiReferenceBuildOutput GetReferenceViewModel(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiReferenceBuildOutput | Improve this Doc View Source GetReferenceViewModel(String, Dictionary<String, ApiReferenceBuildOutput>, String[], Int32) Declaration public static ApiReferenceBuildOutput GetReferenceViewModel(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages, int index) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Int32 index Returns Type Description ApiReferenceBuildOutput | Improve this Doc View Source GetSpec(String, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static List<ApiLanguageValuePair> GetSpec(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description List < ApiLanguageValuePair > | Improve this Doc View Source GetXref(String, String, String) Declaration public static string GetXref(string uid, string fullName = null, string name = null) Parameters Type Name Description String uid String fullName String name Returns Type Description String | Improve this Doc View Source TransformToLanguagePairList(String, SortedList<String, String>, String[]) Declaration public static List<ApiLanguageValuePair> TransformToLanguagePairList(string defaultValue, SortedList<string, string> values, string[] supportedLanguages) Parameters Type Name Description String defaultValue SortedList < String , String > values String [] supportedLanguages Returns Type Description List < ApiLanguageValuePair >"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiExceptionInfoBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiExceptionInfoBuildOutput.html",
    "title": "Class ApiExceptionInfoBuildOutput | DocFX website",
    "keywords": "Class ApiExceptionInfoBuildOutput Inheritance Object ApiExceptionInfoBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiExceptionInfoBuildOutput Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames Methods | Improve this Doc View Source Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages | Improve this Doc View Source FromModel(ExceptionInfo) Declaration public static ApiExceptionInfoBuildOutput FromModel(ExceptionInfo model) Parameters Type Name Description ExceptionInfo model Returns Type Description ApiExceptionInfoBuildOutput | Improve this Doc View Source FromModel(ExceptionInfo, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiExceptionInfoBuildOutput FromModel(ExceptionInfo model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description ExceptionInfo model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiExceptionInfoBuildOutput Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLanguageValuePair.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLanguageValuePair.html",
    "title": "Class ApiLanguageValuePair | DocFX website",
    "keywords": "Class ApiLanguageValuePair Inheritance Object ApiLanguageValuePair Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiLanguageValuePair Properties | Improve this Doc View Source Language Declaration [YamlMember(Alias = \"lang\")] [JsonProperty(\"lang\")] public string Language { get; set; } Property Value Type Description String | Improve this Doc View Source Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public string Value { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLinkInfoBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLinkInfoBuildOutput.html",
    "title": "Class ApiLinkInfoBuildOutput | DocFX website",
    "keywords": "Class ApiLinkInfoBuildOutput Inheritance Object ApiLinkInfoBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiLinkInfoBuildOutput Properties | Improve this Doc View Source LinkType Declaration [YamlMember(Alias = \"linkType\")] [JsonProperty(\"linkType\")] public LinkType LinkType { get; set; } Property Value Type Description LinkType | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames | Improve this Doc View Source Url Declaration [YamlMember(Alias = \"url\")] [JsonProperty(\"url\")] public string Url { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages | Improve this Doc View Source FromModel(LinkInfo) Declaration public static ApiLinkInfoBuildOutput FromModel(LinkInfo model) Parameters Type Name Description LinkInfo model Returns Type Description ApiLinkInfoBuildOutput | Improve this Doc View Source FromModel(LinkInfo, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiLinkInfoBuildOutput FromModel(LinkInfo model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description LinkInfo model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiLinkInfoBuildOutput Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiNames.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiNames.html",
    "title": "Class ApiNames | DocFX website",
    "keywords": "Class ApiNames Inheritance Object ApiNames Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiNames Properties | Improve this Doc View Source Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public List<ApiLanguageValuePair> FullName { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public List<ApiLanguageValuePair> Name { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public List<ApiLanguageValuePair> NameWithType { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Spec Declaration [YamlMember(Alias = \"specName\")] [JsonProperty(\"specName\")] public List<ApiLanguageValuePair> Spec { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source FromUid(String) Declaration public static ApiNames FromUid(string uid) Parameters Type Name Description String uid Returns Type Description ApiNames Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiParameterBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiParameterBuildOutput.html",
    "title": "Class ApiParameterBuildOutput | DocFX website",
    "keywords": "Class ApiParameterBuildOutput Inheritance Object ApiParameterBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiParameterBuildOutput Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames Methods | Improve this Doc View Source Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages | Improve this Doc View Source FromModel(ApiParameter) Declaration public static ApiParameterBuildOutput FromModel(ApiParameter model) Parameters Type Name Description ApiParameter model Returns Type Description ApiParameterBuildOutput | Improve this Doc View Source FromModel(ApiParameter, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiParameterBuildOutput FromModel(ApiParameter model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description ApiParameter model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiParameterBuildOutput Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiReferenceBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiReferenceBuildOutput.html",
    "title": "Class ApiReferenceBuildOutput | DocFX website",
    "keywords": "Class ApiReferenceBuildOutput Inheritance Object ApiReferenceBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiReferenceBuildOutput Properties | Improve this Doc View Source AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ApiExceptionInfoBuildOutput> Exceptions { get; set; } Property Value Type Description List < ApiExceptionInfoBuildOutput > | Improve this Doc View Source ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<string> ExtensionMethods { get; set; } Property Value Type Description List < String > | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public List<ApiLanguageValuePair> FullName { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<ApiNames> Implements { get; set; } Property Value Type Description List < ApiNames > | Improve this Doc View Source Index Declaration [YamlMember(Alias = \"index\")] [JsonProperty(\"index\")] public int ? Index { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<ApiReferenceBuildOutput> Inheritance { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > | Improve this Doc View Source InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<string> InheritedMembers { get; set; } Property Value Type Description List < String > | Improve this Doc View Source IsExplicitInterfaceImplementation Declaration [YamlMember(Alias = \"isEii\")] [JsonProperty(\"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsExternal Declaration [JsonProperty(\"isExternal\")] [YamlMember(Alias = \"isExternal\")] public bool ? IsExternal { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Level Declaration [YamlMember(Alias = \"level\")] [JsonProperty(\"level\")] public int Level { get; } Property Value Type Description Int32 | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonIgnore] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Modifiers Declaration [ExtensibleMember(\"modifiers.\")] [JsonIgnore] public SortedList<string, List<string>> Modifiers { get; set; } Property Value Type Description SortedList < String , List < String >> | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public List<ApiLanguageValuePair> Name { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public string NamespaceName { get; set; } Property Value Type Description String | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public List<ApiLanguageValuePair> NameWithType { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public ApiNames Overridden { get; set; } Property Value Type Description ApiNames | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String | Improve this Doc View Source Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<ApiLinkInfoBuildOutput> SeeAlsos { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > | Improve this Doc View Source Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<ApiLinkInfoBuildOutput> Sees { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > | Improve this Doc View Source Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Spec Declaration [YamlMember(Alias = \"specName\")] [JsonProperty(\"specName\")] public List<ApiLanguageValuePair> Spec { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public ApiSyntaxBuildOutput Syntax { get; set; } Property Value Type Description ApiSyntaxBuildOutput | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages | Improve this Doc View Source FromModel(ReferenceViewModel, String[]) Declaration public static ApiReferenceBuildOutput FromModel(ReferenceViewModel vm, string[] supportedLanguages) Parameters Type Name Description ReferenceViewModel vm String [] supportedLanguages Returns Type Description ApiReferenceBuildOutput | Improve this Doc View Source FromModel(ItemViewModel) Declaration public static ApiReferenceBuildOutput FromModel(ItemViewModel vm) Parameters Type Name Description ItemViewModel vm Returns Type Description ApiReferenceBuildOutput | Improve this Doc View Source FromUid(String) Declaration public static ApiReferenceBuildOutput FromUid(string uid) Parameters Type Name Description String uid Returns Type Description ApiReferenceBuildOutput | Improve this Doc View Source GetSpecNames(String, String[], SortedList<String, List<SpecViewModel>>) Declaration public static List<ApiLanguageValuePair> GetSpecNames(string xref, string[] supportedLanguages, SortedList<string, List<SpecViewModel>> specs = null) Parameters Type Name Description String xref String [] supportedLanguages SortedList < String , List < SpecViewModel >> specs Returns Type Description List < ApiLanguageValuePair > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiSyntaxBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiSyntaxBuildOutput.html",
    "title": "Class ApiSyntaxBuildOutput | DocFX website",
    "keywords": "Class ApiSyntaxBuildOutput Inheritance Object ApiSyntaxBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiSyntaxBuildOutput Properties | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public List<ApiLanguageValuePair> Content { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ApiParameterBuildOutput> Parameters { get; set; } Property Value Type Description List < ApiParameterBuildOutput > | Improve this Doc View Source Return Declaration [YamlMember(Alias = \"return\")] [JsonProperty(\"return\")] public ApiParameterBuildOutput Return { get; set; } Property Value Type Description ApiParameterBuildOutput | Improve this Doc View Source TypeParameters Declaration [YamlMember(Alias = \"typeParameters\")] [JsonProperty(\"typeParameters\")] public List<ApiParameterBuildOutput> TypeParameters { get; set; } Property Value Type Description List < ApiParameterBuildOutput > Methods | Improve this Doc View Source Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages | Improve this Doc View Source FromModel(SyntaxDetailViewModel, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiSyntaxBuildOutput FromModel(SyntaxDetailViewModel model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description SyntaxDetailViewModel model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiSyntaxBuildOutput | Improve this Doc View Source FromModel(SyntaxDetailViewModel, String[]) Declaration public static ApiSyntaxBuildOutput FromModel(SyntaxDetailViewModel model, string[] supportedLanguages) Parameters Type Name Description SyntaxDetailViewModel model String [] supportedLanguages Returns Type Description ApiSyntaxBuildOutput Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Classes ApiBuildOutput ApiBuildOutputUtility ApiExceptionInfoBuildOutput ApiLanguageValuePair ApiLinkInfoBuildOutput ApiNames ApiParameterBuildOutput ApiReferenceBuildOutput ApiSyntaxBuildOutput"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.FillReferenceInformation.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.FillReferenceInformation.html",
    "title": "Class FillReferenceInformation | DocFX website",
    "keywords": "Class FillReferenceInformation Inheritance Object BaseDocumentBuildStep FillReferenceInformation Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof (IDocumentBuildStep))] public class FillReferenceInformation : BaseDocumentBuildStep, IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Overrides BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ManagedReferenceDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ManagedReferenceDocumentProcessor.html",
    "title": "Class ManagedReferenceDocumentProcessor | DocFX website",
    "keywords": "Class ManagedReferenceDocumentProcessor Inheritance Object DisposableDocumentProcessor ManagedReferenceDocumentProcessor Inherited Members DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(typeof (IDocumentProcessor))] public class ManagedReferenceDocumentProcessor : DisposableDocumentProcessor, IDocumentProcessor, IDisposable Properties | Improve this Doc View Source BuildSteps Declaration [ImportMany(\"ManagedReferenceDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Methods | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Overrides DisposableDocumentProcessor.GetProcessingPriority(FileAndType) | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides DisposableDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides DisposableDocumentProcessor.Save(FileModel) | Improve this Doc View Source UpdateModelContent(FileModel) Declaration protected virtual void UpdateModelContent(FileModel model) Parameters Type Name Description FileModel model Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.MergeManagedReferenceDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.MergeManagedReferenceDocument.html",
    "title": "Class MergeManagedReferenceDocument | DocFX website",
    "keywords": "Class MergeManagedReferenceDocument Inheritance Object BaseDocumentBuildStep MergeManagedReferenceDocument Inherited Members BaseDocumentBuildStep.Build(FileModel, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax public class MergeManagedReferenceDocument : BaseDocumentBuildStep, IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Prebuild(ImmutableList<FileModel>, IHostService) Declaration public override IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Overrides BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.Utility.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.Utility.html",
    "title": "Class Utility | DocFX website",
    "keywords": "Class Utility Inheritance Object Utility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax public static class Utility Methods | Improve this Doc View Source GetHtmlId(String) Declaration public static string GetHtmlId(string id) Parameters Type Name Description String id Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ValidateManagedReferenceDocumentMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ValidateManagedReferenceDocumentMetadata.html",
    "title": "Class ValidateManagedReferenceDocumentMetadata | DocFX website",
    "keywords": "Class ValidateManagedReferenceDocumentMetadata Inheritance Object BaseDocumentBuildStep ValidateManagedReferenceDocumentMetadata Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ManagedReference Assembly :Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof (IDocumentBuildStep))] public class ValidateManagedReferenceDocumentMetadata : BaseDocumentBuildStep, IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ManagedReference | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ManagedReference Classes ApplyOverwriteDocumentForMref ApplyPlatformVersion BuildManagedReferenceDocument FillReferenceInformation ManagedReferenceDocumentProcessor MergeManagedReferenceDocument Utility ValidateManagedReferenceDocumentMetadata"
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.IResourceFileConfig.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.IResourceFileConfig.html",
    "title": "Interface IResourceFileConfig | DocFX website",
    "keywords": "Interface IResourceFileConfig Namespace :Microsoft.DocAsCode.Build.ResourceFiles Assembly :Microsoft.DocAsCode.Build.ResourceFiles.dll Syntax public interface IResourceFileConfig Methods | Improve this Doc View Source IsResourceFile(String) Declaration bool IsResourceFile(string fileExtension) Parameters Type Name Description String fileExtension Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.ResourceDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.ResourceDocumentProcessor.html",
    "title": "Class ResourceDocumentProcessor | DocFX website",
    "keywords": "Class ResourceDocumentProcessor Inheritance Object DisposableDocumentProcessor ResourceDocumentProcessor Inherited Members DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ResourceFiles Assembly :Microsoft.DocAsCode.Build.ResourceFiles.dll Syntax [Export(typeof (IDocumentProcessor))] public class ResourceDocumentProcessor : DisposableDocumentProcessor, IDocumentProcessor, IDisposable Properties | Improve this Doc View Source BuildSteps Declaration [ImportMany(\"ResourceDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Configs Declaration [ImportMany] public IEnumerable<IResourceFileConfig> Configs { get; set; } Property Value Type Description IEnumerable < IResourceFileConfig > | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Methods | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Overrides DisposableDocumentProcessor.GetProcessingPriority(FileAndType) | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides DisposableDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides DisposableDocumentProcessor.Save(FileModel) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.ValidateResourceMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.ValidateResourceMetadata.html",
    "title": "Class ValidateResourceMetadata | DocFX website",
    "keywords": "Class ValidateResourceMetadata Inheritance Object BaseDocumentBuildStep ValidateResourceMetadata Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ResourceFiles Assembly :Microsoft.DocAsCode.Build.ResourceFiles.dll Syntax [Export(\"ResourceDocumentProcessor\", typeof (IDocumentBuildStep))] public class ValidateResourceMetadata : BaseDocumentBuildStep, IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ResourceFiles | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ResourceFiles Classes ResourceDocumentProcessor ValidateResourceMetadata Interfaces IResourceFileConfig"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.ApplyOverwriteDocumentForRestApi.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.ApplyOverwriteDocumentForRestApi.html",
    "title": "Class ApplyOverwriteDocumentForRestApi | DocFX website",
    "keywords": "Class ApplyOverwriteDocumentForRestApi Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument ApplyOverwriteDocumentForRestApi Inherited Members ApplyOverwriteDocument.Postbuild(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrites(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrite<T>(IHostService, List<FileModel>, String, List<FileModel>, Func<FileModel, String, IHostService, IEnumerable<T>>, Func<FileModel, String, IHostService, IEnumerable<T>>) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(\"RestApiDocumentProcessor\", typeof (IDocumentBuildStep))] public class ApplyOverwriteDocumentForRestApi : ApplyOverwriteDocument, IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) Declaration protected override void ApplyOverwrite(IHostService host, List<FileModel> od, string uid, List<FileModel> articles) Parameters Type Name Description IHostService host List < FileModel > od String uid List < FileModel > articles Overrides ApplyOverwriteDocument.ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) | Improve this Doc View Source GetChildItemsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<RestApiChildItemViewModel> GetChildItemsFromOverwriteDocument(FileModel overwriteModel, string uid, IHostService host) Parameters Type Name Description FileModel overwriteModel String uid IHostService host Returns Type Description IEnumerable < RestApiChildItemViewModel > | Improve this Doc View Source GetChildItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<RestApiChildItemViewModel> GetChildItemsToOverwrite(FileModel articleModel, string uid, IHostService host) Parameters Type Name Description FileModel articleModel String uid IHostService host Returns Type Description IEnumerable < RestApiChildItemViewModel > | Improve this Doc View Source GetRootItemsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<RestApiRootItemViewModel> GetRootItemsFromOverwriteDocument(FileModel overwriteModel, string uid, IHostService host) Parameters Type Name Description FileModel overwriteModel String uid IHostService host Returns Type Description IEnumerable < RestApiRootItemViewModel > | Improve this Doc View Source GetRootItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<RestApiRootItemViewModel> GetRootItemsToOverwrite(FileModel articleModel, string uid, IHostService host) Parameters Type Name Description FileModel articleModel String uid IHostService host Returns Type Description IEnumerable < RestApiRootItemViewModel > | Improve this Doc View Source GetTagItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<RestApiTagViewModel> GetTagItemsToOverwrite(FileModel articleModel, string uid, IHostService host) Parameters Type Name Description FileModel articleModel String uid IHostService host Returns Type Description IEnumerable < RestApiTagViewModel > | Improve this Doc View Source GetTagsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<RestApiTagViewModel> GetTagsFromOverwriteDocument(FileModel overwriteModel, string uid, IHostService host) Parameters Type Name Description FileModel overwriteModel String uid IHostService host Returns Type Description IEnumerable < RestApiTagViewModel > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.BuildRestApiDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.BuildRestApiDocument.html",
    "title": "Class BuildRestApiDocument | DocFX website",
    "keywords": "Class BuildRestApiDocument Inheritance Object BaseDocumentBuildStep BuildRestApiDocument Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(\"RestApiDocumentProcessor\", typeof (IDocumentBuildStep))] public class BuildRestApiDocument : BaseDocumentBuildStep, IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) | Improve this Doc View Source BuildItem(IHostService, RestApiItemViewModelBase, FileModel, Func<String, Boolean>) Declaration public static RestApiItemViewModelBase BuildItem(IHostService host, RestApiItemViewModelBase item, FileModel model, Func<string, bool> filter = null) Parameters Type Name Description IHostService host RestApiItemViewModelBase item FileModel model Func < String , Boolean > filter Returns Type Description RestApiItemViewModelBase | Improve this Doc View Source BuildTag(IHostService, RestApiTagViewModel, FileModel, Func<String, Boolean>) Declaration public static RestApiTagViewModel BuildTag(IHostService host, RestApiTagViewModel tag, FileModel model, Func<string, bool> filter = null) Parameters Type Name Description IHostService host RestApiTagViewModel tag FileModel model Func < String , Boolean > filter Returns Type Description RestApiTagViewModel Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.RestApiDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.RestApiDocumentProcessor.html",
    "title": "Class RestApiDocumentProcessor | DocFX website",
    "keywords": "Class RestApiDocumentProcessor Inheritance Object DisposableDocumentProcessor RestApiDocumentProcessor Inherited Members DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(typeof (IDocumentProcessor))] public class RestApiDocumentProcessor : DisposableDocumentProcessor, IDocumentProcessor, IDisposable Properties | Improve this Doc View Source BuildSteps Declaration [ImportMany(\"RestApiDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Methods | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Overrides DisposableDocumentProcessor.GetProcessingPriority(FileAndType) | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides DisposableDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides DisposableDocumentProcessor.Save(FileModel) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.RestApiHelper.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.RestApiHelper.html",
    "title": "Class RestApiHelper | DocFX website",
    "keywords": "Class RestApiHelper Inheritance Object RestApiHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax public static class RestApiHelper Methods | Improve this Doc View Source FormatDefinitionSinglePath(String) Reverse to reference unescape described in http://tools.ietf.org/html/rfc6901#section-4 Declaration public static string FormatDefinitionSinglePath(string reference) Parameters Type Name Description String reference Returns Type Description String | Improve this Doc View Source FormatReferenceFullPath(String) When the reference starts with '#/', treat it as URI Fragment Identifier Representation and decode. When the reference starts with '/', treat it as JSON String Representation and keep it as. Refer to: https://tools.ietf.org/html/rfc6901#section-5 Declaration public static Tuple<string, string> FormatReferenceFullPath(string reference) Parameters Type Name Description String reference Returns Type Description Tuple < String , String >"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.InfoObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.InfoObject.html",
    "title": "Class InfoObject | DocFX website",
    "keywords": "Class InfoObject Info object Inheritance Object InfoObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class InfoObject Properties | Improve this Doc View Source PatternedObjects Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> PatternedObjects { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Title Required. The title of the application. Declaration [YamlMember(Alias = \"title\")] [JsonProperty(\"title\")] public string Title { get; set; } Property Value Type Description String | Improve this Doc View Source Version Required. Provides the version of the application API Declaration [YamlMember(Alias = \"version\")] [JsonProperty(\"version\")] public string Version { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.OperationObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.OperationObject.html",
    "title": "Class OperationObject | DocFX website",
    "keywords": "Class OperationObject Inheritance Object OperationObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class OperationObject Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source OperationId Unique string used to identify the operation. The id MUST be unique among all operations described in the API. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is recommended to follow common programming naming conventions. Declaration [YamlMember(Alias = \"operationId\")] [JsonProperty(\"operationId\")] public string OperationId { get; set; } Property Value Type Description String | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ParameterObject> Parameters { get; set; } Property Value Type Description List < ParameterObject > | Improve this Doc View Source Responses Key: default or HttpStatusCode Declaration [YamlMember(Alias = \"responses\")] [JsonProperty(\"responses\")] public Dictionary<string, ResponseObject> Responses { get; set; } Property Value Type Description Dictionary < String , ResponseObject > | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ParameterObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ParameterObject.html",
    "title": "Class ParameterObject | DocFX website",
    "keywords": "Class ParameterObject Inheritance Object ParameterObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class ParameterObject Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject.html",
    "title": "Class PathItemObject | DocFX website",
    "keywords": "Class PathItemObject TODO: need a converter Inheritance Object PathItemObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class PathItemObject Properties | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Parameters A list of parameters that are applicable for all the operations described under this path. These parameters can be overridden at the operation level, but cannot be removed there. Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ParameterObject> Parameters { get; set; } Property Value Type Description List < ParameterObject > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathsObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathsObject.html",
    "title": "Class PathsObject | DocFX website",
    "keywords": "Class PathsObject Inheritance Object Dictionary < String , PathItemObject > PathsObject Inherited Members Dictionary<String, PathItemObject>.Add(String, PathItemObject) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>) Dictionary<String, PathItemObject>.Clear() Dictionary<String, PathItemObject>.ContainsKey(String) Dictionary<String, PathItemObject>.ContainsValue(PathItemObject) Dictionary<String, PathItemObject>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.GetEnumerator() Dictionary<String, PathItemObject>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, PathItemObject>.OnDeserialization(Object) Dictionary<String, PathItemObject>.Remove(String) Dictionary<String, PathItemObject>.TryGetValue(String, PathItemObject) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>[], System.Int32) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.set_Item(System.Object, System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.Add(System.Object, System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.Contains(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.Remove(System.Object) Dictionary<String, PathItemObject>.Comparer Dictionary<String, PathItemObject>.Count Dictionary<String, PathItemObject>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Keys Dictionary<String, PathItemObject>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Values Dictionary<String, PathItemObject>.Item[String] System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.IsReadOnly System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.ICollection.SyncRoot System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.IsFixedSize System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.IsReadOnly System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.Item[System.Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class PathsObject : Dictionary<string, PathItemObject>, IDictionary<string, PathItemObject>, ICollection<KeyValuePair<string, PathItemObject>>, IDictionary, ICollection, IReadOnlyDictionary<string, PathItemObject>, IReadOnlyCollection<KeyValuePair<string, PathItemObject>>, IEnumerable<KeyValuePair<string, PathItemObject>>, IEnumerable, ISerializable, IDeserializationCallback Extension Methods TaskHelper.ForEachInParallelAsync<KeyValuePair<String, PathItemObject>>(Func<KeyValuePair<String, PathItemObject>, Task>, Int32) TaskHelper.ForEachInParallelAsync<KeyValuePair<String, PathItemObject>>(Func<KeyValuePair<String, PathItemObject>, Task>) TaskHelper.SelectInParallelAsync<KeyValuePair<String, PathItemObject>, TResult>(Func<KeyValuePair<String, PathItemObject>, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<KeyValuePair<String, PathItemObject>, TResult>(Func<KeyValuePair<String, PathItemObject>, Task<TResult>>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ResponseObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ResponseObject.html",
    "title": "Class ResponseObject | DocFX website",
    "keywords": "Class ResponseObject Inheritance Object ResponseObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class ResponseObject Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Examples Key is the mime type Declaration [YamlMember(Alias = \"examples\")] [JsonProperty(\"examples\")] public Dictionary<string, object> Examples { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.SwaggerModel.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.SwaggerModel.html",
    "title": "Class SwaggerModel | DocFX website",
    "keywords": "Class SwaggerModel Inheritance Object SwaggerModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class SwaggerModel Properties | Improve this Doc View Source BasePath The base path on which the API is served, which is relative to the host. If it is not included, the API is served directly under the host. The value MUST start with a leading slash (/). The basePath does not support path templating. Declaration [YamlMember(Alias = \"basePath\")] [JsonProperty(\"basePath\")] public string BasePath { get; set; } Property Value Type Description String | Improve this Doc View Source Defintions An object to hold data types produced and consumed by operations. Declaration [YamlMember(Alias = \"definitions\")] [JsonProperty(\"definitions\")] public object Defintions { get; set; } Property Value Type Description Object | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Host The host (name or ip) serving the API. This MUST be the host only and does not include the scheme nor sub-paths. It MAY include a port. If the host is not included, the host serving the documentation is to be used (including the port). The host does not support path templating. Declaration [YamlMember(Alias = \"host\")] [JsonProperty(\"host\")] public string Host { get; set; } Property Value Type Description String | Improve this Doc View Source Info Required. Provides metadata about the API. The metadata can be used by the clients if needed. Declaration [YamlMember(Alias = \"info\")] [JsonProperty(\"info\")] public InfoObject Info { get; set; } Property Value Type Description InfoObject | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Parameters An object to hold parameters that can be used across operations. This property does not define global parameters for all operations Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public object Parameters { get; set; } Property Value Type Description Object | Improve this Doc View Source Paths Required. The available paths and operations for the API. Declaration [YamlMember(Alias = \"paths\")] [JsonProperty(\"paths\")] public PathsObject Paths { get; set; } Property Value Type Description PathsObject | Improve this Doc View Source Raw The original swagger.json cpntent Declaration [YamlIgnore] [JsonIgnore] public string Raw { get; set; } Property Value Type Description String | Improve this Doc View Source Responses An object to hold responses that can be used across operations. This property does not define global responses for all operations. Declaration [YamlMember(Alias = \"responses\")] [JsonProperty(\"responses\")] public object Responses { get; set; } Property Value Type Description Object | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source Tags A list of tags used by the specification with additional metadata. The order of the tags can be used to reflect on their order by the parsing tools. Declaration [YamlMember(Alias = \"tags\")] [JsonProperty(\"tags\")] public List<TagItemObject> Tags { get; set; } Property Value Type Description List < TagItemObject > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.TagItemObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.TagItemObject.html",
    "title": "Class TagItemObject | DocFX website",
    "keywords": "Class TagItemObject Inheritance Object TagItemObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi.Swagger Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class TagItemObject Properties | Improve this Doc View Source BookmarkId Define the bookmark id for the tag. It's extensions to the Swagger Schema, which MUST begin with 'x-'. Declaration [YamlMember(Alias = \"x-bookmark-id\")] [JsonProperty(\"x-bookmark-id\")] public string BookmarkId { get; set; } Property Value Type Description String | Improve this Doc View Source Description A short description for the tag. GFM syntax can be used for rich text representation. Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Required. The name of the tag. Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.html",
    "title": "Namespace Microsoft.DocAsCode.Build.RestApi.Swagger | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.RestApi.Swagger Classes InfoObject Info object OperationObject ParameterObject PathItemObject TODO: need a converter PathsObject ResponseObject SwaggerModel TagItemObject"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.SwaggerModelConverter.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.SwaggerModelConverter.html",
    "title": "Class SwaggerModelConverter | DocFX website",
    "keywords": "Class SwaggerModelConverter Inheritance Object SwaggerModelConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax public static class SwaggerModelConverter Methods | Improve this Doc View Source FromSwaggerModel(SwaggerModel) Declaration public static RestApiRootItemViewModel FromSwaggerModel(SwaggerModel swagger) Parameters Type Name Description SwaggerModel swagger Returns Type Description RestApiRootItemViewModel"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.ValidateRestApiDocumentMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.ValidateRestApiDocumentMetadata.html",
    "title": "Class ValidateRestApiDocumentMetadata | DocFX website",
    "keywords": "Class ValidateRestApiDocumentMetadata Inheritance Object BaseDocumentBuildStep ValidateRestApiDocumentMetadata Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.RestApi Assembly :Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(\"RestApiDocumentProcessor\", typeof (IDocumentBuildStep))] public class ValidateRestApiDocumentMetadata : BaseDocumentBuildStep, IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.RestApi.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.html",
    "title": "Namespace Microsoft.DocAsCode.Build.RestApi | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.RestApi Classes ApplyOverwriteDocumentForRestApi BuildRestApiDocument RestApiDocumentProcessor RestApiHelper SwaggerModelConverter ValidateRestApiDocumentMetadata"
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.BuildTocDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.BuildTocDocument.html",
    "title": "Class BuildTocDocument | DocFX website",
    "keywords": "Class BuildTocDocument Inheritance Object BaseDocumentBuildStep BuildTocDocument Inherited Members BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.TableOfContents Assembly :Microsoft.DocAsCode.Build.TableOfContents.dll Syntax [Export(\"TocDocumentProcessor\", typeof (IDocumentBuildStep))] public class BuildTocDocument : BaseDocumentBuildStep, IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) | Improve this Doc View Source Prebuild(ImmutableList<FileModel>, IHostService) Expand the TOC reference Resolve homepage Declaration public override IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Overrides BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.MarkdownTocReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.MarkdownTocReader.html",
    "title": "Class MarkdownTocReader | DocFX website",
    "keywords": "Class MarkdownTocReader Inheritance Object MarkdownTocReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.TableOfContents Assembly :Microsoft.DocAsCode.Build.TableOfContents.dll Syntax public static class MarkdownTocReader Methods | Improve this Doc View Source LoadToc(String, String) Declaration public static TocViewModel LoadToc(string tocContent, string filePath) Parameters Type Name Description String tocContent String filePath Returns Type Description TocViewModel"
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.TocDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.TocDocumentProcessor.html",
    "title": "Class TocDocumentProcessor | DocFX website",
    "keywords": "Class TocDocumentProcessor Inheritance Object DisposableDocumentProcessor TocDocumentProcessor Inherited Members DisposableDocumentProcessor.Dispose() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.TableOfContents Assembly :Microsoft.DocAsCode.Build.TableOfContents.dll Syntax [Export(typeof (IDocumentProcessor))] public class TocDocumentProcessor : DisposableDocumentProcessor, IDocumentProcessor, IDisposable Properties | Improve this Doc View Source BuildSteps Declaration [ImportMany(\"TocDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Methods | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Overrides DisposableDocumentProcessor.GetProcessingPriority(FileAndType) | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides DisposableDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides DisposableDocumentProcessor.Save(FileModel) | Improve this Doc View Source UpdateHref(FileModel, IDocumentBuildContext) Declaration public override void UpdateHref(FileModel model, IDocumentBuildContext context) Parameters Type Name Description FileModel model IDocumentBuildContext context Overrides DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.html",
    "title": "Namespace Microsoft.DocAsCode.Build.TableOfContents | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.TableOfContents Classes BuildTocDocument MarkdownTocReader TocDocumentProcessor"
  },
  "api/Microsoft.DocAsCode.BuildJsonConfig.html": {
    "href": "api/Microsoft.DocAsCode.BuildJsonConfig.html",
    "title": "Class BuildJsonConfig | DocFX website",
    "keywords": "Class BuildJsonConfig Inheritance Object BuildJsonConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] public class BuildJsonConfig Properties | Improve this Doc View Source BaseDirectory Declaration [JsonIgnore] public string BaseDirectory { get; set; } Property Value Type Description String | Improve this Doc View Source ChangesFile Declaration [JsonProperty(\"changesFile\")] public string ChangesFile { get; set; } Property Value Type Description String | Improve this Doc View Source Content Declaration [JsonProperty(\"content\")] public FileMapping Content { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source Destination Declaration [JsonProperty(\"dest\")] public string Destination { get; set; } Property Value Type Description String | Improve this Doc View Source DryRun Declaration [JsonProperty(\"dryRun\")] public bool ? DryRun { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source ExportRawModel Declaration [JsonProperty(\"exportRawModel\")] public bool ? ExportRawModel { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source ExportViewModel Declaration [JsonProperty(\"exportViewModel\")] public bool ? ExportViewModel { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source ExternalReference Declaration [JsonProperty(\"externalReference\")] public FileMapping ExternalReference { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source FileMetadata Metadata that applies to some specific files. The key is the metadata name. For each item of the value: The key is the glob pattern to match the files. The value is the value of the metadata. Declaration [JsonProperty(\"fileMetadata\")] public Dictionary<string, FileMetadataPairs> FileMetadata { get; set; } Property Value Type Description Dictionary < String , FileMetadataPairs > | Improve this Doc View Source FileMetadataFilePaths Declaration [JsonProperty(\"fileMetadataFiles\")] public ListWithStringFallback FileMetadataFilePaths { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source Force Declaration [JsonProperty(\"force\")] public bool ? Force { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source GlobalMetadata Declaration [JsonProperty(\"globalMetadata\")] [JsonConverter(typeof (JObjectDictionaryToObjectDictionaryConverter))] public Dictionary<string, object> GlobalMetadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source GlobalMetadataFilePaths Declaration [JsonProperty(\"globalMetadataFiles\")] public ListWithStringFallback GlobalMetadataFilePaths { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source IntermediateFolder Declaration [JsonProperty(\"intermediateFolder\")] public string IntermediateFolder { get; set; } Property Value Type Description String | Improve this Doc View Source MarkdownEngineName Declaration [JsonProperty(\"markdownEngineName\")] public string MarkdownEngineName { get; set; } Property Value Type Description String | Improve this Doc View Source MarkdownEngineProperties Declaration [JsonProperty(\"markdownEngineProperties\")] [JsonConverter(typeof (JObjectDictionaryToObjectDictionaryConverter))] public Dictionary<string, object> MarkdownEngineProperties { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source MaxParallelism Declaration [JsonProperty(\"maxParallelism\")] public int ? MaxParallelism { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source NoLangKeyword Disable default lang keyword, e.g. null Declaration [JsonProperty(\"noLangKeyword\")] public bool NoLangKeyword { get; set; } Property Value Type Description Boolean | Improve this Doc View Source OutputFolder Declaration [JsonIgnore] public string OutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source Overwrite Declaration [JsonProperty(\"overwrite\")] public FileMapping Overwrite { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source Port Declaration [JsonProperty(\"port\")] public string Port { get; set; } Property Value Type Description String | Improve this Doc View Source PostProcessors Declaration [JsonProperty(\"postProcessors\")] public ListWithStringFallback PostProcessors { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source RawModelOutputFolder Declaration [JsonProperty(\"rawModelOutputFolder\")] public string RawModelOutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source Resource Declaration [JsonProperty(\"resource\")] public FileMapping Resource { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source Serve Declaration [JsonProperty(\"serve\")] public bool ? Serve { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Templates Declaration [JsonProperty(\"template\")] public ListWithStringFallback Templates { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source Themes Declaration [JsonProperty(\"theme\")] public ListWithStringFallback Themes { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source ViewModelOutputFolder Declaration [JsonProperty(\"viewModelOutputFolder\")] public string ViewModelOutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source XRefMaps Declaration [JsonProperty(\"xref\")] public ListWithStringFallback XRefMaps { get; set; } Property Value Type Description ListWithStringFallback Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.DocumentExceptionExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.DocumentExceptionExtensions.html",
    "title": "Class DocumentExceptionExtensions | DocFX website",
    "keywords": "Class DocumentExceptionExtensions Inheritance Object DocumentExceptionExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public static class DocumentExceptionExtensions Methods | Improve this Doc View Source RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>) Declaration public static void RunAll<TElement>(this IReadOnlyList<TElement> elements, Action<TElement> action) Parameters Type Name Description IReadOnlyList <TElement> elements Action <TElement> action Type Parameters Name Description TElement | Improve this Doc View Source RunAll<TElement>(IReadOnlyList<TElement>, Action<TElement>, Int32) Declaration public static void RunAll<TElement>(this IReadOnlyList<TElement> elements, Action<TElement> action, int parallelism) Parameters Type Name Description IReadOnlyList <TElement> elements Action <TElement> action Int32 parallelism Type Parameters Name Description TElement | Improve this Doc View Source RunAll<TElement, TResult>(IReadOnlyList<TElement>, Func<TElement, TResult>) Declaration public static TResult[] RunAll<TElement, TResult>(this IReadOnlyList<TElement> elements, Func<TElement, TResult> func) Parameters Type Name Description IReadOnlyList <TElement> elements Func <TElement, TResult> func Returns Type Description TResult[] Type Parameters Name Description TElement TResult"
  },
  "api/Microsoft.DocAsCode.Plugins.DocumentType.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.DocumentType.html",
    "title": "Enum DocumentType | DocFX website",
    "keywords": "Enum DocumentType Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public enum DocumentType Fields Name Description Article Metadata Overwrite Resource Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.EnvironmentContext.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.EnvironmentContext.html",
    "title": "Class EnvironmentContext | DocFX website",
    "keywords": "Class EnvironmentContext Inheritance Object EnvironmentContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public static class EnvironmentContext Properties | Improve this Doc View Source BaseDirectory Declaration public static string BaseDirectory { get; set; } Property Value Type Description String"
  },
  "api/Microsoft.DocAsCode.Plugins.FileAndType.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.FileAndType.html",
    "title": "Class FileAndType | DocFX website",
    "keywords": "Class FileAndType Inheritance Object FileAndType Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public sealed class FileAndType : IEquatable<FileAndType> Constructors | Improve this Doc View Source FileAndType(String, String, DocumentType, Func<String, String>) Declaration public FileAndType(string baseDir, string file, DocumentType type, Func<string, string> pathRewriter) Parameters Type Name Description String baseDir String file DocumentType type Func < String , String > pathRewriter Properties | Improve this Doc View Source BaseDir Declaration public string BaseDir { get; } Property Value Type Description String | Improve this Doc View Source File Declaration public string File { get; } Property Value Type Description String | Improve this Doc View Source FullPath Declaration public string FullPath { get; } Property Value Type Description String | Improve this Doc View Source PathRewriter Declaration public Func<string, string> PathRewriter { get; } Property Value Type Description Func < String , String > | Improve this Doc View Source StringComparer Declaration public StringComparer StringComparer { get; } Property Value Type Description StringComparer | Improve this Doc View Source Type Declaration public DocumentType Type { get; } Property Value Type Description DocumentType Methods | Improve this Doc View Source ChangeType(DocumentType) Declaration public FileAndType ChangeType(DocumentType type) Parameters Type Name Description DocumentType type Returns Type Description FileAndType | Improve this Doc View Source Equals(FileAndType) Declaration public bool Equals(FileAndType other) Parameters Type Name Description FileAndType other Returns Type Description Boolean Implements IEquatable<FileAndType>.Equals(FileAndType) | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Operators | Improve this Doc View Source Equality(FileAndType, FileAndType) Declaration public static bool operator ==(FileAndType left, FileAndType right) Parameters Type Name Description FileAndType left FileAndType right Returns Type Description Boolean | Improve this Doc View Source Inequality(FileAndType, FileAndType) Declaration public static bool operator !=(FileAndType left, FileAndType right) Parameters Type Name Description FileAndType left FileAndType right Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.FileModel.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.FileModel.html",
    "title": "Class FileModel | DocFX website",
    "keywords": "Class FileModel Inheritance Object FileModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public sealed class FileModel : IDisposable Constructors | Improve this Doc View Source FileModel(FileAndType, Object, FileAndType, IFormatter) Declaration public FileModel(FileAndType ft, object content, FileAndType original = null, IFormatter serializer = null) Parameters Type Name Description FileAndType ft Object content FileAndType original IFormatter serializer Properties | Improve this Doc View Source BaseDir Declaration public string BaseDir { get; set; } Property Value Type Description String | Improve this Doc View Source Content Declaration public object Content { get; set; } Property Value Type Description Object | Improve this Doc View Source DocumentType Declaration public string DocumentType { get; set; } Property Value Type Description String | Improve this Doc View Source File Declaration public string File { get; set; } Property Value Type Description String | Improve this Doc View Source FileAndType Declaration public FileAndType FileAndType { get; } Property Value Type Description FileAndType | Improve this Doc View Source Key Declaration public string Key { get; } Property Value Type Description String | Improve this Doc View Source LinkToFiles Declaration public ImmutableHashSet<string> LinkToFiles { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableHashSet < String > | Improve this Doc View Source LinkToUids Declaration public ImmutableHashSet<string> LinkToUids { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableHashSet < String > | Improve this Doc View Source LocalPathFromRepoRoot Declaration public string LocalPathFromRepoRoot { get; set; } Property Value Type Description String | Improve this Doc View Source LocalPathFromRoot Declaration public string LocalPathFromRoot { get; set; } Property Value Type Description String | Improve this Doc View Source ManifestProperties Declaration public dynamic ManifestProperties { get; } Property Value Type Description Object | Improve this Doc View Source ModelWithCache Declaration public ModelWithCache ModelWithCache { get; } Property Value Type Description ModelWithCache | Improve this Doc View Source OriginalFileAndType Declaration public FileAndType OriginalFileAndType { get; } Property Value Type Description FileAndType | Improve this Doc View Source PathRewriter Declaration public Func<string, string> PathRewriter { get; } Property Value Type Description Func < String , String > | Improve this Doc View Source Properties Declaration public dynamic Properties { get; } Property Value Type Description Object | Improve this Doc View Source Type Declaration public DocumentType Type { get; } Property Value Type Description DocumentType | Improve this Doc View Source Uids Declaration public ImmutableArray<UidDefinition> Uids { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < UidDefinition > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Events | Improve this Doc View Source ContentAccessed Declaration public event EventHandler ContentAccessed Event Type Type Description EventHandler | Improve this Doc View Source FileOrBaseDirChanged Declaration public event EventHandler FileOrBaseDirChanged Event Type Type Description EventHandler | Improve this Doc View Source UidsChanged Declaration public event EventHandler<PropertyChangedEventArgs<ImmutableArray<UidDefinition>>> UidsChanged Event Type Type Description EventHandler < PropertyChangedEventArgs < System.Collections.Immutable.ImmutableArray < UidDefinition >>> Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.HomepageInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.HomepageInfo.html",
    "title": "Class HomepageInfo | DocFX website",
    "keywords": "Class HomepageInfo Inheritance Object HomepageInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class HomepageInfo Properties | Improve this Doc View Source Homepage Declaration [YamlMember(Alias = \"homepage\")] [JsonProperty(\"homepage\")] public string Homepage { get; set; } Property Value Type Description String | Improve this Doc View Source TocPath Declaration [YamlMember(Alias = \"tocPath\")] [JsonProperty(\"tocPath\")] public string TocPath { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ICustomMarkdownTagValidator.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ICustomMarkdownTagValidator.html",
    "title": "Interface ICustomMarkdownTagValidator | DocFX website",
    "keywords": "Interface ICustomMarkdownTagValidator Contract interface for custom validate tag in markdown Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ICustomMarkdownTagValidator Methods | Improve this Doc View Source Validate(String) Declaration bool Validate(string tag) Parameters Type Name Description String tag Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IDocumentBuildContext.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IDocumentBuildContext.html",
    "title": "Interface IDocumentBuildContext | DocFX website",
    "keywords": "Interface IDocumentBuildContext Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IDocumentBuildContext Methods | Improve this Doc View Source GetFilePath(String) Get final file path from working folder, starting with ~/ Declaration string GetFilePath(string key) Parameters Type Name Description String key Key is the original file path from working folder, starting with ~/ Returns Type Description String The final file path for current file | Improve this Doc View Source GetTocFileKeySet(String) Get a set of file key for the toc files that current file belongs to Declaration IImmutableList<string> GetTocFileKeySet(string key) Parameters Type Name Description String key The key of current file Returns Type Description System.Collections.Immutable.IImmutableList < String > The set of file key for the toc files that current file belongs to | Improve this Doc View Source GetTocInfo() Get all the registered toc information Declaration IImmutableList<TocInfo> GetTocInfo() Returns Type Description System.Collections.Immutable.IImmutableList < TocInfo > All the registered toc information | Improve this Doc View Source GetXrefSpec(String) Get internal xref spec for current uid Declaration XRefSpec GetXrefSpec(string uid) Parameters Type Name Description String uid The uid of the file Returns Type Description XRefSpec The file key of current file | Improve this Doc View Source RegisterInternalXrefSpec(XRefSpec) Register internal xref spec Declaration void RegisterInternalXrefSpec(XRefSpec xrefSpec) Parameters Type Name Description XRefSpec xrefSpec | Improve this Doc View Source RegisterToc(String, String) Register the relationship between current toc file and the article Declaration void RegisterToc(string tocFileKey, string fileKey) Parameters Type Name Description String tocFileKey The key of the toc file that the file belongs to String fileKey The key of the file that belongs to the toc | Improve this Doc View Source RegisterTocInfo(TocInfo) Register the toc file to context with its information provided Declaration void RegisterTocInfo(TocInfo toc) Parameters Type Name Description TocInfo toc The information for the toc, containing the homepage of the toc | Improve this Doc View Source SetFilePath(String, String) Set the final file path for current file Declaration void SetFilePath(string key, string filePath) Parameters Type Name Description String key The file key of current file String filePath The final file path for current file Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IDocumentBuildStep.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IDocumentBuildStep.html",
    "title": "Interface IDocumentBuildStep | DocFX website",
    "keywords": "Interface IDocumentBuildStep Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration int BuildOrder { get; } Property Value Type Description Int32 | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host | Improve this Doc View Source Prebuild(ImmutableList<FileModel>, IHostService) Declaration IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IDocumentProcessor.html",
    "title": "Interface IDocumentProcessor | DocFX website",
    "keywords": "Interface IDocumentProcessor Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IDocumentProcessor Properties | Improve this Doc View Source BuildSteps Declaration IEnumerable<IDocumentBuildStep> BuildSteps { get; } Property Value Type Description IEnumerable < IDocumentBuildStep > | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel | Improve this Doc View Source Save(FileModel) Declaration SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult | Improve this Doc View Source UpdateHref(FileModel, IDocumentBuildContext) Declaration void UpdateHref(FileModel model, IDocumentBuildContext context) Parameters Type Name Description FileModel model IDocumentBuildContext context Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IHostService.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IHostService.html",
    "title": "Interface IHostService | DocFX website",
    "keywords": "Interface IHostService Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IHostService Properties | Improve this Doc View Source HasMetadataValidation Declaration bool HasMetadataValidation { get; } Property Value Type Description Boolean | Improve this Doc View Source Processor Get current IDocumentProcessor . Declaration IDocumentProcessor Processor { get; } Property Value Type Description IDocumentProcessor | Improve this Doc View Source SourceFiles Declaration ImmutableDictionary<string, FileAndType> SourceFiles { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , FileAndType > Methods | Improve this Doc View Source GetAllUids() Declaration ImmutableHashSet<string> GetAllUids() Returns Type Description System.Collections.Immutable.ImmutableHashSet < String > | Improve this Doc View Source GetModels(Nullable<DocumentType>) Declaration ImmutableList<FileModel> GetModels(DocumentType? type = null) Parameters Type Name Description Nullable < DocumentType > type Returns Type Description System.Collections.Immutable.ImmutableList < FileModel > | Improve this Doc View Source LogDiagnostic(String, String, String) Declaration void LogDiagnostic(string message, string file = null, string line = null) Parameters Type Name Description String message String file String line | Improve this Doc View Source LogError(String, String, String) Declaration void LogError(string message, string file = null, string line = null) Parameters Type Name Description String message String file String line | Improve this Doc View Source LogInfo(String, String, String) Declaration void LogInfo(string message, string file = null, string line = null) Parameters Type Name Description String message String file String line | Improve this Doc View Source LogVerbose(String, String, String) Declaration void LogVerbose(string message, string file = null, string line = null) Parameters Type Name Description String message String file String line | Improve this Doc View Source LogWarning(String, String, String) Declaration void LogWarning(string message, string file = null, string line = null) Parameters Type Name Description String message String file String line | Improve this Doc View Source LookupByUid(String) Declaration ImmutableList<FileModel> LookupByUid(string uid) Parameters Type Name Description String uid Returns Type Description System.Collections.Immutable.ImmutableList < FileModel > | Improve this Doc View Source Markup(String, FileAndType) Declaration MarkupResult Markup(string markdown, FileAndType ft) Parameters Type Name Description String markdown FileAndType ft Returns Type Description MarkupResult | Improve this Doc View Source Markup(String, FileAndType, Boolean) Declaration MarkupResult Markup(string markdown, FileAndType ft, bool omitParse) Parameters Type Name Description String markdown FileAndType ft Boolean omitParse Returns Type Description MarkupResult | Improve this Doc View Source MarkupToHtml(String, String) Declaration [Obsolete] string MarkupToHtml(string markdown, string file) Parameters Type Name Description String markdown String file Returns Type Description String | Improve this Doc View Source Parse(MarkupResult, FileAndType) Declaration MarkupResult Parse(MarkupResult markupResult, FileAndType ft) Parameters Type Name Description MarkupResult markupResult FileAndType ft Returns Type Description MarkupResult | Improve this Doc View Source ParseHtml(String, FileAndType) Declaration [Obsolete] MarkupResult ParseHtml(string html, FileAndType ft) Parameters Type Name Description String html FileAndType ft Returns Type Description MarkupResult | Improve this Doc View Source ReportDependency(FileModel, ImmutableArray<String>) Declaration void ReportDependency(FileModel currentFileModel, ImmutableArray<string> dependency) Parameters Type Name Description FileModel currentFileModel System.Collections.Immutable.ImmutableArray < String > dependency | Improve this Doc View Source ValidateInputMetadata(String, ImmutableDictionary<String, Object>) Declaration void ValidateInputMetadata(string file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description String file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IInputMetadataValidator.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IInputMetadataValidator.html",
    "title": "Interface IInputMetadataValidator | DocFX website",
    "keywords": "Interface IInputMetadataValidator Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IInputMetadataValidator Methods | Improve this Doc View Source Validate(String, ImmutableDictionary<String, Object>) Declaration void Validate(string sourceFile, ImmutableDictionary<string, object> metadata) Parameters Type Name Description String sourceFile System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IMarkdownService.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IMarkdownService.html",
    "title": "Interface IMarkdownService | DocFX website",
    "keywords": "Interface IMarkdownService Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IMarkdownService Methods | Improve this Doc View Source Markup(String, String) Declaration MarkupResult Markup(string src, string path) Parameters Type Name Description String src String path Returns Type Description MarkupResult Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IMarkdownServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IMarkdownServiceProvider.html",
    "title": "Interface IMarkdownServiceProvider | DocFX website",
    "keywords": "Interface IMarkdownServiceProvider Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IMarkdownServiceProvider Methods | Improve this Doc View Source CreateMarkdownService(MarkdownServiceParameters) Declaration IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.IPostProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.IPostProcessor.html",
    "title": "Interface IPostProcessor | DocFX website",
    "keywords": "Interface IPostProcessor Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface IPostProcessor Methods | Improve this Doc View Source PrepareMetadata(ImmutableDictionary<String, Object>) Update global metadata before building all the files declared in docfx.json Declaration ImmutableDictionary<string, object> PrepareMetadata(ImmutableDictionary<string, object> metadata) Parameters Type Name Description System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > | Improve this Doc View Source Process(Manifest, String) Add/remove/update all the files included in manifest Declaration Manifest Process(Manifest manifest, string outputFolder) Parameters Type Name Description Manifest manifest String outputFolder The output folder where our static website will be placed Returns Type Description Manifest Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ISubCommand.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ISubCommand.html",
    "title": "Interface ISubCommand | DocFX website",
    "keywords": "Interface ISubCommand Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ISubCommand Properties | Improve this Doc View Source AllowReplay Declaration bool AllowReplay { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Exec(SubCommandRunningContext) Declaration void Exec(SubCommandRunningContext context) Parameters Type Name Description SubCommandRunningContext context Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ISubCommandController.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ISubCommandController.html",
    "title": "Interface ISubCommandController | DocFX website",
    "keywords": "Interface ISubCommandController Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ISubCommandController Methods | Improve this Doc View Source GetHelpText() Declaration string GetHelpText() Returns Type Description String | Improve this Doc View Source TryGetCommandCreator(String, out ISubCommandCreator) Declaration bool TryGetCommandCreator(string name, out ISubCommandCreator creator) Parameters Type Name Description String name ISubCommandCreator creator Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ISubCommandCreator.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ISubCommandCreator.html",
    "title": "Interface ISubCommandCreator | DocFX website",
    "keywords": "Interface ISubCommandCreator Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ISubCommandCreator Methods | Improve this Doc View Source Create(String[], ISubCommandController, SubCommandParseOption) Declaration ISubCommand Create(string[] args, ISubCommandController controller, SubCommandParseOption option) Parameters Type Name Description String [] args ISubCommandController controller SubCommandParseOption option Returns Type Description ISubCommand | Improve this Doc View Source GetHelpText() Declaration string GetHelpText() Returns Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ISupportIncrementalBuild.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ISupportIncrementalBuild.html",
    "title": "Interface ISupportIncrementalBuild | DocFX website",
    "keywords": "Interface ISupportIncrementalBuild Declare a document processor or a step can support incremental build. Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public interface ISupportIncrementalBuild Methods | Improve this Doc View Source CanIncrementalBuild(FileAndType) Check each file, when incremental context hash is same. Declaration bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType the file and type information Returns Type Description Boolean Can use incremental build for this file. | Improve this Doc View Source GetIncrementalContextHash() Get the hash of incremental context, if it is different from latest one then full build. Declaration string GetIncrementalContextHash() Returns Type Description String the hash. Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.Manifest.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.Manifest.html",
    "title": "Class Manifest | DocFX website",
    "keywords": "Class Manifest Inheritance Object Manifest Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class Manifest Properties | Improve this Doc View Source Files Declaration [YamlMember(Alias = \"files\")] [JsonProperty(\"files\")] public List<ManifestItem> Files { get; set; } Property Value Type Description List < ManifestItem > | Improve this Doc View Source Homepages Declaration [YamlMember(Alias = \"homepages\")] [JsonProperty(\"homepages\")] public List<HomepageInfo> Homepages { get; set; } Property Value Type Description List < HomepageInfo > | Improve this Doc View Source SourceBasePath Declaration [YamlMember(Alias = \"sourceBasePath\")] [JsonProperty(\"source_base_path\")] public string SourceBasePath { get; set; } Property Value Type Description String | Improve this Doc View Source Templates Declaration [YamlMember(Alias = \"templates\")] [JsonProperty(\"templates\")] public List<string> Templates { get; set; } Property Value Type Description List < String > | Improve this Doc View Source XRefMap Declaration [YamlMember(Alias = \"xrefmap\")] [JsonProperty(\"xrefmap\")] public object XRefMap { get; set; } Property Value Type Description Object Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ManifestItem.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ManifestItem.html",
    "title": "Class ManifestItem | DocFX website",
    "keywords": "Class ManifestItem Inheritance Object ManifestItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class ManifestItem Properties | Improve this Doc View Source DocumentType Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string DocumentType { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source OutputFiles Declaration [YamlMember(Alias = \"output\")] [JsonProperty(\"output\")] public Dictionary<string, OutputFileInfo> OutputFiles { get; set; } Property Value Type Description Dictionary < String , OutputFileInfo > | Improve this Doc View Source SourceRelativePath Declaration [YamlMember(Alias = \"sourceRelativePath\")] [JsonProperty(\"source_relative_path\")] public string SourceRelativePath { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.MarkdownServiceParameters.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.MarkdownServiceParameters.html",
    "title": "Class MarkdownServiceParameters | DocFX website",
    "keywords": "Class MarkdownServiceParameters Inheritance Object MarkdownServiceParameters Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class MarkdownServiceParameters Properties | Improve this Doc View Source BasePath Declaration public string BasePath { get; set; } Property Value Type Description String | Improve this Doc View Source Extensions Declaration public IReadOnlyDictionary<string, object> Extensions { get; set; } Property Value Type Description IReadOnlyDictionary < String , Object > | Improve this Doc View Source TemplateDir Declaration public string TemplateDir { get; set; } Property Value Type Description String | Improve this Doc View Source Tokens Declaration public ImmutableDictionary<string, string> Tokens { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , String > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.MarkupResult.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.MarkupResult.html",
    "title": "Class MarkupResult | DocFX website",
    "keywords": "Class MarkupResult Inheritance Object MarkupResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class MarkupResult Properties | Improve this Doc View Source Dependency Declaration public ImmutableArray<string> Dependency { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > | Improve this Doc View Source Html Declaration public string Html { get; set; } Property Value Type Description String | Improve this Doc View Source LinkToFiles Declaration public ImmutableArray<string> LinkToFiles { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > | Improve this Doc View Source LinkToUids Declaration public ImmutableHashSet<string> LinkToUids { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableHashSet < String > | Improve this Doc View Source YamlHeader Declaration public ImmutableDictionary<string, object> YamlHeader { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Methods | Improve this Doc View Source Clone() Declaration public MarkupResult Clone() Returns Type Description MarkupResult Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ModelWithCache.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ModelWithCache.html",
    "title": "Class ModelWithCache | DocFX website",
    "keywords": "Class ModelWithCache Inheritance Object ModelWithCache Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public sealed class ModelWithCache : IDisposable Constructors | Improve this Doc View Source ModelWithCache(Object, IFormatter) Declaration public ModelWithCache(object content, IFormatter serializer = null) Parameters Type Name Description Object content IFormatter serializer Properties | Improve this Doc View Source Content Declaration public object Content { get; set; } Property Value Type Description Object | Improve this Doc View Source File Declaration public string File { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Deserialize() Declaration public bool Deserialize() Returns Type Description Boolean | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Serialize() Declaration public bool Serialize() Returns Type Description Boolean Events | Improve this Doc View Source ContentAccessed Declaration public event EventHandler ContentAccessed Event Type Type Description EventHandler Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.OutputFileInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.OutputFileInfo.html",
    "title": "Class OutputFileInfo | DocFX website",
    "keywords": "Class OutputFileInfo Inheritance Object OutputFileInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class OutputFileInfo Properties | Improve this Doc View Source Hash Declaration [YamlMember(Alias = \"hash\")] [JsonProperty(\"hash\")] public string Hash { get; set; } Property Value Type Description String | Improve this Doc View Source LinkToPath Declaration [YamlMember(Alias = \"link_to_path\")] [JsonProperty(\"link_to_path\")] public string LinkToPath { get; set; } Property Value Type Description String | Improve this Doc View Source RelativePath Declaration [YamlMember(Alias = \"relative_path\")] [JsonProperty(\"relative_path\")] public string RelativePath { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.ProcessingPriority.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.ProcessingPriority.html",
    "title": "Enum ProcessingPriority | DocFX website",
    "keywords": "Enum ProcessingPriority Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public enum ProcessingPriority Fields Name Description AboveNormal BelowNormal High Low Normal NotSupported Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.PropertyChangedEventArgs-1.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.PropertyChangedEventArgs-1.html",
    "title": "Class PropertyChangedEventArgs<T> | DocFX website",
    "keywords": "Class PropertyChangedEventArgs<T> Inheritance Object EventArgs PropertyChangedEventArgs PropertyChangedEventArgs<T> Inherited Members PropertyChangedEventArgs.PropertyName EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class PropertyChangedEventArgs<T> : PropertyChangedEventArgs Type Parameters Name Description T Constructors | Improve this Doc View Source PropertyChangedEventArgs(String, T, T) Declaration public PropertyChangedEventArgs(string propertyName, T original, T current) Parameters Type Name Description String propertyName T original T current Properties | Improve this Doc View Source Current Declaration public T Current { get; } Property Value Type Description T | Improve this Doc View Source Original Declaration public T Original { get; } Property Value Type Description T Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.SaveResult.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.SaveResult.html",
    "title": "Class SaveResult | DocFX website",
    "keywords": "Class SaveResult Inheritance Object SaveResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class SaveResult Properties | Improve this Doc View Source DocumentType Declaration public string DocumentType { get; set; } Property Value Type Description String | Improve this Doc View Source ExternalXRefSpecs Declaration public ImmutableArray<XRefSpec> ExternalXRefSpecs { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < XRefSpec > | Improve this Doc View Source FileWithoutExtension Declaration public string FileWithoutExtension { get; set; } Property Value Type Description String | Improve this Doc View Source LinkToFiles Declaration public ImmutableArray<string> LinkToFiles { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > | Improve this Doc View Source LinkToUids Declaration public ImmutableHashSet<string> LinkToUids { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableHashSet < String > | Improve this Doc View Source ResourceFile Declaration public string ResourceFile { get; set; } Property Value Type Description String | Improve this Doc View Source TocMap Declaration public ImmutableDictionary<string, HashSet<string>> TocMap { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , HashSet < String >> | Improve this Doc View Source XRefSpecs Declaration public ImmutableArray<XRefSpec> XRefSpecs { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < XRefSpec > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.SubCommandParseOption.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.SubCommandParseOption.html",
    "title": "Enum SubCommandParseOption | DocFX website",
    "keywords": "Enum SubCommandParseOption Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public enum SubCommandParseOption Fields Name Description Loose Strict Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.SubCommandRunningContext.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.SubCommandRunningContext.html",
    "title": "Class SubCommandRunningContext | DocFX website",
    "keywords": "Class SubCommandRunningContext Inheritance Object SubCommandRunningContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class SubCommandRunningContext Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.TocInfo.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.TocInfo.html",
    "title": "Class TocInfo | DocFX website",
    "keywords": "Class TocInfo Inheritance Object TocInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class TocInfo Constructors | Improve this Doc View Source TocInfo(String) Declaration public TocInfo(string tocFileKey) Parameters Type Name Description String tocFileKey Properties | Improve this Doc View Source Homepage Declaration public string Homepage { get; set; } Property Value Type Description String | Improve this Doc View Source TocFileKey Declaration public string TocFileKey { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.UidDefinition.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.UidDefinition.html",
    "title": "Class UidDefinition | DocFX website",
    "keywords": "Class UidDefinition Inheritance Object UidDefinition Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public class UidDefinition Constructors | Improve this Doc View Source UidDefinition(String, String, Nullable<Int32>, Nullable<Int32>) Declaration public UidDefinition(string uid, string file, int ? line = null, int ? column = null) Parameters Type Name Description String uid String file Nullable < Int32 > line Nullable < Int32 > column Properties | Improve this Doc View Source Column Declaration public int ? Column { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source File Declaration public string File { get; } Property Value Type Description String | Improve this Doc View Source Line Declaration public int ? Line { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.XRefSpec.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.XRefSpec.html",
    "title": "Class XRefSpec | DocFX website",
    "keywords": "Class XRefSpec Inheritance Object XRefSpec Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax public sealed class XRefSpec : IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Constructors | Improve this Doc View Source XRefSpec() Declaration public XRefSpec() | Improve this Doc View Source XRefSpec(XRefSpec) Declaration public XRefSpec(XRefSpec spec) Parameters Type Name Description XRefSpec spec | Improve this Doc View Source XRefSpec(IDictionary<String, String>) Declaration public XRefSpec(IDictionary<string, string> dictionary) Parameters Type Name Description IDictionary < String , String > dictionary Fields | Improve this Doc View Source CommentIdKey Declaration public const string CommentIdKey = \"commentId\" Field Value Type Description String | Improve this Doc View Source HrefKey Declaration public const string HrefKey = \"href\" Field Value Type Description String | Improve this Doc View Source NameKey Declaration public const string NameKey = \"name\" Field Value Type Description String | Improve this Doc View Source UidKey Declaration public const string UidKey = \"uid\" Field Value Type Description String Properties | Improve this Doc View Source CommentId Declaration public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Implements ICollection<KeyValuePair<String, String>>.Count | Improve this Doc View Source Href Declaration public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Implements ICollection<KeyValuePair<String, String>>.IsReadOnly | Improve this Doc View Source Item[String] Declaration public string this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description String Implements IDictionary<String, String>.Item[String] | Improve this Doc View Source Keys Declaration public ICollection<string> Keys { get; } Property Value Type Description ICollection < String > Implements IDictionary<String, String>.Keys | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Uid Declaration public string Uid { get; set; } Property Value Type Description String | Improve this Doc View Source Values Declaration public ICollection<string> Values { get; } Property Value Type Description ICollection < String > Implements IDictionary<String, String>.Values Methods | Improve this Doc View Source Add(String, String) Declaration public void Add(string key, string value) Parameters Type Name Description String key String value Implements IDictionary<String, String>.Add(String, String) | Improve this Doc View Source Clear() Declaration public void Clear() Implements ICollection<KeyValuePair<String, String>>.Clear() | Improve this Doc View Source ContainsKey(String) Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean Implements IDictionary<String, String>.ContainsKey(String) | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<KeyValuePair<string, string>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < String , String >> Implements IEnumerable<KeyValuePair<String, String>>.GetEnumerator() | Improve this Doc View Source Merge(XRefSpec, XRefSpec) Merge two xref spec (right overwrite left). Declaration public static XRefSpec Merge(XRefSpec left, XRefSpec right) Parameters Type Name Description XRefSpec left XRefSpec right Returns Type Description XRefSpec | Improve this Doc View Source Remove(String) Declaration public bool Remove(string key) Parameters Type Name Description String key Returns Type Description Boolean Implements IDictionary<String, String>.Remove(String) | Improve this Doc View Source ToReadOnly() Declaration public XRefSpec ToReadOnly() Returns Type Description XRefSpec | Improve this Doc View Source TryGetValue(String, out String) Declaration public bool TryGetValue(string key, out string value) Parameters Type Name Description String key String value Returns Type Description Boolean Implements IDictionary<String, String>.TryGetValue(String, String) Operators | Improve this Doc View Source Addition(XRefSpec, XRefSpec) Declaration public static XRefSpec operator +(XRefSpec left, XRefSpec right) Parameters Type Name Description XRefSpec left XRefSpec right Returns Type Description XRefSpec Explicit Interface Implementations | Improve this Doc View Source ICollection<KeyValuePair<String, String>>.Add(KeyValuePair<String, String>) Declaration void ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string> item) Parameters Type Name Description KeyValuePair < String , String > item Implements ICollection<KeyValuePair<String, String>>.Add(KeyValuePair<String, String>) | Improve this Doc View Source ICollection<KeyValuePair<String, String>>.Contains(KeyValuePair<String, String>) Declaration bool ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string> item) Parameters Type Name Description KeyValuePair < String , String > item Returns Type Description Boolean Implements ICollection<KeyValuePair<String, String>>.Contains(KeyValuePair<String, String>) | Improve this Doc View Source ICollection<KeyValuePair<String, String>>.CopyTo(KeyValuePair<String, String>[], Int32) Declaration void ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair < String , String >[] array Int32 arrayIndex Implements ICollection<KeyValuePair<String, String>>.CopyTo(KeyValuePair<String, String>[], Int32) | Improve this Doc View Source ICollection<KeyValuePair<String, String>>.Remove(KeyValuePair<String, String>) Declaration bool ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string> item) Parameters Type Name Description KeyValuePair < String , String > item Returns Type Description Boolean Implements ICollection<KeyValuePair<String, String>>.Remove(KeyValuePair<String, String>) | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements IEnumerable.GetEnumerator() Extension Methods TaskHelper.ForEachInParallelAsync<KeyValuePair<String, String>>(Func<KeyValuePair<String, String>, Task>, Int32) TaskHelper.ForEachInParallelAsync<KeyValuePair<String, String>>(Func<KeyValuePair<String, String>, Task>) TaskHelper.SelectInParallelAsync<KeyValuePair<String, String>, TResult>(Func<KeyValuePair<String, String>, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<KeyValuePair<String, String>, TResult>(Func<KeyValuePair<String, String>, Task<TResult>>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.html",
    "title": "Namespace Microsoft.DocAsCode.Plugins | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Plugins Classes DocumentException DocumentExceptionExtensions EnvironmentContext FileAndType FileModel HomepageInfo Manifest ManifestItem MarkdownServiceParameters MarkupResult ModelWithCache OutputFileInfo PropertyChangedEventArgs<T> SaveResult SubCommandRunningContext TocInfo UidDefinition XRefSpec Interfaces ICustomMarkdownTagValidator Contract interface for custom validate tag in markdown IDocumentBuildContext IDocumentBuildStep IDocumentProcessor IHostService IInputMetadataValidator IMarkdownService IMarkdownServiceProvider IPostProcessor ISubCommand ISubCommandController ISubCommandCreator ISupportIncrementalBuild Declare a document processor or a step can support incremental build. Enums DocumentType ProcessingPriority SubCommandParseOption"
  },
  "api/Microsoft.DocAsCode.SubCommands.CommandOptionAttribute.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.CommandOptionAttribute.html",
    "title": "Class CommandOptionAttribute | DocFX website",
    "keywords": "Class CommandOptionAttribute Inheritance Object Attribute System.Composition.ExportAttribute CommandOptionAttribute Inherited Members System.Composition.ExportAttribute.ContractName System.Composition.ExportAttribute.ContractType Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.SubCommands Assembly :docfx.dll Syntax [MetadataAttribute] [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class CommandOptionAttribute : ExportAttribute, _Attribute Constructors | Improve this Doc View Source CommandOptionAttribute(String, String) Declaration public CommandOptionAttribute(string name, string helpText) Parameters Type Name Description String name String helpText Properties | Improve this Doc View Source HelpText Declaration public string HelpText { get; } Property Value Type Description String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.SubCommands.MetadataMergeParameters.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.MetadataMergeParameters.html",
    "title": "Class MetadataMergeParameters | DocFX website",
    "keywords": "Class MetadataMergeParameters Inheritance Object MetadataMergeParameters Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.SubCommands Assembly :docfx.dll Syntax public class MetadataMergeParameters Properties | Improve this Doc View Source FileMetadata Declaration public FileMetadata FileMetadata { get; set; } Property Value Type Description FileMetadata | Improve this Doc View Source Files Declaration public FileCollection Files { get; set; } Property Value Type Description FileCollection | Improve this Doc View Source Metadata Declaration public ImmutableDictionary<string, object> Metadata { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > | Improve this Doc View Source OutputBaseDir Declaration public string OutputBaseDir { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.SubCommands.MetadataMerger.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.MetadataMerger.html",
    "title": "Class MetadataMerger | DocFX website",
    "keywords": "Class MetadataMerger Inheritance Object MetadataMerger Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.SubCommands Assembly :docfx.dll Syntax public class MetadataMerger Fields | Improve this Doc View Source PhaseName Declaration public const string PhaseName = \"Merge Metadata\" Field Value Type Description String Methods | Improve this Doc View Source Merge(MetadataMergeParameters) Declaration public void Merge(MetadataMergeParameters parameters) Parameters Type Name Description MetadataMergeParameters parameters Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.SubCommands.OptionParserException.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.OptionParserException.html",
    "title": "Class OptionParserException | DocFX website",
    "keywords": "Class OptionParserException Inheritance Object Exception SystemException ArgumentException OptionParserException Inherited Members ArgumentException.GetObjectData(SerializationInfo, StreamingContext) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.SubCommands Assembly :docfx.dll Syntax public class OptionParserException : ArgumentException, _Exception, ISerializable Constructors | Improve this Doc View Source OptionParserException() Declaration public OptionParserException() | Improve this Doc View Source OptionParserException(String) Declaration public OptionParserException(string message) Parameters Type Name Description String message Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.SubCommands.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.html",
    "title": "Namespace Microsoft.DocAsCode.SubCommands | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.SubCommands Classes CommandOptionAttribute MetadataMergeParameters MetadataMerger OptionParserException"
  },
  "api/Microsoft.DocAsCode.Utility.AsyncConcurrentCache-2.html": {
    "href": "api/Microsoft.DocAsCode.Utility.AsyncConcurrentCache-2.html",
    "title": "Class AsyncConcurrentCache<TKey, TValue> | DocFX website",
    "keywords": "Class AsyncConcurrentCache<TKey, TValue> An asynchronous wrapper over concurrent dictionary Inheritance Object AsyncConcurrentCache<TKey, TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class AsyncConcurrentCache<TKey, TValue> Type Parameters Name Description TKey Type of keys TValue Type of values Remarks Implementation copied from http://msdn.microsoft.com/en-us/library/hh873173(v=vs.110).aspx , AsyncCache Constructors | Improve this Doc View Source AsyncConcurrentCache(IEqualityComparer<TKey>) Declaration public AsyncConcurrentCache(IEqualityComparer<TKey> comparer = null) Parameters Type Name Description IEqualityComparer <TKey> comparer Properties | Improve this Doc View Source Values Gets a list of tasks in cache. Declaration public List<Task<TValue>> Values { get; } Property Value Type Description List < Task <TValue>> Methods | Improve this Doc View Source GetOrAdd(TKey, Func<TKey, Task<TValue>>, Boolean) Adds a key/value pair to the AsyncConcurrentCache<TKey, TValue> by using the specified function, if the key does not already exist. Declaration public Task<TValue> GetOrAdd(TKey key, Func<TKey, Task<TValue>> valueFactory, bool removeKeyOnFaulted = true) Parameters Type Name Description TKey key The key of the element to add. Func <TKey, Task <TValue>> valueFactory The function used to get a task to generate value for the key Boolean removeKeyOnFaulted A flag indicating whether to remove the key from cache on faulted. Returns Type Description Task <TValue> The task to generate value for the key | Improve this Doc View Source TryGetValue(TKey, out Task<TValue>) Attempts to get the value associated with the specified key in cache. Declaration public bool TryGetValue(TKey key, out Task<TValue> value) Parameters Type Name Description TKey key The key of the element Task <TValue> value The task to generate value for the key Returns Type Description Boolean true if the task was found; otherwise, false. Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.CircularBuffer-1.html": {
    "href": "api/Microsoft.DocAsCode.Utility.CircularBuffer-1.html",
    "title": "Class CircularBuffer<T> | DocFX website",
    "keywords": "Class CircularBuffer<T> Inheritance Object CircularBuffer<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class CircularBuffer<T> Type Parameters Name Description T Constructors | Improve this Doc View Source CircularBuffer() Declaration public CircularBuffer() | Improve this Doc View Source CircularBuffer(Int32) Declaration public CircularBuffer(int capacity) Parameters Type Name Description Int32 capacity Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Read() Declaration public T Read() Returns Type Description T | Improve this Doc View Source Read(T[], Int32, Int32) Declaration public int Read(T[] buffer, int startIndex, int count) Parameters Type Name Description T[] buffer Int32 startIndex Int32 count Returns Type Description Int32 | Improve this Doc View Source Write(T) Declaration public void Write(T item) Parameters Type Name Description T item | Improve this Doc View Source Write(T[]) Declaration public void Write(T[] items) Parameters Type Name Description T[] items | Improve this Doc View Source Write(T[], Int32, Int32) Declaration public void Write(T[] items, int startIndex, int count) Parameters Type Name Description T[] items Int32 startIndex Int32 count Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.CircularStream.html": {
    "href": "api/Microsoft.DocAsCode.Utility.CircularStream.html",
    "title": "Class CircularStream | DocFX website",
    "keywords": "Class CircularStream Inheritance Object CircularStream Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class CircularStream Methods | Improve this Doc View Source CreateReaderView() Declaration public Stream CreateReaderView() Returns Type Description Stream | Improve this Doc View Source CreateWriterView() Declaration public Stream CreateWriterView() Returns Type Description Stream Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.CollectionExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Utility.CollectionExtensions.html",
    "title": "Class CollectionExtensions | DocFX website",
    "keywords": "Class CollectionExtensions Inheritance Object CollectionExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public static class CollectionExtensions Methods | Improve this Doc View Source Merge<TItem, TResult>(IReadOnlyList<IEnumerable<TItem>>, IComparer<TItem>, Func<List<TItem>, TResult>) Declaration public static IEnumerable<TResult> Merge<TItem, TResult>(this IReadOnlyList<IEnumerable<TItem>> sources, IComparer<TItem> comparer, Func<List<TItem>, TResult> merger) Parameters Type Name Description IReadOnlyList < IEnumerable <TItem>> sources IComparer <TItem> comparer Func < List <TItem>, TResult> merger Returns Type Description IEnumerable <TResult> Type Parameters Name Description TItem TResult"
  },
  "api/Microsoft.DocAsCode.Utility.CompositeStream.html": {
    "href": "api/Microsoft.DocAsCode.Utility.CompositeStream.html",
    "title": "Class CompositeStream | DocFX website",
    "keywords": "Class CompositeStream Write-only composite stream. Inheritance Object MarshalByRefObject Stream CompositeStream Inherited Members Stream.Null Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, Int32) Stream.CopyTo(Stream) Stream.CopyTo(Stream, Int32) Stream.Dispose() Stream.Dispose(Boolean) Stream.FlushAsync() Stream.CreateWaitHandle() Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(Byte[], Int32, Int32) Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(Byte[], Int32, Int32) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.MemberwiseClone(Boolean) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class CompositeStream : Stream, IDisposable Constructors | Improve this Doc View Source CompositeStream(IEnumerable<Stream>) Declaration public CompositeStream(IEnumerable<Stream> streams) Parameters Type Name Description IEnumerable < Stream > streams | Improve this Doc View Source CompositeStream(Stream[]) Declaration public CompositeStream(params Stream[] streams) Parameters Type Name Description Stream [] streams Properties | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description Boolean Overrides Stream.CanRead | Improve this Doc View Source CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description Boolean Overrides Stream.CanSeek | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description Boolean Overrides Stream.CanWrite | Improve this Doc View Source Length Declaration public override long Length { get; } Property Value Type Description Int64 Overrides Stream.Length | Improve this Doc View Source Position Declaration public override long Position { get; set; } Property Value Type Description Int64 Overrides Stream.Position Methods | Improve this Doc View Source Close() Declaration public override void Close() Overrides Stream.Close() | Improve this Doc View Source CopyToAsync(Stream, Int32, CancellationToken) Declaration public override Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken) Parameters Type Name Description Stream destination Int32 bufferSize CancellationToken cancellationToken Returns Type Description Task Overrides Stream.CopyToAsync(Stream, Int32, CancellationToken) | Improve this Doc View Source Flush() Declaration public override void Flush() Overrides Stream.Flush() | Improve this Doc View Source FlushAsync(CancellationToken) Declaration public override Task FlushAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Overrides Stream.FlushAsync(CancellationToken) | Improve this Doc View Source Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Returns Type Description Int32 Overrides Stream.Read(Byte[], Int32, Int32) | Improve this Doc View Source ReadAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count CancellationToken cancellationToken Returns Type Description Task < Int32 > Overrides Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken) | Improve this Doc View Source ReadByte() Declaration public override int ReadByte() Returns Type Description Int32 Overrides Stream.ReadByte() | Improve this Doc View Source Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description Int64 offset SeekOrigin origin Returns Type Description Int64 Overrides Stream.Seek(Int64, SeekOrigin) | Improve this Doc View Source SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name Description Int64 value Overrides Stream.SetLength(Int64) | Improve this Doc View Source Write(Byte[], Int32, Int32) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Overrides Stream.Write(Byte[], Int32, Int32) | Improve this Doc View Source WriteAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count CancellationToken cancellationToken Returns Type Description Task Overrides Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken) | Improve this Doc View Source WriteByte(Byte) Declaration public override void WriteByte(byte value) Parameters Type Name Description Byte value Overrides Stream.WriteByte(Byte) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.ConsoleUtility.html": {
    "href": "api/Microsoft.DocAsCode.Utility.ConsoleUtility.html",
    "title": "Class ConsoleUtility | DocFX website",
    "keywords": "Class ConsoleUtility Inheritance Object ConsoleUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public static class ConsoleUtility Methods | Improve this Doc View Source WriteToConsoleWithColor(Action, ConsoleColor) Declaration public static void WriteToConsoleWithColor(Action write, ConsoleColor color) Parameters Type Name Description Action write ConsoleColor color"
  },
  "api/Microsoft.DocAsCode.Utility.ConvertToObjectHelper.html": {
    "href": "api/Microsoft.DocAsCode.Utility.ConvertToObjectHelper.html",
    "title": "Class ConvertToObjectHelper | DocFX website",
    "keywords": "Class ConvertToObjectHelper Inheritance Object ConvertToObjectHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public static class ConvertToObjectHelper Methods | Improve this Doc View Source ConvertExpandoObjectToObject(Object) Declaration public static object ConvertExpandoObjectToObject(object raw) Parameters Type Name Description Object raw Returns Type Description Object | Improve this Doc View Source ConvertJObjectToObject(Object) Declaration public static object ConvertJObjectToObject(object raw) Parameters Type Name Description Object raw Returns Type Description Object | Improve this Doc View Source ConvertStrongTypeToJObject(Object) Declaration public static object ConvertStrongTypeToJObject(object raw) Parameters Type Name Description Object raw Returns Type Description Object | Improve this Doc View Source ConvertStrongTypeToObject(Object) Declaration public static object ConvertStrongTypeToObject(object raw) Parameters Type Name Description Object raw Returns Type Description Object"
  },
  "api/Microsoft.DocAsCode.Utility.EntityMergers.DictionaryMerger.html": {
    "href": "api/Microsoft.DocAsCode.Utility.EntityMergers.DictionaryMerger.html",
    "title": "Class DictionaryMerger | DocFX website",
    "keywords": "Class DictionaryMerger Inheritance Object MergerDecorator DictionaryMerger Inherited Members MergerDecorator.TestKey(Object, Object, Type, IMergeContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility.EntityMergers Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class DictionaryMerger : MergerDecorator, IMerger Constructors | Improve this Doc View Source DictionaryMerger(IMerger) Declaration public DictionaryMerger(IMerger inner) Parameters Type Name Description IMerger inner Methods | Improve this Doc View Source Merge(ref Object, Object, Type, IMergeContext) Declaration public override void Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Overrides MergerDecorator.Merge(Object, Object, Type, IMergeContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.EntityMergers.IMergeContext.html": {
    "href": "api/Microsoft.DocAsCode.Utility.EntityMergers.IMergeContext.html",
    "title": "Interface IMergeContext | DocFX website",
    "keywords": "Interface IMergeContext Namespace :Microsoft.DocAsCode.Utility.EntityMergers Assembly :Microsoft.DocAsCode.Utility.dll Syntax public interface IMergeContext Properties | Improve this Doc View Source Item[String] Declaration object this[string key] { get; } Parameters Type Name Description String key Property Value Type Description Object | Improve this Doc View Source Merger Declaration IMerger Merger { get; } Property Value Type Description IMerger Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.EntityMergers.IMergeHandler.html": {
    "href": "api/Microsoft.DocAsCode.Utility.EntityMergers.IMergeHandler.html",
    "title": "Interface IMergeHandler | DocFX website",
    "keywords": "Interface IMergeHandler Namespace :Microsoft.DocAsCode.Utility.EntityMergers Assembly :Microsoft.DocAsCode.Utility.dll Syntax public interface IMergeHandler Methods | Improve this Doc View Source Merge(ref Object, Object, IMergeContext) Declaration void Merge(ref object source, object overrides, IMergeContext context) Parameters Type Name Description Object source Object overrides IMergeContext context Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.EntityMergers.IMerger.html": {
    "href": "api/Microsoft.DocAsCode.Utility.EntityMergers.IMerger.html",
    "title": "Interface IMerger | DocFX website",
    "keywords": "Interface IMerger Namespace :Microsoft.DocAsCode.Utility.EntityMergers Assembly :Microsoft.DocAsCode.Utility.dll Syntax public interface IMerger Methods | Improve this Doc View Source Merge(ref Object, Object, Type, IMergeContext) Declaration void Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context | Improve this Doc View Source TestKey(Object, Object, Type, IMergeContext) Declaration bool TestKey(object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.EntityMergers.KeyedListMerger.html": {
    "href": "api/Microsoft.DocAsCode.Utility.EntityMergers.KeyedListMerger.html",
    "title": "Class KeyedListMerger | DocFX website",
    "keywords": "Class KeyedListMerger Inheritance Object MergerDecorator KeyedListMerger Inherited Members MergerDecorator.TestKey(Object, Object, Type, IMergeContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility.EntityMergers Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class KeyedListMerger : MergerDecorator, IMerger Constructors | Improve this Doc View Source KeyedListMerger(IMerger) Declaration public KeyedListMerger(IMerger inner) Parameters Type Name Description IMerger inner Methods | Improve this Doc View Source Merge(ref Object, Object, Type, IMergeContext) Declaration public override void Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Overrides MergerDecorator.Merge(Object, Object, Type, IMergeContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.EntityMergers.MergeOption.html": {
    "href": "api/Microsoft.DocAsCode.Utility.EntityMergers.MergeOption.html",
    "title": "Enum MergeOption | DocFX website",
    "keywords": "Enum MergeOption Namespace :Microsoft.DocAsCode.Utility.EntityMergers Assembly :Microsoft.DocAsCode.Utility.dll Syntax public enum MergeOption Fields Name Description Ignore Do not merge this property. Merge Standard merge(default behavior): MergeKey Identify merge item in list. MergeNullOrDefault When it is not null or default value in override entity, it is same with merge. When it is null or default value in override entity, it will replace the property to null or default value. Replace Replace it when it is not null or default value in override entity. ReplaceNullOrDefault Always replace. Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.EntityMergers.MergeOptionAttribute.html": {
    "href": "api/Microsoft.DocAsCode.Utility.EntityMergers.MergeOptionAttribute.html",
    "title": "Class MergeOptionAttribute | DocFX website",
    "keywords": "Class MergeOptionAttribute Inheritance Object Attribute MergeOptionAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility.EntityMergers Assembly :Microsoft.DocAsCode.Utility.dll Syntax [AttributeUsage(AttributeTargets.Property, Inherited = true, AllowMultiple = false)] public sealed class MergeOptionAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source MergeOptionAttribute(MergeOption) Declaration public MergeOptionAttribute(MergeOption option = MergeOption.Merge) Parameters Type Name Description MergeOption option | Improve this Doc View Source MergeOptionAttribute(Type) Hint merger use custom merge handler. Declaration public MergeOptionAttribute(Type handlerType) Parameters Type Name Description Type handlerType the type of custom merge handler, it should implement IMergeHandler . Properties | Improve this Doc View Source Handler Declaration public IMergeHandler Handler { get; } Property Value Type Description IMergeHandler | Improve this Doc View Source Option Declaration public MergeOption Option { get; } Property Value Type Description MergeOption Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.EntityMergers.MergerDecorator.html": {
    "href": "api/Microsoft.DocAsCode.Utility.EntityMergers.MergerDecorator.html",
    "title": "Class MergerDecorator | DocFX website",
    "keywords": "Class MergerDecorator Inheritance Object MergerDecorator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility.EntityMergers Assembly :Microsoft.DocAsCode.Utility.dll Syntax public abstract class MergerDecorator : IMerger Constructors | Improve this Doc View Source MergerDecorator(IMerger) Declaration public MergerDecorator(IMerger inner) Parameters Type Name Description IMerger inner Methods | Improve this Doc View Source Merge(ref Object, Object, Type, IMergeContext) Declaration public virtual void Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Implements IMerger.Merge(Object, Object, Type, IMergeContext) | Improve this Doc View Source TestKey(Object, Object, Type, IMergeContext) Declaration public virtual bool TestKey(object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Returns Type Description Boolean Implements IMerger.TestKey(Object, Object, Type, IMergeContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.EntityMergers.MergerFacade.html": {
    "href": "api/Microsoft.DocAsCode.Utility.EntityMergers.MergerFacade.html",
    "title": "Class MergerFacade | DocFX website",
    "keywords": "Class MergerFacade Inheritance Object MergerFacade Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility.EntityMergers Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class MergerFacade Constructors | Improve this Doc View Source MergerFacade(IMerger) Declaration public MergerFacade(IMerger merger) Parameters Type Name Description IMerger merger Methods | Improve this Doc View Source Merge<T>(ref T, T, IReadOnlyDictionary<String, Object>) Declaration public void Merge<T>(ref T source, T overrides, IReadOnlyDictionary<string, object> data = null)where T : class Parameters Type Name Description T source T overrides IReadOnlyDictionary < String , Object > data Type Parameters Name Description T Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.EntityMergers.ReflectionEntityMerger.html": {
    "href": "api/Microsoft.DocAsCode.Utility.EntityMergers.ReflectionEntityMerger.html",
    "title": "Class ReflectionEntityMerger | DocFX website",
    "keywords": "Class ReflectionEntityMerger Inheritance Object ReflectionEntityMerger Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility.EntityMergers Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class ReflectionEntityMerger : IMerger Explicit Interface Implementations | Improve this Doc View Source IMerger.Merge(ref Object, Object, Type, IMergeContext) Declaration void IMerger.Merge(ref object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Implements IMerger.Merge(Object, Object, Type, IMergeContext) | Improve this Doc View Source IMerger.TestKey(Object, Object, Type, IMergeContext) Declaration bool IMerger.TestKey(object source, object overrides, Type type, IMergeContext context) Parameters Type Name Description Object source Object overrides Type type IMergeContext context Returns Type Description Boolean Implements IMerger.TestKey(Object, Object, Type, IMergeContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.EntityMergers.html": {
    "href": "api/Microsoft.DocAsCode.Utility.EntityMergers.html",
    "title": "Namespace Microsoft.DocAsCode.Utility.EntityMergers | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Utility.EntityMergers Classes DictionaryMerger KeyedListMerger MergeOptionAttribute MergerDecorator MergerFacade ReflectionEntityMerger Interfaces IMergeContext IMergeHandler IMerger Enums MergeOption"
  },
  "api/Microsoft.DocAsCode.Utility.FilePathComparer.html": {
    "href": "api/Microsoft.DocAsCode.Utility.FilePathComparer.html",
    "title": "Class FilePathComparer | DocFX website",
    "keywords": "Class FilePathComparer Inheritance Object FilePathComparer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class FilePathComparer : IEqualityComparer<string> Fields | Improve this Doc View Source OSPlatformSensitiveComparer Declaration public static readonly FilePathComparer OSPlatformSensitiveComparer Field Value Type Description FilePathComparer | Improve this Doc View Source OSPlatformSensitiveStringComparer Declaration public static readonly StringComparer OSPlatformSensitiveStringComparer Field Value Type Description StringComparer Methods | Improve this Doc View Source Equals(String, String) Declaration public bool Equals(string x, string y) Parameters Type Name Description String x String y Returns Type Description Boolean Implements IEqualityComparer<String>.Equals(String, String) | Improve this Doc View Source GetHashCode(String) Declaration public int GetHashCode(string obj) Parameters Type Name Description String obj Returns Type Description Int32 Implements IEqualityComparer<String>.GetHashCode(String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.Git.CommitDetail.html": {
    "href": "api/Microsoft.DocAsCode.Utility.Git.CommitDetail.html",
    "title": "Class CommitDetail | DocFX website",
    "keywords": "Class CommitDetail Inheritance Object CommitDetail Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility.Git Assembly :Microsoft.DocAsCode.Utility.dll Syntax [Serializable] public sealed class CommitDetail Properties | Improve this Doc View Source Author Declaration [YamlMember(Alias = \"author\")] [JsonProperty(\"author\")] public UserInfo Author { get; set; } Property Value Type Description UserInfo | Improve this Doc View Source CommitId Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string CommitId { get; set; } Property Value Type Description String | Improve this Doc View Source Committer Declaration [YamlMember(Alias = \"committer\")] [JsonProperty(\"committer\")] public UserInfo Committer { get; set; } Property Value Type Description UserInfo | Improve this Doc View Source ShortMessage Declaration [YamlMember(Alias = \"message\")] [JsonProperty(\"message\")] public string ShortMessage { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.Git.UserInfo.html": {
    "href": "api/Microsoft.DocAsCode.Utility.Git.UserInfo.html",
    "title": "Class UserInfo | DocFX website",
    "keywords": "Class UserInfo Inheritance Object UserInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility.Git Assembly :Microsoft.DocAsCode.Utility.dll Syntax [Serializable] public sealed class UserInfo Properties | Improve this Doc View Source Date Declaration [YamlMember(Alias = \"date\")] [JsonProperty(\"date\")] public DateTime Date { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Email Declaration [YamlMember(Alias = \"email\")] [JsonProperty(\"email\")] public string Email { get; set; } Property Value Type Description String | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.Git.html": {
    "href": "api/Microsoft.DocAsCode.Utility.Git.html",
    "title": "Namespace Microsoft.DocAsCode.Utility.Git | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Utility.Git Classes CommitDetail UserInfo"
  },
  "api/Microsoft.DocAsCode.Utility.GitDetail.html": {
    "href": "api/Microsoft.DocAsCode.Utility.GitDetail.html",
    "title": "Class GitDetail | DocFX website",
    "keywords": "Class GitDetail Inheritance Object GitDetail Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax [Serializable] public class GitDetail Properties | Improve this Doc View Source CommitDetail Declaration [YamlMember(Alias = \"commit\")] [JsonProperty(\"commit\")] public CommitDetail CommitDetail { get; set; } Property Value Type Description CommitDetail | Improve this Doc View Source Description Declaration [JsonProperty(\"key\")] [YamlMember(Alias = \"key\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source LocalWorkingDirectory Declaration [YamlIgnore] [JsonIgnore] public string LocalWorkingDirectory { get; set; } Property Value Type Description String | Improve this Doc View Source RelativePath Relative path of current file to the Git Root Directory Declaration [YamlMember(Alias = \"path\")] [JsonProperty(\"path\")] public string RelativePath { get; set; } Property Value Type Description String | Improve this Doc View Source RemoteBranch Declaration [YamlMember(Alias = \"branch\")] [JsonProperty(\"branch\")] public string RemoteBranch { get; set; } Property Value Type Description String | Improve this Doc View Source RemoteRepositoryUrl Declaration [YamlMember(Alias = \"repo\")] [JsonProperty(\"repo\")] public string RemoteRepositoryUrl { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.GitUtility.html": {
    "href": "api/Microsoft.DocAsCode.Utility.GitUtility.html",
    "title": "Class GitUtility | DocFX website",
    "keywords": "Class GitUtility Inheritance Object GitUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public static class GitUtility Methods | Improve this Doc View Source GetGitDetail(String) TODO: only get GitDetail on Project level? Declaration public static GitDetail GetGitDetail(string path) Parameters Type Name Description String path Returns Type Description GitDetail"
  },
  "api/Microsoft.DocAsCode.Utility.JObjectDictionaryToObjectDictionaryConverter.html": {
    "href": "api/Microsoft.DocAsCode.Utility.JObjectDictionaryToObjectDictionaryConverter.html",
    "title": "Class JObjectDictionaryToObjectDictionaryConverter | DocFX website",
    "keywords": "Class JObjectDictionaryToObjectDictionaryConverter Inheritance Object Newtonsoft.Json.JsonConverter JObjectDictionaryToObjectDictionaryConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class JObjectDictionaryToObjectDictionaryConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.LruList-1.html": {
    "href": "api/Microsoft.DocAsCode.Utility.LruList-1.html",
    "title": "Class LruList<T> | DocFX website",
    "keywords": "Class LruList<T> Inheritance Object LruList<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class LruList<T> Type Parameters Name Description T Constructors | Improve this Doc View Source LruList(Int32, Action<T>, IEqualityComparer<T>) Declaration protected LruList(int capacity, Action<T> onRemoving, IEqualityComparer<T> comparer) Parameters Type Name Description Int32 capacity Action <T> onRemoving IEqualityComparer <T> comparer Methods | Improve this Doc View Source Access(T) Declaration public void Access(T item) Parameters Type Name Description T item | Improve this Doc View Source AccessNoCheck(T) Declaration protected virtual void AccessNoCheck(T item) Parameters Type Name Description T item | Improve this Doc View Source Contains(T) Declaration public virtual bool Contains(T item) Parameters Type Name Description T item Returns Type Description Boolean | Improve this Doc View Source Create(Int32, Action<T>, IEqualityComparer<T>) Declaration public static LruList<T> Create(int capacity, Action<T> onRemoving = null, IEqualityComparer<T> comparer = null) Parameters Type Name Description Int32 capacity Action <T> onRemoving IEqualityComparer <T> comparer Returns Type Description LruList <T> | Improve this Doc View Source CreateSynchronized(Int32, Action<T>, IEqualityComparer<T>) Declaration public static LruList<T> CreateSynchronized(int capacity, Action<T> onRemoving = null, IEqualityComparer<T> comparer = null) Parameters Type Name Description Int32 capacity Action <T> onRemoving IEqualityComparer <T> comparer Returns Type Description LruList <T> | Improve this Doc View Source TryFind(Func<T, Boolean>, out T) Declaration public virtual bool TryFind(Func<T, bool> func, out T item) Parameters Type Name Description Func <T, Boolean > func T item Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.PathUtility.html": {
    "href": "api/Microsoft.DocAsCode.Utility.PathUtility.html",
    "title": "Class PathUtility | DocFX website",
    "keywords": "Class PathUtility Inheritance Object PathUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public static class PathUtility Fields | Improve this Doc View Source ListFileExtension Declaration public const string ListFileExtension = \".list\" Field Value Type Description String Methods | Improve this Doc View Source CopyFile(String, String, Boolean) Declaration public static void CopyFile(string path, string targetPath, bool overwrite = false) Parameters Type Name Description String path String targetPath Boolean overwrite | Improve this Doc View Source CopyFilesToFolder(IEnumerable<String>, String, String, Boolean, Action<String>, Func<String, Boolean>) Declaration public static IEnumerable<string> CopyFilesToFolder(this IEnumerable<string> files, string sourceFolder, string destinationFolder, bool overwrite, Action<string> messageHandler, Func<string, bool> errorHandler) Parameters Type Name Description IEnumerable < String > files String sourceFolder String destinationFolder Boolean overwrite Action < String > messageHandler Func < String , Boolean > errorHandler Returns Type Description IEnumerable < String > | Improve this Doc View Source FormatPath(String, UriKind, String) Also change backslash to forward slash Declaration public static string FormatPath(this string path, UriKind kind, string basePath = null) Parameters Type Name Description String path UriKind kind String basePath Returns Type Description String | Improve this Doc View Source GetFileListFromFile(String) Declaration public static List<string> GetFileListFromFile(string filePath) Parameters Type Name Description String filePath Returns Type Description List < String > | Improve this Doc View Source GetFullPath(String, String) Declaration public static string GetFullPath(string folder, string href) Parameters Type Name Description String folder String href Returns Type Description String | Improve this Doc View Source IsPathUnderSpecificFolder(String, String) Declaration public static bool IsPathUnderSpecificFolder(string path, string folder) Parameters Type Name Description String path String folder Returns Type Description Boolean | Improve this Doc View Source IsRelativePath(String) Declaration public static bool IsRelativePath(string path) Parameters Type Name Description String path Returns Type Description Boolean | Improve this Doc View Source IsVaildFilePath(String) http://stackoverflow.com/questions/422090/in-c-sharp-check-that-filename-is-possibly-valid-not-that-it-exists Declaration public static bool IsVaildFilePath(string path) Parameters Type Name Description String path Returns Type Description Boolean | Improve this Doc View Source MakeRelativePath(String, String) Creates a relative path from one file or folder to another. Declaration public static string MakeRelativePath(string basePath, string absolutePath) Parameters Type Name Description String basePath Contains the directory that defines the start of the relative path. String absolutePath Contains the path that defines the endpoint of the relative path. Returns Type Description String The relative path from the start directory to the end path. Exceptions Type Condition System.ArgumentNullException System.UriFormatException System.InvalidOperationException | Improve this Doc View Source NormalizePath(String) Declaration public static string NormalizePath(string path) Parameters Type Name Description String path Returns Type Description String | Improve this Doc View Source SaveFileListToFile(List<String>, String) Declaration public static void SaveFileListToFile(List<string> fileList, string filePath) Parameters Type Name Description List < String > fileList String filePath | Improve this Doc View Source ToValidFilePath(String) Declaration public static string ToValidFilePath(this string input) Parameters Type Name Description String input Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.Utility.ProcessDetail.html": {
    "href": "api/Microsoft.DocAsCode.Utility.ProcessDetail.html",
    "title": "Class ProcessDetail | DocFX website",
    "keywords": "Class ProcessDetail Inheritance Object ProcessDetail Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class ProcessDetail Properties | Improve this Doc View Source Arguments Declaration public string Arguments { get; set; } Property Value Type Description String | Improve this Doc View Source ExecutorPath Declaration public string ExecutorPath { get; set; } Property Value Type Description String | Improve this Doc View Source ExitCode Declaration public int ExitCode { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ProcessId Declaration public int ProcessId { get; set; } Property Value Type Description Int32 | Improve this Doc View Source StandardError Declaration public string StandardError { get; set; } Property Value Type Description String | Improve this Doc View Source StandardOutput Declaration public string StandardOutput { get; set; } Property Value Type Description String | Improve this Doc View Source WorkingDirectory Declaration public string WorkingDirectory { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.ProcessUtility.html": {
    "href": "api/Microsoft.DocAsCode.Utility.ProcessUtility.html",
    "title": "Class ProcessUtility | DocFX website",
    "keywords": "Class ProcessUtility Inheritance Object ProcessUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public static class ProcessUtility Methods | Improve this Doc View Source ExecuteWin32ProcessAsync(String, String, String, Int32) Declaration public static Task<ProcessDetail> ExecuteWin32ProcessAsync(string executorPath, string arguments, string workingDirectory, int timeoutInMilliseconds) Parameters Type Name Description String executorPath String arguments String workingDirectory Int32 timeoutInMilliseconds Returns Type Description Task < ProcessDetail > | Improve this Doc View Source WaitForExitAsync(Process, Int32) Declaration public static Task WaitForExitAsync(this Process process, int timeoutInMilliseconds) Parameters Type Name Description Process process Int32 timeoutInMilliseconds Returns Type Description Task"
  },
  "api/Microsoft.DocAsCode.Utility.RelativePath.html": {
    "href": "api/Microsoft.DocAsCode.Utility.RelativePath.html",
    "title": "Class RelativePath | DocFX website",
    "keywords": "Class RelativePath relative path Inheritance Object RelativePath Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public sealed class RelativePath : IEquatable<RelativePath> Fields | Improve this Doc View Source AltWorkingFolder Declaration public static readonly string AltWorkingFolder Field Value Type Description String | Improve this Doc View Source Empty Declaration public static readonly RelativePath Empty Field Value Type Description RelativePath | Improve this Doc View Source NormalizedWorkingFolder Declaration public static readonly string NormalizedWorkingFolder Field Value Type Description String | Improve this Doc View Source WorkingFolder Declaration public static readonly RelativePath WorkingFolder Field Value Type Description RelativePath | Improve this Doc View Source WorkingFolderChar Declaration public const char WorkingFolderChar = '~' Field Value Type Description Char Properties | Improve this Doc View Source FileName Declaration public string FileName { get; } Property Value Type Description String | Improve this Doc View Source IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean | Improve this Doc View Source ParentDirectoryCount Declaration public int ParentDirectoryCount { get; } Property Value Type Description Int32 | Improve this Doc View Source SubdirectoryCount Declaration public int SubdirectoryCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source BasedOn(RelativePath) Concat two relative path e.g.: {d/e.txt}.BasedOn({a/b/c/}) = {a/b/c/d/e.txt} {../d/e.txt}.BasedOn({a/b/c/}) = {a/b/d/e.txt} {d/e.txt}.BasedOn({a/b/c.txt}) = {a/b/d/e.txt} {../e.txt}.BasedOn({a/b/c.txt}) = {a/e.txt} {../e.txt}.BasedOn({../c.txt}) = {../../e.txt} Declaration public RelativePath BasedOn(RelativePath path) Parameters Type Name Description RelativePath path Returns Type Description RelativePath | Improve this Doc View Source ChangeFileName(String) Declaration public RelativePath ChangeFileName(string fileName) Parameters Type Name Description String fileName Returns Type Description RelativePath | Improve this Doc View Source Equals(RelativePath) Declaration public bool Equals(RelativePath other) Parameters Type Name Description RelativePath other Returns Type Description Boolean Implements IEquatable<RelativePath>.Equals(RelativePath) | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetDirectoryPath() Declaration public RelativePath GetDirectoryPath() Returns Type Description RelativePath | Improve this Doc View Source GetFileNameWithoutExtension() Declaration public string GetFileNameWithoutExtension() Returns Type Description String | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source GetPathFromWorkingFolder() Declaration public RelativePath GetPathFromWorkingFolder() Returns Type Description RelativePath | Improve this Doc View Source GetPathWithoutWorkingFolderChar(String) Declaration public static string GetPathWithoutWorkingFolderChar(string path) Parameters Type Name Description String path Returns Type Description String | Improve this Doc View Source IsFromWorkingFolder() Declaration public bool IsFromWorkingFolder() Returns Type Description Boolean | Improve this Doc View Source IsPathFromWorkingFolder(String) Declaration public static bool IsPathFromWorkingFolder(string path) Parameters Type Name Description String path Returns Type Description Boolean | Improve this Doc View Source MakeRelativeTo(RelativePath) Get relative path from right relative path to left relative path e.g.: {a/b/c.txt}.MakeRelativeTo({d/e.txt}) = {../a/b/c.txt} {a/b/c.txt}.MakeRelativeTo({a/d.txt}) = {b/c.txt} {../../a.txt}.MakeRelativeTo({../b.txt}) = {../a.txt} {../../a.txt}.MakeRelativeTo({../b/c.txt}) = {../../a.txt} {a.txt}.MakeRelativeTo({../b.txt}) = Oop... Declaration public RelativePath MakeRelativeTo(RelativePath relativeTo) Parameters Type Name Description RelativePath relativeTo Returns Type Description RelativePath | Improve this Doc View Source Parse(String) Declaration public static RelativePath Parse(string path) Parameters Type Name Description String path Returns Type Description RelativePath | Improve this Doc View Source Rebase(RelativePath, RelativePath) Rebase the relative path Declaration public RelativePath Rebase(RelativePath from, RelativePath to) Parameters Type Name Description RelativePath from original base path RelativePath to new base path Returns Type Description RelativePath rebased relative path | Improve this Doc View Source RemoveWorkingFolder() Declaration public RelativePath RemoveWorkingFolder() Returns Type Description RelativePath | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source TryGetPathWithoutWorkingFolderChar(String, out String) Declaration public static bool TryGetPathWithoutWorkingFolderChar(string path, out string pathFromWorkingFolder) Parameters Type Name Description String path String pathFromWorkingFolder Returns Type Description Boolean | Improve this Doc View Source UrlDecode() Declaration public RelativePath UrlDecode() Returns Type Description RelativePath | Improve this Doc View Source UrlEncode() Declaration public RelativePath UrlEncode() Returns Type Description RelativePath Operators | Improve this Doc View Source Addition(RelativePath, RelativePath) Concat two relative path e.g.: a/b/c/ + d/e.txt = a/b/c/d/e.txt a/b/c/ + ../d/e.txt = a/b/d/e.txt a/b/c.txt + d/e.txt = a/b/d/e.txt a/b/c.txt + ../e.txt = a/e.txt ../c.txt + ../e.txt = ../../e.txt Declaration public static RelativePath operator +(RelativePath left, RelativePath right) Parameters Type Name Description RelativePath left RelativePath right Returns Type Description RelativePath | Improve this Doc View Source Explicit(String to RelativePath) Declaration public static explicit operator RelativePath(string path) Parameters Type Name Description String path Returns Type Description RelativePath | Improve this Doc View Source Implicit(RelativePath to String) Declaration public static implicit operator string (RelativePath path) Parameters Type Name Description RelativePath path Returns Type Description String | Improve this Doc View Source Subtraction(RelativePath, RelativePath) Get relative path from right relative path to left relative path e.g.: a/b/c.txt - d/e.txt = ../a/b/c.txt a/b/c.txt - a/d.txt = b/c.txt ../../a.txt - ../b.txt = ../a.txt ../../a.txt - ../b/c.txt = ../../a.txt a.txt - ../b.txt = Oop... Declaration public static RelativePath operator -(RelativePath left, RelativePath right) Parameters Type Name Description RelativePath left RelativePath right Returns Type Description RelativePath Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Utility.StringExtension.html": {
    "href": "api/Microsoft.DocAsCode.Utility.StringExtension.html",
    "title": "Class StringExtension | DocFX website",
    "keywords": "Class StringExtension Inheritance Object StringExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public static class StringExtension Methods | Improve this Doc View Source BackSlashToForwardSlash(String) Declaration public static string BackSlashToForwardSlash(this string input) Parameters Type Name Description String input Returns Type Description String | Improve this Doc View Source ForwardSlashCombine(String, String) Declaration public static string ForwardSlashCombine(this string baseAddress, string relativeAddress) Parameters Type Name Description String baseAddress String relativeAddress Returns Type Description String | Improve this Doc View Source GetMd5String(String) Declaration public static string GetMd5String(this string content) Parameters Type Name Description String content Returns Type Description String | Improve this Doc View Source GetNormalizedFullPathKey(IEnumerable<String>) Declaration public static string GetNormalizedFullPathKey(this IEnumerable<string> list) Parameters Type Name Description IEnumerable < String > list Returns Type Description String | Improve this Doc View Source GetNormalizedFullPathList(IEnumerable<String>) Declaration public static IEnumerable<string> GetNormalizedFullPathList(this IEnumerable<string> paths) Parameters Type Name Description IEnumerable < String > paths Returns Type Description IEnumerable < String > | Improve this Doc View Source GetNormalizedPathList(IEnumerable<String>) Declaration public static IEnumerable<string> GetNormalizedPathList(this IEnumerable<string> paths) Parameters Type Name Description IEnumerable < String > paths Returns Type Description IEnumerable < String > | Improve this Doc View Source ToDelimitedString(IEnumerable<String>, String) Declaration public static string ToDelimitedString(this IEnumerable<string> input, string delimiter = \",\") Parameters Type Name Description IEnumerable < String > input String delimiter Returns Type Description String | Improve this Doc View Source ToDisplayPath(String) Declaration public static string ToDisplayPath(this string path) Parameters Type Name Description String path Returns Type Description String | Improve this Doc View Source ToNormalizedFullPath(String) Should not convert path to lower case as under Linux/Unix, path is case sensitive Also, Website URL should be case sensitive consider the server might be running under Linux/Unix So we could even not lower the path under Windows as the generated YAML should be ideally OS irrelevant Declaration public static string ToNormalizedFullPath(this string path) Parameters Type Name Description String path Returns Type Description String | Improve this Doc View Source ToNormalizedPath(String) Declaration public static string ToNormalizedPath(this string path) Parameters Type Name Description String path Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.Utility.TaskHelper.html": {
    "href": "api/Microsoft.DocAsCode.Utility.TaskHelper.html",
    "title": "Class TaskHelper | DocFX website",
    "keywords": "Class TaskHelper Inheritance Object TaskHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public static class TaskHelper Fields | Improve this Doc View Source Completed A completed task Declaration public static readonly Task Completed Field Value Type Description Task Methods | Improve this Doc View Source ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>) Provide parallel version for ForEach Declaration public static Task ForEachInParallelAsync<T>(this IEnumerable<T> source, Func<T, Task> body) Parameters Type Name Description IEnumerable <T> source The enumerable to control the foreach loop Func <T, Task > body The task body Returns Type Description Task The task Type Parameters Name Description T The type for the enumerable Remarks The max parallelism is 64. | Improve this Doc View Source ForEachInParallelAsync<T>(IEnumerable<T>, Func<T, Task>, Int32) Provide parallel version for ForEach Declaration public static Task ForEachInParallelAsync<T>(this IEnumerable<T> source, Func<T, Task> body, int maxParallelism) Parameters Type Name Description IEnumerable <T> source The enumerable to control the foreach loop Func <T, Task > body The task body Int32 maxParallelism The max parallelism allowed Returns Type Description Task The task Type Parameters Name Description T The type for the enumerable | Improve this Doc View Source SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>) Provide parallel version for Select that each element will map to a result Declaration public static Task<IReadOnlyList<TResult>> SelectInParallelAsync<TSource, TResult>(this IEnumerable<TSource> source, Func<TSource, Task<TResult>> body) Parameters Type Name Description IEnumerable <TSource> source The enumerable to control the select Func <TSource, Task <TResult>> body The select body Returns Type Description Task < IReadOnlyList <TResult>> The task Type Parameters Name Description TSource The type for the enumerable TResult The type for the result Remarks The max parallelism is 64. | Improve this Doc View Source SelectInParallelAsync<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Task<TResult>>, Int32) Provide parallel version for Select that each element will map to a result Declaration public static Task<IReadOnlyList<TResult>> SelectInParallelAsync<TSource, TResult>(this IEnumerable<TSource> source, Func<TSource, Task<TResult>> body, int maxParallelism) Parameters Type Name Description IEnumerable <TSource> source The enumerable to control the select Func <TSource, Task <TResult>> body The select body Int32 maxParallelism The max parallelism allowed Returns Type Description Task < IReadOnlyList <TResult>> The task Type Parameters Name Description TSource The type for the enumerable TResult The type for the result"
  },
  "api/Microsoft.DocAsCode.Utility.TreeIterator.html": {
    "href": "api/Microsoft.DocAsCode.Utility.TreeIterator.html",
    "title": "Class TreeIterator | DocFX website",
    "keywords": "Class TreeIterator Inheritance Object TreeIterator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Utility Assembly :Microsoft.DocAsCode.Utility.dll Syntax public static class TreeIterator Methods | Improve this Doc View Source Preorder<T>(T, T, Func<T, IEnumerable<T>>, Func<T, T, Boolean>) Declaration public static void Preorder<T>(T current, T parent, Func<T, IEnumerable<T>> childrenGetter, Func<T, T, bool> action) Parameters Type Name Description T current T parent Func <T, IEnumerable <T>> childrenGetter Func <T, T, Boolean > action Type Parameters Name Description T | Improve this Doc View Source PreorderAsync<T>(T, T, Func<T, IEnumerable<T>>, Func<T, T, Task<Boolean>>) Declaration public static Task PreorderAsync<T>(T current, T parent, Func<T, IEnumerable<T>> childrenGetter, Func<T, T, Task<bool>> action) Parameters Type Name Description T current T parent Func <T, IEnumerable <T>> childrenGetter Func <T, T, Task < Boolean >> action Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source PreorderFirstOrDefault<T>(T, Func<T, IEnumerable<T>>, Func<T, Boolean>) Declaration public static T PreorderFirstOrDefault<T>(T current, Func<T, IEnumerable<T>> childrenGetter, Func<T, bool> predicate) Parameters Type Name Description T current Func <T, IEnumerable <T>> childrenGetter Func <T, Boolean > predicate Returns Type Description T Type Parameters Name Description T"
  },
  "api/Microsoft.DocAsCode.Utility.html": {
    "href": "api/Microsoft.DocAsCode.Utility.html",
    "title": "Namespace Microsoft.DocAsCode.Utility | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Utility Classes AsyncConcurrentCache<TKey, TValue> An asynchronous wrapper over concurrent dictionary CircularBuffer<T> CircularStream CollectionExtensions CompositeStream Write-only composite stream. ConsoleUtility ConvertToObjectHelper FilePathComparer GitDetail GitUtility JObjectDictionaryToObjectDictionaryConverter LruList<T> PathUtility ProcessDetail ProcessUtility RelativePath relative path StringExtension TaskHelper TreeIterator"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ExtensibleMemberAttribute.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ExtensibleMemberAttribute.html",
    "title": "Class ExtensibleMemberAttribute | DocFX website",
    "keywords": "Class ExtensibleMemberAttribute Inheritance Object Attribute ExtensibleMemberAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class ExtensibleMemberAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source ExtensibleMemberAttribute() Declaration public ExtensibleMemberAttribute() | Improve this Doc View Source ExtensibleMemberAttribute(String) Declaration public ExtensibleMemberAttribute(string prefix) Parameters Type Name Description String prefix Properties | Improve this Doc View Source Prefix Declaration public string Prefix { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitArrayNodeDeserializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitArrayNodeDeserializer.html",
    "title": "Class EmitArrayNodeDeserializer | DocFX website",
    "keywords": "Class EmitArrayNodeDeserializer Inheritance Object EmitArrayNodeDeserializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.NodeDeserializers Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class EmitArrayNodeDeserializer : INodeDeserializer Explicit Interface Implementations | Improve this Doc View Source INodeDeserializer.Deserialize(EventReader, Type, Func<EventReader, Type, Object>, out Object) Declaration bool INodeDeserializer.Deserialize(EventReader reader, Type expectedType, Func<EventReader, Type, object> nestedObjectDeserializer, out object value) Parameters Type Name Description YamlDotNet.Core.EventReader reader Type expectedType Func < YamlDotNet.Core.EventReader , Type , Object > nestedObjectDeserializer Object value Returns Type Description Boolean Implements YamlDotNet.Serialization.INodeDeserializer.Deserialize(YamlDotNet.Core.EventReader, System.Type, System.Func<YamlDotNet.Core.EventReader, System.Type, System.Object>, System.Object) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitGenericCollectionNodeDeserializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitGenericCollectionNodeDeserializer.html",
    "title": "Class EmitGenericCollectionNodeDeserializer | DocFX website",
    "keywords": "Class EmitGenericCollectionNodeDeserializer Inheritance Object EmitGenericCollectionNodeDeserializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.NodeDeserializers Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class EmitGenericCollectionNodeDeserializer : INodeDeserializer Constructors | Improve this Doc View Source EmitGenericCollectionNodeDeserializer(IObjectFactory) Declaration public EmitGenericCollectionNodeDeserializer(IObjectFactory objectFactory) Parameters Type Name Description YamlDotNet.Serialization.IObjectFactory objectFactory Explicit Interface Implementations | Improve this Doc View Source INodeDeserializer.Deserialize(EventReader, Type, Func<EventReader, Type, Object>, out Object) Declaration bool INodeDeserializer.Deserialize(EventReader reader, Type expectedType, Func<EventReader, Type, object> nestedObjectDeserializer, out object value) Parameters Type Name Description YamlDotNet.Core.EventReader reader Type expectedType Func < YamlDotNet.Core.EventReader , Type , Object > nestedObjectDeserializer Object value Returns Type Description Boolean Implements YamlDotNet.Serialization.INodeDeserializer.Deserialize(YamlDotNet.Core.EventReader, System.Type, System.Func<YamlDotNet.Core.EventReader, System.Type, System.Object>, System.Object) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitGenericDictionaryNodeDeserializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.EmitGenericDictionaryNodeDeserializer.html",
    "title": "Class EmitGenericDictionaryNodeDeserializer | DocFX website",
    "keywords": "Class EmitGenericDictionaryNodeDeserializer Inheritance Object EmitGenericDictionaryNodeDeserializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.NodeDeserializers Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class EmitGenericDictionaryNodeDeserializer : INodeDeserializer Constructors | Improve this Doc View Source EmitGenericDictionaryNodeDeserializer(IObjectFactory) Declaration public EmitGenericDictionaryNodeDeserializer(IObjectFactory objectFactory) Parameters Type Name Description YamlDotNet.Serialization.IObjectFactory objectFactory Explicit Interface Implementations | Improve this Doc View Source INodeDeserializer.Deserialize(EventReader, Type, Func<EventReader, Type, Object>, out Object) Declaration bool INodeDeserializer.Deserialize(EventReader reader, Type expectedType, Func<EventReader, Type, object> nestedObjectDeserializer, out object value) Parameters Type Name Description YamlDotNet.Core.EventReader reader Type expectedType Func < YamlDotNet.Core.EventReader , Type , Object > nestedObjectDeserializer Object value Returns Type Description Boolean Implements YamlDotNet.Serialization.INodeDeserializer.Deserialize(YamlDotNet.Core.EventReader, System.Type, System.Func<YamlDotNet.Core.EventReader, System.Type, System.Object>, System.Object) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.ExtensibleObjectNodeDeserializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.ExtensibleObjectNodeDeserializer.html",
    "title": "Class ExtensibleObjectNodeDeserializer | DocFX website",
    "keywords": "Class ExtensibleObjectNodeDeserializer Inheritance Object ExtensibleObjectNodeDeserializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.NodeDeserializers Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class ExtensibleObjectNodeDeserializer : INodeDeserializer Constructors | Improve this Doc View Source ExtensibleObjectNodeDeserializer(IObjectFactory, ITypeInspector, Boolean) Declaration public ExtensibleObjectNodeDeserializer(IObjectFactory objectFactory, ITypeInspector typeDescriptor, bool ignoreUnmatched) Parameters Type Name Description YamlDotNet.Serialization.IObjectFactory objectFactory YamlDotNet.Serialization.ITypeInspector typeDescriptor Boolean ignoreUnmatched Explicit Interface Implementations | Improve this Doc View Source INodeDeserializer.Deserialize(EventReader, Type, Func<EventReader, Type, Object>, out Object) Declaration bool INodeDeserializer.Deserialize(EventReader reader, Type expectedType, Func<EventReader, Type, object> nestedObjectDeserializer, out object value) Parameters Type Name Description YamlDotNet.Core.EventReader reader Type expectedType Func < YamlDotNet.Core.EventReader , Type , Object > nestedObjectDeserializer Object value Returns Type Description Boolean Implements YamlDotNet.Serialization.INodeDeserializer.Deserialize(YamlDotNet.Core.EventReader, System.Type, System.Func<YamlDotNet.Core.EventReader, System.Type, System.Object>, System.Object) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.NodeDeserializers.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization.NodeDeserializers | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization.NodeDeserializers Classes EmitArrayNodeDeserializer EmitGenericCollectionNodeDeserializer EmitGenericDictionaryNodeDeserializer ExtensibleObjectNodeDeserializer"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors.BetterObjectDescriptor.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors.BetterObjectDescriptor.html",
    "title": "Class BetterObjectDescriptor | DocFX website",
    "keywords": "Class BetterObjectDescriptor Inheritance Object BetterObjectDescriptor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class BetterObjectDescriptor : IObjectDescriptor Constructors | Improve this Doc View Source BetterObjectDescriptor(Object, Type, Type) Declaration public BetterObjectDescriptor(object value, Type type, Type staticType) Parameters Type Name Description Object value Type type Type staticType | Improve this Doc View Source BetterObjectDescriptor(Object, Type, Type, ScalarStyle) Declaration public BetterObjectDescriptor(object value, Type type, Type staticType, ScalarStyle scalarStyle) Parameters Type Name Description Object value Type type Type staticType YamlDotNet.Core.ScalarStyle scalarStyle Properties | Improve this Doc View Source ScalarStyle Declaration public ScalarStyle ScalarStyle { get; } Property Value Type Description YamlDotNet.Core.ScalarStyle Implements YamlDotNet.Serialization.IObjectDescriptor.ScalarStyle | Improve this Doc View Source StaticType Declaration public Type StaticType { get; } Property Value Type Description Type Implements YamlDotNet.Serialization.IObjectDescriptor.StaticType | Improve this Doc View Source Type Declaration public Type Type { get; } Property Value Type Description Type Implements YamlDotNet.Serialization.IObjectDescriptor.Type | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description Object Implements YamlDotNet.Serialization.IObjectDescriptor.Value Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectDescriptors Classes BetterObjectDescriptor"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectFactories.DefaultEmitObjectFactory.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectFactories.DefaultEmitObjectFactory.html",
    "title": "Class DefaultEmitObjectFactory | DocFX website",
    "keywords": "Class DefaultEmitObjectFactory Inheritance Object DefaultEmitObjectFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.ObjectFactories Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class DefaultEmitObjectFactory : IObjectFactory Methods | Improve this Doc View Source Create(Type) Declaration public object Create(Type type) Parameters Type Name Description Type type Returns Type Description Object Implements YamlDotNet.Serialization.IObjectFactory.Create(System.Type) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectFactories.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectFactories.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectFactories | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectFactories Classes DefaultEmitObjectFactory"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.FullObjectGraphTraversalStrategy.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.FullObjectGraphTraversalStrategy.html",
    "title": "Class FullObjectGraphTraversalStrategy | DocFX website",
    "keywords": "Class FullObjectGraphTraversalStrategy An implementation of IObjectGraphTraversalStrategy that traverses readable properties, collections and dictionaries. Inheritance Object FullObjectGraphTraversalStrategy Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class FullObjectGraphTraversalStrategy : IObjectGraphTraversalStrategy Constructors | Improve this Doc View Source FullObjectGraphTraversalStrategy(YamlSerializer, ITypeInspector, ITypeResolver, Int32, INamingConvention) Declaration public FullObjectGraphTraversalStrategy(YamlSerializer serializer, ITypeInspector typeDescriptor, ITypeResolver typeResolver, int maxRecursion, INamingConvention namingConvention) Parameters Type Name Description YamlSerializer serializer YamlDotNet.Serialization.ITypeInspector typeDescriptor YamlDotNet.Serialization.ITypeResolver typeResolver Int32 maxRecursion YamlDotNet.Serialization.INamingConvention namingConvention Properties | Improve this Doc View Source Serializer Declaration protected YamlSerializer Serializer { get; } Property Value Type Description YamlSerializer Methods | Improve this Doc View Source Traverse(IObjectDescriptor, IObjectGraphVisitor, Int32) Declaration protected virtual void Traverse(IObjectDescriptor value, IObjectGraphVisitor visitor, int currentDepth) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor value YamlDotNet.Serialization.IObjectGraphVisitor visitor Int32 currentDepth | Improve this Doc View Source TraverseDictionary(IObjectDescriptor, IObjectGraphVisitor, Int32) Declaration protected virtual void TraverseDictionary(IObjectDescriptor dictionary, IObjectGraphVisitor visitor, int currentDepth) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor dictionary YamlDotNet.Serialization.IObjectGraphVisitor visitor Int32 currentDepth | Improve this Doc View Source TraverseObject(IObjectDescriptor, IObjectGraphVisitor, Int32) Declaration protected virtual void TraverseObject(IObjectDescriptor value, IObjectGraphVisitor visitor, int currentDepth) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor value YamlDotNet.Serialization.IObjectGraphVisitor visitor Int32 currentDepth | Improve this Doc View Source TraverseProperties(IObjectDescriptor, IObjectGraphVisitor, Int32) Declaration protected virtual void TraverseProperties(IObjectDescriptor value, IObjectGraphVisitor visitor, int currentDepth) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor value YamlDotNet.Serialization.IObjectGraphVisitor visitor Int32 currentDepth Explicit Interface Implementations | Improve this Doc View Source IObjectGraphTraversalStrategy.Traverse(IObjectDescriptor, IObjectGraphVisitor) Declaration void IObjectGraphTraversalStrategy.Traverse(IObjectDescriptor graph, IObjectGraphVisitor visitor) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor graph YamlDotNet.Serialization.IObjectGraphVisitor visitor Implements YamlDotNet.Serialization.IObjectGraphTraversalStrategy.Traverse(YamlDotNet.Serialization.IObjectDescriptor, YamlDotNet.Serialization.IObjectGraphVisitor) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.RoundtripObjectGraphTraversalStrategy.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.RoundtripObjectGraphTraversalStrategy.html",
    "title": "Class RoundtripObjectGraphTraversalStrategy | DocFX website",
    "keywords": "Class RoundtripObjectGraphTraversalStrategy An implementation of IObjectGraphTraversalStrategy that traverses properties that are read/write, collections and dictionaries, while ensuring that the graph can be regenerated from the resulting document. Inheritance Object FullObjectGraphTraversalStrategy RoundtripObjectGraphTraversalStrategy Inherited Members FullObjectGraphTraversalStrategy.Serializer Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.FullObjectGraphTraversalStrategy.YamlDotNet.Serialization.IObjectGraphTraversalStrategy.Traverse(YamlDotNet.Serialization.IObjectDescriptor, YamlDotNet.Serialization.IObjectGraphVisitor) FullObjectGraphTraversalStrategy.Traverse(IObjectDescriptor, IObjectGraphVisitor, Int32) FullObjectGraphTraversalStrategy.TraverseObject(IObjectDescriptor, IObjectGraphVisitor, Int32) FullObjectGraphTraversalStrategy.TraverseDictionary(IObjectDescriptor, IObjectGraphVisitor, Int32) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class RoundtripObjectGraphTraversalStrategy : FullObjectGraphTraversalStrategy, IObjectGraphTraversalStrategy Constructors | Improve this Doc View Source RoundtripObjectGraphTraversalStrategy(YamlSerializer, ITypeInspector, ITypeResolver, Int32) Declaration public RoundtripObjectGraphTraversalStrategy(YamlSerializer serializer, ITypeInspector typeDescriptor, ITypeResolver typeResolver, int maxRecursion) Parameters Type Name Description YamlSerializer serializer YamlDotNet.Serialization.ITypeInspector typeDescriptor YamlDotNet.Serialization.ITypeResolver typeResolver Int32 maxRecursion Methods | Improve this Doc View Source TraverseProperties(IObjectDescriptor, IObjectGraphVisitor, Int32) Declaration protected override void TraverseProperties(IObjectDescriptor value, IObjectGraphVisitor visitor, int currentDepth) Parameters Type Name Description YamlDotNet.Serialization.IObjectDescriptor value YamlDotNet.Serialization.IObjectGraphVisitor visitor Int32 currentDepth Overrides FullObjectGraphTraversalStrategy.TraverseProperties(IObjectDescriptor, IObjectGraphVisitor, Int32) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization.ObjectGraphTraversalStrategies Classes FullObjectGraphTraversalStrategy An implementation of IObjectGraphTraversalStrategy that traverses readable properties, collections and dictionaries. RoundtripObjectGraphTraversalStrategy An implementation of IObjectGraphTraversalStrategy that traverses properties that are read/write, collections and dictionaries, while ensuring that the graph can be regenerated from the resulting document."
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.EmitTypeInspector.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.EmitTypeInspector.html",
    "title": "Class EmitTypeInspector | DocFX website",
    "keywords": "Class EmitTypeInspector Inheritance Object ExtensibleTypeInspectorSkeleton EmitTypeInspector Inherited Members ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class EmitTypeInspector : ExtensibleTypeInspectorSkeleton, IExtensibleTypeInspector, ITypeInspector Constructors | Improve this Doc View Source EmitTypeInspector(ITypeResolver) Declaration public EmitTypeInspector(ITypeResolver resolver) Parameters Type Name Description YamlDotNet.Serialization.ITypeResolver resolver Methods | Improve this Doc View Source GetProperties(Type, Object) Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type Object container Returns Type Description IEnumerable < YamlDotNet.Serialization.IPropertyDescriptor > Overrides ExtensibleTypeInspectorSkeleton.GetProperties(Type, Object) | Improve this Doc View Source GetProperty(Type, Object, String) Declaration public override IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Overrides ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleNamingConventionTypeInspector.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleNamingConventionTypeInspector.html",
    "title": "Class ExtensibleNamingConventionTypeInspector | DocFX website",
    "keywords": "Class ExtensibleNamingConventionTypeInspector Inheritance Object ExtensibleTypeInspectorSkeleton ExtensibleNamingConventionTypeInspector Inherited Members ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class ExtensibleNamingConventionTypeInspector : ExtensibleTypeInspectorSkeleton, IExtensibleTypeInspector, ITypeInspector Constructors | Improve this Doc View Source ExtensibleNamingConventionTypeInspector(IExtensibleTypeInspector, INamingConvention) Declaration public ExtensibleNamingConventionTypeInspector(IExtensibleTypeInspector innerTypeDescriptor, INamingConvention namingConvention) Parameters Type Name Description IExtensibleTypeInspector innerTypeDescriptor YamlDotNet.Serialization.INamingConvention namingConvention Methods | Improve this Doc View Source GetProperties(Type, Object) Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type Object container Returns Type Description IEnumerable < YamlDotNet.Serialization.IPropertyDescriptor > Overrides ExtensibleTypeInspectorSkeleton.GetProperties(Type, Object) | Improve this Doc View Source GetProperty(Type, Object, String) Declaration public override IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Overrides ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleReadableAndWritablePropertiesTypeInspector.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleReadableAndWritablePropertiesTypeInspector.html",
    "title": "Class ExtensibleReadableAndWritablePropertiesTypeInspector | DocFX website",
    "keywords": "Class ExtensibleReadableAndWritablePropertiesTypeInspector Inheritance Object ExtensibleTypeInspectorSkeleton ExtensibleReadableAndWritablePropertiesTypeInspector Inherited Members ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class ExtensibleReadableAndWritablePropertiesTypeInspector : ExtensibleTypeInspectorSkeleton, IExtensibleTypeInspector, ITypeInspector Constructors | Improve this Doc View Source ExtensibleReadableAndWritablePropertiesTypeInspector(IExtensibleTypeInspector) Declaration public ExtensibleReadableAndWritablePropertiesTypeInspector(IExtensibleTypeInspector innerTypeDescriptor) Parameters Type Name Description IExtensibleTypeInspector innerTypeDescriptor Methods | Improve this Doc View Source GetProperties(Type, Object) Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type Object container Returns Type Description IEnumerable < YamlDotNet.Serialization.IPropertyDescriptor > Overrides ExtensibleTypeInspectorSkeleton.GetProperties(Type, Object) | Improve this Doc View Source GetProperty(Type, Object, String) Declaration public override IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Overrides ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleTypeInspectorSkeleton.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleTypeInspectorSkeleton.html",
    "title": "Class ExtensibleTypeInspectorSkeleton | DocFX website",
    "keywords": "Class ExtensibleTypeInspectorSkeleton Inheritance Object ExtensibleTypeInspectorSkeleton Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public abstract class ExtensibleTypeInspectorSkeleton : IExtensibleTypeInspector, ITypeInspector Methods | Improve this Doc View Source GetProperties(Type, Object) Declaration public abstract IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type Object container Returns Type Description IEnumerable < YamlDotNet.Serialization.IPropertyDescriptor > Implements YamlDotNet.Serialization.ITypeInspector.GetProperties(System.Type, System.Object) | Improve this Doc View Source GetProperty(Type, Object, String) Declaration public virtual IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Implements IExtensibleTypeInspector.GetProperty(Type, Object, String) | Improve this Doc View Source GetProperty(Type, Object, String, Boolean) Declaration public IPropertyDescriptor GetProperty(Type type, object container, string name, bool ignoreUnmatched) Parameters Type Name Description Type type Object container String name Boolean ignoreUnmatched Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Implements YamlDotNet.Serialization.ITypeInspector.GetProperty(System.Type, System.Object, System.String, System.Boolean) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleYamlAttributesTypeInspector.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.ExtensibleYamlAttributesTypeInspector.html",
    "title": "Class ExtensibleYamlAttributesTypeInspector | DocFX website",
    "keywords": "Class ExtensibleYamlAttributesTypeInspector Applies the YamlMemberAttribute to another ITypeInspector . Inheritance Object ExtensibleTypeInspectorSkeleton ExtensibleYamlAttributesTypeInspector Inherited Members ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class ExtensibleYamlAttributesTypeInspector : ExtensibleTypeInspectorSkeleton, IExtensibleTypeInspector, ITypeInspector Constructors | Improve this Doc View Source ExtensibleYamlAttributesTypeInspector(IExtensibleTypeInspector) Declaration public ExtensibleYamlAttributesTypeInspector(IExtensibleTypeInspector innerTypeDescriptor) Parameters Type Name Description IExtensibleTypeInspector innerTypeDescriptor Methods | Improve this Doc View Source GetProperties(Type, Object) Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type Object container Returns Type Description IEnumerable < YamlDotNet.Serialization.IPropertyDescriptor > Overrides ExtensibleTypeInspectorSkeleton.GetProperties(Type, Object) | Improve this Doc View Source GetProperty(Type, Object, String) Declaration public override IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Overrides ExtensibleTypeInspectorSkeleton.GetProperty(Type, Object, String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineToken.html",
    "title": "Class AzureMigrationIncludeInlineToken | DocFX website",
    "keywords": "Class AzureMigrationIncludeInlineToken Inheritance Object AzureMigrationIncludeBasicToken AzureMigrationIncludeInlineToken Inherited Members AzureMigrationIncludeBasicToken.Rule AzureMigrationIncludeBasicToken.Context AzureMigrationIncludeBasicToken.Name AzureMigrationIncludeBasicToken.Src AzureMigrationIncludeBasicToken.Title AzureMigrationIncludeBasicToken.SourceInfo Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeInlineToken : AzureMigrationIncludeBasicToken, IMarkdownToken Constructors | Improve this Doc View Source AzureMigrationIncludeInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration public AzureMigrationIncludeInlineToken(IMarkdownRule rule, IMarkdownContext context, string name, string src, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String src String title SourceInfo sourceInfo Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationMarked.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationMarked.html",
    "title": "Class AzureMigrationMarked | DocFX website",
    "keywords": "Class AzureMigrationMarked Inheritance Object AzureMigrationMarked Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationMarked Methods | Improve this Doc View Source Markup(String, String, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureVideoInfo>) Declaration public static string Markup(string src, string path = null, IReadOnlyDictionary<string, AzureFileInfo> azureMarkdownFileInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureResourceFileInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureIncludeMarkdownFileInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureIncludeResourceFileInfoMapping = null, IReadOnlyDictionary<string, AzureVideoInfo> azureVideoInfoMapping = null) Parameters Type Name Description String src String path IReadOnlyDictionary < String , AzureFileInfo > azureMarkdownFileInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureResourceFileInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureIncludeMarkdownFileInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureIncludeResourceFileInfoMapping IReadOnlyDictionary < String , AzureVideoInfo > azureVideoInfoMapping Returns Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationParagraphBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationParagraphBlockRule.html",
    "title": "Class AzureMigrationParagraphBlockRule | DocFX website",
    "keywords": "Class AzureMigrationParagraphBlockRule Inheritance Object MarkdownParagraphBlockRule GfmParagraphBlockRule AzureMigrationParagraphBlockRule Inherited Members MarkdownParagraphBlockRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationParagraphBlockRule : GfmParagraphBlockRule, IMarkdownRule Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownParagraphBlockRule.Name | Improve this Doc View Source Paragraph Declaration public override Regex Paragraph { get; } Property Value Type Description Regex Overrides GfmParagraphBlockRule.Paragraph Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationVideoBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationVideoBlockRule.html",
    "title": "Class AzureMigrationVideoBlockRule | DocFX website",
    "keywords": "Class AzureMigrationVideoBlockRule Inheritance Object AzureMigrationVideoBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationVideoBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureMigrationVideoRegex Declaration public virtual Regex AzureMigrationVideoRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockRule.html",
    "title": "Class AzureNoteBlockRule | DocFX website",
    "keywords": "Class AzureNoteBlockRule Inheritance Object AzureNoteBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureNoteBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureNoteRegex Declaration public virtual Regex AzureNoteRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockToken.html",
    "title": "Class AzureNoteBlockToken | DocFX website",
    "keywords": "Class AzureNoteBlockToken Inheritance Object MarkdownTextToken AzureNoteBlockToken Inherited Members MarkdownTextToken.Rule MarkdownTextToken.Context MarkdownTextToken.Content MarkdownTextToken.SourceInfo Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureNoteBlockToken : MarkdownTextToken, IMarkdownToken Constructors | Improve this Doc View Source AzureNoteBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public AzureNoteBlockToken(IMarkdownRule rule, IMarkdownContext context, string noteType, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String noteType String content SourceInfo sourceInfo Properties | Improve this Doc View Source NoteType Declaration public string NoteType { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureParagraphBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureParagraphBlockRule.html",
    "title": "Class AzureParagraphBlockRule | DocFX website",
    "keywords": "Class AzureParagraphBlockRule Inheritance Object MarkdownParagraphBlockRule GfmParagraphBlockRule AzureParagraphBlockRule Inherited Members MarkdownParagraphBlockRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureParagraphBlockRule : GfmParagraphBlockRule, IMarkdownRule Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownParagraphBlockRule.Name | Improve this Doc View Source Paragraph Declaration public override Regex Paragraph { get; } Property Value Type Description Regex Overrides GfmParagraphBlockRule.Paragraph Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockRule.html",
    "title": "Class AzureSelectorBlockRule | DocFX website",
    "keywords": "Class AzureSelectorBlockRule Inheritance Object AzureSelectorBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureSelectorBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureNoteRegex Declaration public virtual Regex AzureNoteRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockToken.html",
    "title": "Class AzureSelectorBlockToken | DocFX website",
    "keywords": "Class AzureSelectorBlockToken Inheritance Object AzureSelectorBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureSelectorBlockToken : IMarkdownToken Constructors | Improve this Doc View Source AzureSelectorBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public AzureSelectorBlockToken(IMarkdownRule rule, IMarkdownContext context, string selectorType, string selectorConditions, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String selectorType String selectorConditions SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SelectorConditions Declaration public string SelectorConditions { get; } Property Value Type Description String | Improve this Doc View Source SelectorType Declaration public string SelectorType { get; } Property Value Type Description String | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockRule.html",
    "title": "Class AzureVideoBlockRule | DocFX website",
    "keywords": "Class AzureVideoBlockRule Inheritance Object AzureVideoBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureVideoBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureVideoRegex Declaration public virtual Regex AzureVideoRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockToken.html",
    "title": "Class AzureVideoBlockToken | DocFX website",
    "keywords": "Class AzureVideoBlockToken Inheritance Object AzureVideoBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureVideoBlockToken : IMarkdownToken Constructors | Improve this Doc View Source AzureVideoBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public AzureVideoBlockToken(IMarkdownRule rule, IMarkdownContext context, string videoId, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String videoId SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source VideoId Declaration public string VideoId { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoInfo.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoInfo.html",
    "title": "Class AzureVideoInfo | DocFX website",
    "keywords": "Class AzureVideoInfo Inheritance Object AzureVideoInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureVideoInfo Properties | Improve this Doc View Source Height Indicate the video height Declaration public int Height { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Id Indicate the azure video id Declaration public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Link Indicate the azure video link Declaration public string Link { get; set; } Property Value Type Description String | Improve this Doc View Source Width Indicate the video width Declaration public int Width { get; set; } Property Value Type Description Int32 Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.html",
    "title": "Namespace Microsoft.DocAsCode.AzureMarkdownRewriters | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.AzureMarkdownRewriters Classes AzureBlockquoteBlockRule AzureBlockquoteBlockToken AzureEngineBuilder AzureFileInfo AzureHtmlMetadataBlockRule AzureHtmlMetadataBlockToken AzureIncludeBasicToken AzureIncludeBlockRule AzureIncludeBlockToken AzureIncludeInlineRule AzureIncludeInlineToken AzureMarkdownRenderer AzureMarked AzureMigrationEngineBuilder AzureMigrationHtmlMetadataBlockRule AzureMigrationIncludeBasicToken AzureMigrationIncludeBlockRule AzureMigrationIncludeBlockToken AzureMigrationIncludeInlineRule AzureMigrationIncludeInlineToken AzureMigrationMarked AzureMigrationParagraphBlockRule AzureMigrationVideoBlockRule AzureNoteBlockRule AzureNoteBlockToken AzureParagraphBlockRule AzureSelectorBlockRule AzureSelectorBlockToken AzureVideoBlockRule AzureVideoBlockToken AzureVideoInfo"
  },
  "api/Microsoft.DocAsCode.Build.Common.ApplyOverwriteDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.ApplyOverwriteDocument.html",
    "title": "Class ApplyOverwriteDocument | DocFX website",
    "keywords": "Class ApplyOverwriteDocument Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument Inherited Members BaseDocumentBuildStep.Name BaseDocumentBuildStep.BuildOrder BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class ApplyOverwriteDocument : BaseDocumentBuildStep, IDocumentBuildStep Methods | Improve this Doc View Source ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) Declaration protected abstract void ApplyOverwrite(IHostService host, List<FileModel> od, string uid, List<FileModel> articles) Parameters Type Name Description IHostService host List < FileModel > od String uid List < FileModel > articles | Improve this Doc View Source ApplyOverwrite<T>(IHostService, List<FileModel>, String, List<FileModel>, Func<FileModel, String, IHostService, IEnumerable<T>>, Func<FileModel, String, IHostService, IEnumerable<T>>) Declaration protected void ApplyOverwrite<T>(IHostService host, List<FileModel> od, string uid, List<FileModel> articles, Func<FileModel, string, IHostService, IEnumerable<T>> getItemsFromOverwriteDocument, Func<FileModel, string, IHostService, IEnumerable<T>> getItemsToOverwrite)where T : class, IOverwriteDocumentViewModel Parameters Type Name Description IHostService host List < FileModel > od String uid List < FileModel > articles Func < FileModel , String , IHostService , IEnumerable <T>> getItemsFromOverwriteDocument Func < FileModel , String , IHostService , IEnumerable <T>> getItemsToOverwrite Type Parameters Name Description T | Improve this Doc View Source ApplyOverwrites(ImmutableList<FileModel>, IHostService) Declaration protected virtual void ApplyOverwrites(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Overrides BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.BaseDocumentBuildStep.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.BaseDocumentBuildStep.html",
    "title": "Class BaseDocumentBuildStep | DocFX website",
    "keywords": "Class BaseDocumentBuildStep Inheritance Object BaseDocumentBuildStep Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class BaseDocumentBuildStep : IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public abstract int BuildOrder { get; } Property Value Type Description Int32 Implements IDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description String Implements IDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public virtual void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Implements IDocumentBuildStep.Build(FileModel, IHostService) | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration public virtual void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Implements IDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) | Improve this Doc View Source Prebuild(ImmutableList<FileModel>, IHostService) Declaration public virtual IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Implements IDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.DisposableDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.DisposableDocumentProcessor.html",
    "title": "Class DisposableDocumentProcessor | DocFX website",
    "keywords": "Class DisposableDocumentProcessor Inheritance Object DisposableDocumentProcessor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class DisposableDocumentProcessor : IDocumentProcessor, IDisposable Properties | Improve this Doc View Source BuildSteps Declaration public abstract IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Implements IDocumentProcessor.BuildSteps | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description String Implements IDocumentProcessor.Name Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public abstract ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Implements IDocumentProcessor.GetProcessingPriority(FileAndType) | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public abstract FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Implements IDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) | Improve this Doc View Source Save(FileModel) Declaration public abstract SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Implements IDocumentProcessor.Save(FileModel) | Improve this Doc View Source UpdateHref(FileModel, IDocumentBuildContext) Declaration public virtual void UpdateHref(FileModel model, IDocumentBuildContext context) Parameters Type Name Description FileModel model IDocumentBuildContext context Implements IDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.ExtractSearchIndex.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.ExtractSearchIndex.html",
    "title": "Class ExtractSearchIndex | DocFX website",
    "keywords": "Class ExtractSearchIndex Inheritance Object ExtractSearchIndex Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax [Export(\"ExtractSearchIndex\", typeof (IPostProcessor))] public class ExtractSearchIndex : IPostProcessor Fields | Improve this Doc View Source IndexFileName Declaration public const string IndexFileName = \"index.json\" Field Value Type Description String Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source PrepareMetadata(ImmutableDictionary<String, Object>) Declaration public ImmutableDictionary<string, object> PrepareMetadata(ImmutableDictionary<string, object> metadata) Parameters Type Name Description System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Implements IPostProcessor.PrepareMetadata(ImmutableDictionary<String, Object>) | Improve this Doc View Source Process(Manifest, String) Declaration public Manifest Process(Manifest manifest, string outputFolder) Parameters Type Name Description Manifest manifest String outputFolder Returns Type Description Manifest Implements IPostProcessor.Process(Manifest, String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.MarkdownReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.MarkdownReader.html",
    "title": "Class MarkdownReader | DocFX website",
    "keywords": "Class MarkdownReader Inheritance Object MarkdownReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class MarkdownReader Methods | Improve this Doc View Source ReadMarkdownAsConceptual(String, String) Declaration public static Dictionary<string, object> ReadMarkdownAsConceptual(string baseDir, string file) Parameters Type Name Description String baseDir String file Returns Type Description Dictionary < String , Object > | Improve this Doc View Source ReadMarkdownAsOverwrite(IHostService, FileAndType) Declaration public static IEnumerable<OverwriteDocumentModel> ReadMarkdownAsOverwrite(IHostService host, FileAndType ft) Parameters Type Name Description IHostService host FileAndType ft Returns Type Description IEnumerable < OverwriteDocumentModel > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentModel.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentModel.html",
    "title": "Class OverwriteDocumentModel | DocFX website",
    "keywords": "Class OverwriteDocumentModel Inheritance Object OverwriteDocumentModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class OverwriteDocumentModel Properties | Improve this Doc View Source Conceptual The markdown content from the overwrite document Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source Documentation The details for current overwrite document, containing the start/end line numbers, file path, and git info. Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Uid The uid for this overwrite document, as defined in YAML header Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ConvertTo<T>() Declaration public T ConvertTo<T>()where T : class Returns Type Description T Type Parameters Name Description T Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentReader.html",
    "title": "Class OverwriteDocumentReader | DocFX website",
    "keywords": "Class OverwriteDocumentReader Inheritance Object OverwriteDocumentReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class OverwriteDocumentReader Methods | Improve this Doc View Source Read(FileAndType) Declaration public static FileModel Read(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description FileModel | Improve this Doc View Source Transform<T>(FileModel, String, Func<T, T>) TODO: use Attributes to automatically markup and handle uid inside the model instead of pass in the itemBuilder action Declaration public static IEnumerable<T> Transform<T>(FileModel model, string uid, Func<T, T> itemBuilder)where T : class, IOverwriteDocumentViewModel Parameters Type Name Description FileModel model String uid Func <T, T> itemBuilder Returns Type Description IEnumerable <T> Type Parameters Name Description T Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.SearchIndexItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.SearchIndexItem.html",
    "title": "Class SearchIndexItem | DocFX website",
    "keywords": "Class SearchIndexItem Inheritance Object SearchIndexItem Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class SearchIndexItem Properties | Improve this Doc View Source Href Declaration [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source Keywords Declaration [JsonProperty(\"keywords\")] public string Keywords { get; set; } Property Value Type Description String | Improve this Doc View Source Title Declaration [JsonProperty(\"title\")] public string Title { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Equals(SearchIndexItem) Declaration public bool Equals(SearchIndexItem other) Parameters Type Name Description SearchIndexItem other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.YamlHtmlPart.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.YamlHtmlPart.html",
    "title": "Class YamlHtmlPart | DocFX website",
    "keywords": "Class YamlHtmlPart Inheritance Object YamlHtmlPart Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Common Assembly :Microsoft.DocAsCode.Build.Common.dll Syntax public class YamlHtmlPart Properties | Improve this Doc View Source Conceptual Declaration public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source EndLine Declaration public int EndLine { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Html Declaration public string Html { get; set; } Property Value Type Description String | Improve this Doc View Source LinkToFiles Declaration public ImmutableArray<string> LinkToFiles { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > | Improve this Doc View Source LinkToUids Declaration public ImmutableHashSet<string> LinkToUids { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableHashSet < String > | Improve this Doc View Source Origin Declaration public MarkupResult Origin { get; set; } Property Value Type Description MarkupResult | Improve this Doc View Source SourceFile Declaration public string SourceFile { get; set; } Property Value Type Description String | Improve this Doc View Source StartLine Declaration public int StartLine { get; set; } Property Value Type Description Int32 | Improve this Doc View Source YamlHeader Declaration public ImmutableDictionary<string, object> YamlHeader { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Methods | Improve this Doc View Source SplitYamlHtml(MarkupResult) Declaration public static IList<YamlHtmlPart> SplitYamlHtml(MarkupResult origin) Parameters Type Name Description MarkupResult origin Returns Type Description IList < YamlHtmlPart > | Improve this Doc View Source ToMarkupResult() Declaration public MarkupResult ToMarkupResult() Returns Type Description MarkupResult Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Common.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.html",
    "title": "Namespace Microsoft.DocAsCode.Build.Common | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.Common Classes ApplyOverwriteDocument BaseDocumentBuildStep DisposableDocumentProcessor ExtractSearchIndex MarkdownReader OverwriteDocumentModel OverwriteDocumentReader SearchIndexItem YamlHtmlPart"
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.BuildConceptualDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.BuildConceptualDocument.html",
    "title": "Class BuildConceptualDocument | DocFX website",
    "keywords": "Class BuildConceptualDocument Inheritance Object BaseDocumentBuildStep BuildConceptualDocument Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ConceptualDocuments Assembly :Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(\"ConceptualDocumentProcessor\", typeof (IDocumentBuildStep))] public class BuildConceptualDocument : BaseDocumentBuildStep, IDocumentBuildStep, ISupportIncrementalBuild Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuild.CanIncrementalBuild(FileAndType) | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuild.GetIncrementalContextHash() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ConceptualDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ConceptualDocumentProcessor.html",
    "title": "Class ConceptualDocumentProcessor | DocFX website",
    "keywords": "Class ConceptualDocumentProcessor Inheritance Object DisposableDocumentProcessor ConceptualDocumentProcessor Inherited Members DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ConceptualDocuments Assembly :Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(typeof (IDocumentProcessor))] public class ConceptualDocumentProcessor : DisposableDocumentProcessor, IDocumentProcessor, IDisposable, ISupportIncrementalBuild Properties | Improve this Doc View Source BuildSteps Declaration [ImportMany(\"ConceptualDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Methods | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuild.CanIncrementalBuild(FileAndType) | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuild.GetIncrementalContextHash() | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority Overrides DisposableDocumentProcessor.GetProcessingPriority(FileAndType) | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file System.Collections.Immutable.ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides DisposableDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides DisposableDocumentProcessor.Save(FileModel) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.CountWord.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.CountWord.html",
    "title": "Class CountWord | DocFX website",
    "keywords": "Class CountWord Inheritance Object BaseDocumentBuildStep CountWord Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ConceptualDocuments Assembly :Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(\"ConceptualDocumentProcessor\", typeof (IDocumentBuildStep))] public class CountWord : BaseDocumentBuildStep, IDocumentBuildStep, ISupportIncrementalBuild Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuild.CanIncrementalBuild(FileAndType) | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuild.GetIncrementalContextHash() | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description System.Collections.Immutable.ImmutableList < FileModel > models IHostService host Overrides BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ValidateConceptualDocumentMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ValidateConceptualDocumentMetadata.html",
    "title": "Class ValidateConceptualDocumentMetadata | DocFX website",
    "keywords": "Class ValidateConceptualDocumentMetadata Inheritance Object BaseDocumentBuildStep ValidateConceptualDocumentMetadata Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.ConceptualDocuments Assembly :Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(\"ConceptualDocumentProcessor\", typeof (IDocumentBuildStep))] public class ValidateConceptualDocumentMetadata : BaseDocumentBuildStep, IDocumentBuildStep, ISupportIncrementalBuild Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean Implements ISupportIncrementalBuild.CanIncrementalBuild(FileAndType) | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuild.GetIncrementalContextHash() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ConceptualDocuments | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ConceptualDocuments Classes BuildConceptualDocument ConceptualDocumentProcessor CountWord ValidateConceptualDocumentMetadata"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateOptions.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateOptions.html",
    "title": "Enum ApplyTemplateOptions | DocFX website",
    "keywords": "Enum ApplyTemplateOptions Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Flags] public enum ApplyTemplateOptions Fields Name Description All ExportRawModel ExportViewModel None TransformDocument Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateSettings.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateSettings.html",
    "title": "Class ApplyTemplateSettings | DocFX website",
    "keywords": "Class ApplyTemplateSettings Inheritance Object ApplyTemplateSettings Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class ApplyTemplateSettings Constructors | Improve this Doc View Source ApplyTemplateSettings(String, String) Declaration public ApplyTemplateSettings(string inputFolder, string outputFolder) Parameters Type Name Description String inputFolder String outputFolder Fields | Improve this Doc View Source DefaultRawModelExportSettings Declaration public static readonly ExportSettings DefaultRawModelExportSettings Field Value Type Description ExportSettings | Improve this Doc View Source DefaultViewModelExportSettings Declaration public static readonly ExportSettings DefaultViewModelExportSettings Field Value Type Description ExportSettings | Improve this Doc View Source RawModelExportSettingsForDebug Declaration public static readonly ExportSettings RawModelExportSettingsForDebug Field Value Type Description ExportSettings | Improve this Doc View Source ViewModelExportSettingsForDebug Declaration public static readonly ExportSettings ViewModelExportSettingsForDebug Field Value Type Description ExportSettings Properties | Improve this Doc View Source InputFolder Declaration public string InputFolder { get; } Property Value Type Description String | Improve this Doc View Source Options Declaration public ApplyTemplateOptions Options { get; } Property Value Type Description ApplyTemplateOptions | Improve this Doc View Source OutputFolder Declaration public string OutputFolder { get; } Property Value Type Description String | Improve this Doc View Source RawModelExportSettings Declaration public ExportSettings RawModelExportSettings { get; set; } Property Value Type Description ExportSettings | Improve this Doc View Source TransformDocument Declaration public bool TransformDocument { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ViewModelExportSettings Declaration public ExportSettings ViewModelExportSettings { get; set; } Property Value Type Description ExportSettings Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ArchiveResourceCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ArchiveResourceCollection.html",
    "title": "Class ArchiveResourceCollection | DocFX website",
    "keywords": "Class ArchiveResourceCollection Inheritance Object ResourceCollection ArchiveResourceCollection Inherited Members ResourceCollection.GetResources(String) ResourceCollection.GetResourceStreams(String) ResourceCollection.Dispose() ResourceCollection.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ArchiveResourceCollection : ResourceCollection, IDisposable Constructors | Improve this Doc View Source ArchiveResourceCollection(Stream, String) Declaration public ArchiveResourceCollection(Stream stream, string name) Parameters Type Name Description Stream stream String name Properties | Improve this Doc View Source IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceCollection.IsEmpty | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceCollection.Name | Improve this Doc View Source Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceCollection.Names Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides ResourceCollection.Dispose(Boolean) | Improve this Doc View Source GetResource(String) Declaration public override string GetResource(string name) Parameters Type Name Description String name Returns Type Description String Overrides ResourceCollection.GetResource(String) | Improve this Doc View Source GetResourceStream(String) TODO: This is not thread safe, only expose GetResource in interface Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceCollection.GetResourceStream(String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.BasicXRefMapReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.BasicXRefMapReader.html",
    "title": "Class BasicXRefMapReader | DocFX website",
    "keywords": "Class BasicXRefMapReader Inheritance Object BasicXRefMapReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class BasicXRefMapReader : IXRefContainerReader Constructors | Improve this Doc View Source BasicXRefMapReader(XRefMap) Declaration public BasicXRefMapReader(XRefMap map) Parameters Type Name Description XRefMap map Properties | Improve this Doc View Source Map Declaration protected XRefMap Map { get; } Property Value Type Description XRefMap Methods | Improve this Doc View Source Find(String) Declaration public virtual XRefSpec Find(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec Implements IXRefContainerReader.Find(String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.CompositeResourceCollectionWithOverridden.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.CompositeResourceCollectionWithOverridden.html",
    "title": "Class CompositeResourceCollectionWithOverridden | DocFX website",
    "keywords": "Class CompositeResourceCollectionWithOverridden Inheritance Object ResourceCollection CompositeResourceCollectionWithOverridden Inherited Members ResourceCollection.GetResource(String) ResourceCollection.GetResources(String) ResourceCollection.GetResourceStreams(String) ResourceCollection.Dispose() ResourceCollection.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class CompositeResourceCollectionWithOverridden : ResourceCollection, IDisposable Constructors | Improve this Doc View Source CompositeResourceCollectionWithOverridden(IEnumerable<ResourceCollection>) Declaration public CompositeResourceCollectionWithOverridden(IEnumerable<ResourceCollection> collectionsInOverriddenOrder) Parameters Type Name Description IEnumerable < ResourceCollection > collectionsInOverriddenOrder Properties | Improve this Doc View Source IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceCollection.IsEmpty | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceCollection.Name | Improve this Doc View Source Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceCollection.Names Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides ResourceCollection.Dispose(Boolean) | Improve this Doc View Source GetResourceStream(String) Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceCollection.GetResourceStream(String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.CrossReferenceNotResolvedException.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.CrossReferenceNotResolvedException.html",
    "title": "Class CrossReferenceNotResolvedException | DocFX website",
    "keywords": "Class CrossReferenceNotResolvedException Inheritance Object Exception DocumentException CrossReferenceNotResolvedException Inherited Members DocumentException.File DocumentException.Line DocumentException.Column DocumentException.RunAll(Action[]) Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class CrossReferenceNotResolvedException : DocumentException, ISerializable, _Exception Constructors | Improve this Doc View Source CrossReferenceNotResolvedException(SerializationInfo, StreamingContext) Declaration protected CrossReferenceNotResolvedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source CrossReferenceNotResolvedException(String, String, String) Declaration public CrossReferenceNotResolvedException(string uid, string uidRawText, string file) Parameters Type Name Description String uid String uidRawText String file Properties | Improve this Doc View Source Uid Declaration public string Uid { get; } Property Value Type Description String | Improve this Doc View Source UidRawText Declaration public string UidRawText { get; } Property Value Type Description String Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Overrides DocumentException.GetObjectData(SerializationInfo, StreamingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.html",
    "title": "Class DfmServiceProvider | DocFX website",
    "keywords": "Class DfmServiceProvider Inheritance Object DfmServiceProvider Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"dfm\", typeof (IMarkdownServiceProvider))] public class DfmServiceProvider : IMarkdownServiceProvider Properties | Improve this Doc View Source TokenTreeValidator Declaration [ImportMany] public IEnumerable<IMarkdownTokenTreeValidator> TokenTreeValidator { get; set; } Property Value Type Description IEnumerable < IMarkdownTokenTreeValidator > Methods | Improve this Doc View Source CreateMarkdownService(MarkdownServiceParameters) Declaration public IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService Implements IMarkdownServiceProvider.CreateMarkdownService(MarkdownServiceParameters) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildContext.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildContext.html",
    "title": "Class DocumentBuildContext | DocFX website",
    "keywords": "Class DocumentBuildContext Inheritance Object DocumentBuildContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class DocumentBuildContext : IDocumentBuildContext Constructors | Improve this Doc View Source DocumentBuildContext(String) Declaration public DocumentBuildContext(string buildOutputFolder) Parameters Type Name Description String buildOutputFolder | Improve this Doc View Source DocumentBuildContext(String, IEnumerable<FileAndType>, ImmutableArray<String>, ImmutableArray<String>, Int32, String) Declaration public DocumentBuildContext(string buildOutputFolder, IEnumerable<FileAndType> allSourceFiles, ImmutableArray<string> externalReferencePackages, ImmutableArray<string> xrefMaps, int maxParallelism, string baseFolder) Parameters Type Name Description String buildOutputFolder IEnumerable < FileAndType > allSourceFiles System.Collections.Immutable.ImmutableArray < String > externalReferencePackages System.Collections.Immutable.ImmutableArray < String > xrefMaps Int32 maxParallelism String baseFolder Properties | Improve this Doc View Source AllSourceFiles Declaration public ImmutableDictionary<string, FileAndType> AllSourceFiles { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , FileAndType > | Improve this Doc View Source BuildOutputFolder Declaration public string BuildOutputFolder { get; } Property Value Type Description String | Improve this Doc View Source DependencyGraph Declaration public DependencyGraph DependencyGraph { get; } Property Value Type Description DependencyGraph | Improve this Doc View Source ExternalReferencePackages Declaration public ImmutableArray<string> ExternalReferencePackages { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > | Improve this Doc View Source FileMap Declaration public Dictionary<string, string> FileMap { get; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source MaxParallelism Declaration public int MaxParallelism { get; } Property Value Type Description Int32 | Improve this Doc View Source TocMap Declaration public Dictionary<string, HashSet<string>> TocMap { get; } Property Value Type Description Dictionary < String , HashSet < String >> | Improve this Doc View Source XRef Declaration public HashSet<string> XRef { get; } Property Value Type Description HashSet < String > | Improve this Doc View Source XRefMapUrls Declaration public ImmutableArray<string> XRefMapUrls { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > | Improve this Doc View Source XRefSpecMap Declaration public ConcurrentDictionary<string, XRefSpec> XRefSpecMap { get; } Property Value Type Description ConcurrentDictionary < String , XRefSpec > Methods | Improve this Doc View Source GetFilePath(String) Declaration public string GetFilePath(string key) Parameters Type Name Description String key Returns Type Description String Implements IDocumentBuildContext.GetFilePath(String) | Improve this Doc View Source GetTocFileKeySet(String) Declaration public IImmutableList<string> GetTocFileKeySet(string key) Parameters Type Name Description String key Returns Type Description System.Collections.Immutable.IImmutableList < String > Implements IDocumentBuildContext.GetTocFileKeySet(String) | Improve this Doc View Source GetTocInfo() Declaration public IImmutableList<TocInfo> GetTocInfo() Returns Type Description System.Collections.Immutable.IImmutableList < TocInfo > Implements IDocumentBuildContext.GetTocInfo() | Improve this Doc View Source GetXrefSpec(String) Declaration public XRefSpec GetXrefSpec(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec Implements IDocumentBuildContext.GetXrefSpec(String) | Improve this Doc View Source RegisterInternalXrefSpec(XRefSpec) Declaration public void RegisterInternalXrefSpec(XRefSpec xrefSpec) Parameters Type Name Description XRefSpec xrefSpec Implements IDocumentBuildContext.RegisterInternalXrefSpec(XRefSpec) | Improve this Doc View Source RegisterToc(String, String) Declaration public void RegisterToc(string tocFileKey, string fileKey) Parameters Type Name Description String tocFileKey String fileKey Implements IDocumentBuildContext.RegisterToc(String, String) | Improve this Doc View Source RegisterTocInfo(TocInfo) Declaration public void RegisterTocInfo(TocInfo toc) Parameters Type Name Description TocInfo toc Implements IDocumentBuildContext.RegisterTocInfo(TocInfo) | Improve this Doc View Source ReportExternalXRefSpec(XRefSpec) Declaration public void ReportExternalXRefSpec(XRefSpec spec) Parameters Type Name Description XRefSpec spec | Improve this Doc View Source ResolveExternalXRefSpec() Declaration public void ResolveExternalXRefSpec() | Improve this Doc View Source SetFilePath(String, String) Declaration public void SetFilePath(string key, string filePath) Parameters Type Name Description String key String filePath Implements IDocumentBuildContext.SetFilePath(String, String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.DocumentBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DocumentBuilder.html",
    "title": "Class DocumentBuilder | DocFX website",
    "keywords": "Class DocumentBuilder Inheritance Object DocumentBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class DocumentBuilder : IDisposable Constructors | Improve this Doc View Source DocumentBuilder(IEnumerable<Assembly>, ImmutableArray<String>, String, String) Declaration public DocumentBuilder(IEnumerable<Assembly> assemblies, ImmutableArray<string> postProcessorNames, string templateHash, string intermediateFolder = null) Parameters Type Name Description IEnumerable < Assembly > assemblies System.Collections.Immutable.ImmutableArray < String > postProcessorNames String templateHash String intermediateFolder Methods | Improve this Doc View Source Build(DocumentBuildParameters) Declaration public void Build(DocumentBuildParameters parameter) Parameters Type Name Description DocumentBuildParameters parameter | Improve this Doc View Source Build(IEnumerable<DocumentBuildParameters>, String) Declaration public void Build(IEnumerable<DocumentBuildParameters> parameters, string outputDirectory) Parameters Type Name Description IEnumerable < DocumentBuildParameters > parameters String outputDirectory | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildParameters.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildParameters.html",
    "title": "Class DocumentBuildParameters | DocFX website",
    "keywords": "Class DocumentBuildParameters Inheritance Object MarshalByRefObject DocumentBuildParameters Inherited Members MarshalByRefObject.MemberwiseClone(Boolean) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class DocumentBuildParameters : MarshalByRefObject Properties | Improve this Doc View Source ApplyTemplateSettings Declaration public ApplyTemplateSettings ApplyTemplateSettings { get; set; } Property Value Type Description ApplyTemplateSettings | Improve this Doc View Source Changes Declaration public ImmutableDictionary<string, ChangeKindWithDependency> Changes { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , ChangeKindWithDependency > | Improve this Doc View Source ExternalReferencePackages Declaration public ImmutableArray<string> ExternalReferencePackages { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > | Improve this Doc View Source FileMetadata Declaration public FileMetadata FileMetadata { get; set; } Property Value Type Description FileMetadata | Improve this Doc View Source Files Declaration public FileCollection Files { get; set; } Property Value Type Description FileCollection | Improve this Doc View Source MarkdownEngineName Declaration public string MarkdownEngineName { get; set; } Property Value Type Description String | Improve this Doc View Source MarkdownEngineParameters Declaration public ImmutableDictionary<string, object> MarkdownEngineParameters { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > | Improve this Doc View Source MaxParallelism Declaration public int MaxParallelism { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Metadata Declaration public ImmutableDictionary<string, object> Metadata { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > | Improve this Doc View Source OutputBaseDir Declaration public string OutputBaseDir { get; set; } Property Value Type Description String | Improve this Doc View Source PostProcessors Declaration public ImmutableArray<string> PostProcessors { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > | Improve this Doc View Source TemplateDir Declaration public string TemplateDir { get; set; } Property Value Type Description String | Improve this Doc View Source TemplateManager Declaration public TemplateManager TemplateManager { get; set; } Property Value Type Description TemplateManager | Improve this Doc View Source VersionName Declaration public string VersionName { get; set; } Property Value Type Description String | Improve this Doc View Source XRefMaps Declaration public ImmutableArray<string> XRefMaps { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableArray < String > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.EmptyResourceCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.EmptyResourceCollection.html",
    "title": "Class EmptyResourceCollection | DocFX website",
    "keywords": "Class EmptyResourceCollection Inheritance Object ResourceCollection EmptyResourceCollection Inherited Members ResourceCollection.GetResource(String) ResourceCollection.GetResources(String) ResourceCollection.GetResourceStreams(String) ResourceCollection.Dispose() ResourceCollection.Dispose(Boolean) ResourceCollection.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class EmptyResourceCollection : ResourceCollection, IDisposable Properties | Improve this Doc View Source IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceCollection.IsEmpty | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceCollection.Name | Improve this Doc View Source Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceCollection.Names Methods | Improve this Doc View Source GetResourceStream(String) Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceCollection.GetResourceStream(String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ExportSettings.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ExportSettings.html",
    "title": "Class ExportSettings | DocFX website",
    "keywords": "Class ExportSettings Inheritance Object ExportSettings Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class ExportSettings Constructors | Improve this Doc View Source ExportSettings() Declaration public ExportSettings() | Improve this Doc View Source ExportSettings(ExportSettings) Declaration public ExportSettings(ExportSettings settings) Parameters Type Name Description ExportSettings settings Properties | Improve this Doc View Source Export Declaration public bool Export { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Extension Declaration public string Extension { get; set; } Property Value Type Description String | Improve this Doc View Source OutputFolder Declaration public string OutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source PathRewriter Declaration public Func<string, string> PathRewriter { get; set; } Property Value Type Description Func < String , String > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.FileCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.FileCollection.html",
    "title": "Class FileCollection | DocFX website",
    "keywords": "Class FileCollection Inheritance Object FileCollection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class FileCollection Constructors | Improve this Doc View Source FileCollection(FileCollection) Declaration public FileCollection(FileCollection collection) Parameters Type Name Description FileCollection collection | Improve this Doc View Source FileCollection(String) Declaration public FileCollection(string defaultBaseDir) Parameters Type Name Description String defaultBaseDir Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source DefaultBaseDir Declaration public string DefaultBaseDir { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Add(DocumentType, IEnumerable<String>, Func<String, String>) Declaration public void Add(DocumentType type, IEnumerable<string> files, Func<string, string> pathRewriter = null) Parameters Type Name Description DocumentType type IEnumerable < String > files Func < String , String > pathRewriter | Improve this Doc View Source Add(DocumentType, String, IEnumerable<String>, Func<String, String>) Declaration public void Add(DocumentType type, string baseDir, IEnumerable<string> files, Func<string, string> pathRewriter = null) Parameters Type Name Description DocumentType type String baseDir IEnumerable < String > files Func < String , String > pathRewriter | Improve this Doc View Source EnumerateFiles() Declaration public IEnumerable<FileAndType> EnumerateFiles() Returns Type Description IEnumerable < FileAndType > | Improve this Doc View Source RemoveAll(Predicate<FileAndType>) Declaration public void RemoveAll(Predicate<FileAndType> match) Parameters Type Name Description Predicate < FileAndType > match Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.FileMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.FileMetadata.html",
    "title": "Class FileMetadata | DocFX website",
    "keywords": "Class FileMetadata Inheritance Object Dictionary < String , System.Collections.Immutable.ImmutableArray < FileMetadataItem >> FileMetadata Inherited Members Dictionary<String, ImmutableArray<FileMetadataItem>>.Add(String, ImmutableArray<FileMetadataItem>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>) Dictionary<String, ImmutableArray<FileMetadataItem>>.Clear() Dictionary<String, ImmutableArray<FileMetadataItem>>.ContainsKey(String) Dictionary<String, ImmutableArray<FileMetadataItem>>.ContainsValue(ImmutableArray<FileMetadataItem>) Dictionary<String, ImmutableArray<FileMetadataItem>>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.GetEnumerator() Dictionary<String, ImmutableArray<FileMetadataItem>>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, ImmutableArray<FileMetadataItem>>.OnDeserialization(Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.Remove(String) Dictionary<String, ImmutableArray<FileMetadataItem>>.TryGetValue(String, ImmutableArray<FileMetadataItem>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>[], System.Int32) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.set_Item(System.Object, System.Object) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.Add(System.Object, System.Object) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.Contains(System.Object) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.Remove(System.Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.Comparer Dictionary<String, ImmutableArray<FileMetadataItem>>.Count Dictionary<String, ImmutableArray<FileMetadataItem>>.Keys System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Keys System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Keys Dictionary<String, ImmutableArray<FileMetadataItem>>.Values System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Values System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Values Dictionary<String, ImmutableArray<FileMetadataItem>>.Item[String] System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.IsReadOnly System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.ICollection.SyncRoot System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.IsFixedSize System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.IsReadOnly System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.Keys System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.Values System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.Item[System.Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class FileMetadata : Dictionary<string, ImmutableArray<FileMetadataItem>>, IDictionary<string, ImmutableArray<FileMetadataItem>>, ICollection<KeyValuePair<string, ImmutableArray<FileMetadataItem>>>, IDictionary, ICollection, IReadOnlyDictionary<string, ImmutableArray<FileMetadataItem>>, IReadOnlyCollection<KeyValuePair<string, ImmutableArray<FileMetadataItem>>>, IEnumerable<KeyValuePair<string, ImmutableArray<FileMetadataItem>>>, IEnumerable, ISerializable, IDeserializationCallback Constructors | Improve this Doc View Source FileMetadata(String) Declaration public FileMetadata(string baseDir) Parameters Type Name Description String baseDir | Improve this Doc View Source FileMetadata(String, IDictionary<String, ImmutableArray<FileMetadataItem>>) Declaration public FileMetadata(string baseDir, IDictionary<string, ImmutableArray<FileMetadataItem>> dictionary) Parameters Type Name Description String baseDir IDictionary < String , System.Collections.Immutable.ImmutableArray < FileMetadataItem >> dictionary Properties | Improve this Doc View Source BaseDir Declaration public string BaseDir { get; } Property Value Type Description String Extension Methods TaskHelper.ForEachInParallelAsync<KeyValuePair<String, ImmutableArray<FileMetadataItem>>>(Func<KeyValuePair<String, ImmutableArray<FileMetadataItem>>, Task>, Int32) TaskHelper.ForEachInParallelAsync<KeyValuePair<String, ImmutableArray<FileMetadataItem>>>(Func<KeyValuePair<String, ImmutableArray<FileMetadataItem>>, Task>) TaskHelper.SelectInParallelAsync<KeyValuePair<String, ImmutableArray<FileMetadataItem>>, TResult>(Func<KeyValuePair<String, ImmutableArray<FileMetadataItem>>, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<KeyValuePair<String, ImmutableArray<FileMetadataItem>>, TResult>(Func<KeyValuePair<String, ImmutableArray<FileMetadataItem>>, Task<TResult>>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.FileMetadataItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.FileMetadataItem.html",
    "title": "Class FileMetadataItem | DocFX website",
    "keywords": "Class FileMetadataItem Inheritance Object FileMetadataItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class FileMetadataItem Constructors | Improve this Doc View Source FileMetadataItem(GlobMatcher, String, Object) Declaration public FileMetadataItem(GlobMatcher glob, string key, object value) Parameters Type Name Description GlobMatcher glob String key Object value Properties | Improve this Doc View Source Glob Declaration public GlobMatcher Glob { get; } Property Value Type Description GlobMatcher | Improve this Doc View Source Key Declaration public string Key { get; } Property Value Type Description String | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description Object Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.FileResourceCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.FileResourceCollection.html",
    "title": "Class FileResourceCollection | DocFX website",
    "keywords": "Class FileResourceCollection Inheritance Object ResourceCollection FileResourceCollection Inherited Members ResourceCollection.GetResource(String) ResourceCollection.GetResources(String) ResourceCollection.GetResourceStreams(String) ResourceCollection.Dispose() ResourceCollection.Dispose(Boolean) ResourceCollection.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class FileResourceCollection : ResourceCollection, IDisposable Constructors | Improve this Doc View Source FileResourceCollection(String, Int32) Declaration public FileResourceCollection(string directory, int maxSearchLevel = 5) Parameters Type Name Description String directory Int32 maxSearchLevel Properties | Improve this Doc View Source IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceCollection.IsEmpty | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceCollection.Name | Improve this Doc View Source Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceCollection.Names Methods | Improve this Doc View Source GetResourceStream(String) Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceCollection.GetResourceStream(String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.GfmServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.GfmServiceProvider.html",
    "title": "Class GfmServiceProvider | DocFX website",
    "keywords": "Class GfmServiceProvider Inheritance Object GfmServiceProvider Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"gfm\", typeof (IMarkdownServiceProvider))] public class GfmServiceProvider : IMarkdownServiceProvider Methods | Improve this Doc View Source CreateMarkdownService(MarkdownServiceParameters) Declaration public IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService Implements IMarkdownServiceProvider.CreateMarkdownService(MarkdownServiceParameters) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.InvalidPreprocessorException.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.InvalidPreprocessorException.html",
    "title": "Class InvalidPreprocessorException | DocFX website",
    "keywords": "Class InvalidPreprocessorException Inheritance Object Exception DocfxException InvalidPreprocessorException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class InvalidPreprocessorException : DocfxException, ISerializable, _Exception Constructors | Improve this Doc View Source InvalidPreprocessorException() Declaration public InvalidPreprocessorException() | Improve this Doc View Source InvalidPreprocessorException(SerializationInfo, StreamingContext) Declaration protected InvalidPreprocessorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source InvalidPreprocessorException(String) Declaration public InvalidPreprocessorException(string message) Parameters Type Name Description String message | Improve this Doc View Source InvalidPreprocessorException(String, Exception) Declaration public InvalidPreprocessorException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ITemplatePreprocessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ITemplatePreprocessor.html",
    "title": "Interface ITemplatePreprocessor | DocFX website",
    "keywords": "Interface ITemplatePreprocessor Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public interface ITemplatePreprocessor Properties | Improve this Doc View Source GetOptionsFunc Declaration Func<object, object> GetOptionsFunc { get; } Property Value Type Description Func < Object , Object > | Improve this Doc View Source TransformModelFunc Declaration Func<object, object> TransformModelFunc { get; } Property Value Type Description Func < Object , Object > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.PerformanceScope.html": {
    "href": "api/Microsoft.DocAsCode.Common.PerformanceScope.html",
    "title": "Class PerformanceScope | DocFX website",
    "keywords": "Class PerformanceScope Inheritance Object PerformanceScope Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class PerformanceScope : IDisposable Constructors | Improve this Doc View Source PerformanceScope(Action<TimeSpan>) Declaration public PerformanceScope(Action<TimeSpan> logger = null) Parameters Type Name Description Action < System.TimeSpan > logger | Improve this Doc View Source PerformanceScope(String) Declaration public PerformanceScope(string content) Parameters Type Name Description String content | Improve this Doc View Source PerformanceScope(String, LogLevel) Declaration public PerformanceScope(string content, LogLevel level) Parameters Type Name Description String content LogLevel level Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ReplayLogListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.ReplayLogListener.html",
    "title": "Class ReplayLogListener | DocFX website",
    "keywords": "Class ReplayLogListener Replay log on flushing. Inheritance Object ReplayLogListener Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ReplayLogListener : ILoggerListener, IDisposable Constructors | Improve this Doc View Source ReplayLogListener(LogLevel) Declaration public ReplayLogListener(LogLevel replayLevel = LogLevel.Warning) Parameters Type Name Description LogLevel replayLevel Properties | Improve this Doc View Source Replay Declaration public bool Replay { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source AddListener(ILoggerListener) Declaration public void AddListener(ILoggerListener listener) Parameters Type Name Description ILoggerListener listener | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Flush() Declaration public void Flush() Implements ILoggerListener.Flush() | Improve this Doc View Source WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ReportLogListener.MessageSeverity.html": {
    "href": "api/Microsoft.DocAsCode.Common.ReportLogListener.MessageSeverity.html",
    "title": "Enum ReportLogListener.MessageSeverity | DocFX website",
    "keywords": "Enum ReportLogListener.MessageSeverity Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public enum MessageSeverity Fields Name Description Diagnostic Error Info Verbose Warning Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ReportLogListener.ReportItem.html": {
    "href": "api/Microsoft.DocAsCode.Common.ReportLogListener.ReportItem.html",
    "title": "Class ReportLogListener.ReportItem | DocFX website",
    "keywords": "Class ReportLogListener.ReportItem Inheritance Object ReportLogListener.ReportItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class ReportItem Properties | Improve this Doc View Source DateTime Declaration [JsonProperty(\"date_time\")] public DateTime DateTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source File Declaration [JsonProperty(\"file\")] public string File { get; set; } Property Value Type Description String | Improve this Doc View Source Line Declaration [JsonProperty(\"line\")] public string Line { get; set; } Property Value Type Description String | Improve this Doc View Source Message Declaration [JsonProperty(\"message\")] public string Message { get; set; } Property Value Type Description String | Improve this Doc View Source Severity Declaration [JsonProperty(\"message_severity\")] public ReportLogListener.MessageSeverity Severity { get; set; } Property Value Type Description ReportLogListener.MessageSeverity | Improve this Doc View Source Source Declaration [JsonProperty(\"source\")] public string Source { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ReportLogListener.html": {
    "href": "api/Microsoft.DocAsCode.Common.ReportLogListener.html",
    "title": "Class ReportLogListener | DocFX website",
    "keywords": "Class ReportLogListener Inheritance Object ReportLogListener Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public sealed class ReportLogListener : ILoggerListener, IDisposable Constructors | Improve this Doc View Source ReportLogListener(StreamWriter) Declaration public ReportLogListener(StreamWriter writer) Parameters Type Name Description StreamWriter writer | Improve this Doc View Source ReportLogListener(String) Declaration public ReportLogListener(string reportPath) Parameters Type Name Description String reportPath Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Flush() Declaration public void Flush() Implements ILoggerListener.Flush() | Improve this Doc View Source WriteLine(ILogItem) Declaration public void WriteLine(ILogItem item) Parameters Type Name Description ILogItem item Implements ILoggerListener.WriteLine(ILogItem) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ResourceLease-1.html": {
    "href": "api/Microsoft.DocAsCode.Common.ResourceLease-1.html",
    "title": "Class ResourceLease<T> | DocFX website",
    "keywords": "Class ResourceLease<T> Inheritance Object ResourceLease<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Utility.dll Syntax public sealed class ResourceLease<T> : IDisposable where T : class Type Parameters Name Description T Properties | Improve this Doc View Source Resource Declaration public T Resource { get; } Property Value Type Description T Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ResourcePool.html": {
    "href": "api/Microsoft.DocAsCode.Common.ResourcePool.html",
    "title": "Class ResourcePool | DocFX website",
    "keywords": "Class ResourcePool Inheritance Object ResourcePool Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Utility.dll Syntax public static class ResourcePool Methods | Improve this Doc View Source Create<T>(Func<T>, Int32) Declaration public static ResourcePoolManager<T> Create<T>(Func<T> creator, int maxResourceCount)where T : class Parameters Type Name Description Func <T> creator Int32 maxResourceCount Returns Type Description ResourcePoolManager <T> Type Parameters Name Description T | Improve this Doc View Source Create<T>(Func<Task<T>>, Int32) Declaration public static ResourcePoolAsyncManager<T> Create<T>(Func<Task<T>> creator, int maxResourceCount)where T : class Parameters Type Name Description Func < Task <T>> creator Int32 maxResourceCount Returns Type Description ResourcePoolAsyncManager <T> Type Parameters Name Description T"
  },
  "api/Microsoft.DocAsCode.Common.ResourcePoolAsyncManager-1.html": {
    "href": "api/Microsoft.DocAsCode.Common.ResourcePoolAsyncManager-1.html",
    "title": "Class ResourcePoolAsyncManager<TResource> | DocFX website",
    "keywords": "Class ResourcePoolAsyncManager<TResource> Inheritance Object ResourcePoolAsyncManager<TResource> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class ResourcePoolAsyncManager<TResource> : IDisposable where TResource : class Type Parameters Name Description TResource Constructors | Improve this Doc View Source ResourcePoolAsyncManager(Func<Task<TResource>>, Int32) Declaration public ResourcePoolAsyncManager(Func<Task<TResource>> creator, int maxResourceCount) Parameters Type Name Description Func < Task <TResource>> creator Int32 maxResourceCount Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source RentAsync() Declaration public Task<ResourceLease<TResource>> RentAsync() Returns Type Description Task < ResourceLease <TResource>> Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.ResourcePoolManager-1.html": {
    "href": "api/Microsoft.DocAsCode.Common.ResourcePoolManager-1.html",
    "title": "Class ResourcePoolManager<TResource> | DocFX website",
    "keywords": "Class ResourcePoolManager<TResource> Inheritance Object ResourcePoolManager<TResource> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Utility.dll Syntax public class ResourcePoolManager<TResource> : IDisposable where TResource : class Type Parameters Name Description TResource Constructors | Improve this Doc View Source ResourcePoolManager(Func<TResource>, Int32) Declaration public ResourcePoolManager(Func<TResource> creator, int maxResourceCount) Parameters Type Name Description Func <TResource> creator Int32 maxResourceCount Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source Rent() Declaration public ResourceLease<TResource> Rent() Returns Type Description ResourceLease <TResource> Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.XHtmlWriter.html": {
    "href": "api/Microsoft.DocAsCode.Common.XHtmlWriter.html",
    "title": "Class XHtmlWriter | DocFX website",
    "keywords": "Class XHtmlWriter Inheritance Object XmlWriter XmlTextWriter XHtmlWriter Inherited Members XmlWriter.WriteStartDocument() XmlWriter.WriteStartDocument(Boolean) XmlWriter.WriteEndDocument() XmlWriter.WriteDocType(String, String, String, String) XmlWriter.WriteStartElement(String, String) XmlWriter.WriteStartElement(String) XmlWriter.WriteFullEndElement() XmlWriter.WriteAttributeString(String, String, String) XmlWriter.WriteAttributeString(String, String) XmlWriter.WriteAttributeString(String, String, String, String) XmlWriter.WriteStartAttribute(String, String) XmlWriter.WriteStartAttribute(String, String, String) XmlWriter.WriteStartAttribute(String) XmlWriter.WriteEndAttribute() XmlWriter.WriteCData(String) XmlWriter.WriteComment(String) XmlWriter.WriteProcessingInstruction(String, String) XmlWriter.WriteEntityRef(String) XmlWriter.WriteCharEntity(Char) XmlWriter.WriteWhitespace(String) XmlWriter.WriteString(String) XmlWriter.WriteSurrogateCharEntity(Char, Char) XmlWriter.WriteChars(Char[], Int32, Int32) XmlWriter.WriteRaw(Char[], Int32, Int32) XmlWriter.WriteRaw(String) XmlWriter.WriteBase64(Byte[], Int32, Int32) XmlWriter.WriteBinHex(Byte[], Int32, Int32) XmlWriter.Close() XmlWriter.Flush() XmlWriter.LookupPrefix(String) XmlWriter.WriteNmToken(String) XmlWriter.WriteName(String) XmlWriter.WriteQualifiedName(String, String) XmlWriter.WriteValue(Object) XmlWriter.WriteValue(String) XmlWriter.WriteValue(Boolean) XmlWriter.WriteValue(DateTime) XmlWriter.WriteValue(DateTimeOffset) XmlWriter.WriteValue(Double) XmlWriter.WriteValue(Single) XmlWriter.WriteValue(Decimal) XmlWriter.WriteValue(Int32) XmlWriter.WriteValue(Int64) XmlWriter.WriteAttributes(XmlReader, Boolean) XmlWriter.WriteNode(XmlReader, Boolean) XmlWriter.WriteNode(XPathNavigator, Boolean) XmlWriter.WriteElementString(String, String) XmlWriter.WriteElementString(String, String, String) XmlWriter.WriteElementString(String, String, String, String) XmlWriter.Dispose() XmlWriter.Dispose(Boolean) XmlWriter.Create(String) XmlWriter.Create(String, XmlWriterSettings) XmlWriter.Create(Stream) XmlWriter.Create(Stream, XmlWriterSettings) XmlWriter.Create(TextWriter) XmlWriter.Create(TextWriter, XmlWriterSettings) XmlWriter.Create(StringBuilder) XmlWriter.Create(StringBuilder, XmlWriterSettings) XmlWriter.Create(XmlWriter) XmlWriter.Create(XmlWriter, XmlWriterSettings) XmlWriter.WriteStartDocumentAsync() XmlWriter.WriteStartDocumentAsync(Boolean) XmlWriter.WriteEndDocumentAsync() XmlWriter.WriteDocTypeAsync(String, String, String, String) XmlWriter.WriteStartElementAsync(String, String, String) XmlWriter.WriteEndElementAsync() XmlWriter.WriteFullEndElementAsync() XmlWriter.WriteAttributeStringAsync(String, String, String, String) XmlWriter.WriteStartAttributeAsync(String, String, String) XmlWriter.WriteEndAttributeAsync() XmlWriter.WriteCDataAsync(String) XmlWriter.WriteCommentAsync(String) XmlWriter.WriteProcessingInstructionAsync(String, String) XmlWriter.WriteEntityRefAsync(String) XmlWriter.WriteCharEntityAsync(Char) XmlWriter.WriteWhitespaceAsync(String) XmlWriter.WriteStringAsync(String) XmlWriter.WriteSurrogateCharEntityAsync(Char, Char) XmlWriter.WriteCharsAsync(Char[], Int32, Int32) XmlWriter.WriteRawAsync(Char[], Int32, Int32) XmlWriter.WriteRawAsync(String) XmlWriter.WriteBase64Async(Byte[], Int32, Int32) XmlWriter.WriteBinHexAsync(Byte[], Int32, Int32) XmlWriter.FlushAsync() XmlWriter.WriteNmTokenAsync(String) XmlWriter.WriteNameAsync(String) XmlWriter.WriteQualifiedNameAsync(String, String) XmlWriter.WriteAttributesAsync(XmlReader, Boolean) XmlWriter.WriteNodeAsync(XmlReader, Boolean) XmlWriter.WriteNodeAsync(XPathNavigator, Boolean) XmlWriter.WriteElementStringAsync(String, String, String, String) XmlWriter.Settings XmlWriter.WriteState XmlWriter.XmlSpace XmlWriter.XmlLang Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public class XHtmlWriter : XmlTextWriter, IDisposable Constructors | Improve this Doc View Source XHtmlWriter(TextWriter) Declaration public XHtmlWriter(TextWriter writer) Parameters Type Name Description TextWriter writer Methods | Improve this Doc View Source WriteEndElement() Declaration public override void WriteEndElement() Overrides XmlTextWriter.WriteEndElement() | Improve this Doc View Source WriteStartElement(String, String, String) Declaration public override void WriteStartElement(string prefix, string localName, string ns) Parameters Type Name Description String prefix String localName String ns Overrides XmlTextWriter.WriteStartElement(String, String, String) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Common.YamlMime.html": {
    "href": "api/Microsoft.DocAsCode.Common.YamlMime.html",
    "title": "Class YamlMime | DocFX website",
    "keywords": "Class YamlMime Inheritance Object YamlMime Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class YamlMime Fields | Improve this Doc View Source ManagedReference Declaration public const string ManagedReference = \"YamlMime:ManagedReference\" Field Value Type Description String | Improve this Doc View Source TableOfContent Declaration public const string TableOfContent = \"YamlMime:TableOfContent\" Field Value Type Description String | Improve this Doc View Source XRefMap Declaration public const string XRefMap = \"YamlMime:XRefMap\" Field Value Type Description String | Improve this Doc View Source YamlMimePrefix Declaration public const string YamlMimePrefix = \"YamlMime:\" Field Value Type Description String Methods | Improve this Doc View Source ReadMime(TextReader) Declaration public static string ReadMime(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description String | Improve this Doc View Source ReadMime(String) Declaration public static string ReadMime(string file) Parameters Type Name Description String file Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.Common.YamlUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.YamlUtility.html",
    "title": "Class YamlUtility | DocFX website",
    "keywords": "Class YamlUtility Expresses static methods for creating, moving, and enumerating through directories and subdirectories. This class cannot be inherited. To browse the .NET Framework source code for this type, see the Reference Source Refer to @Microsoft.DocAsCode.EntityModel.ProjectLevelCache to see what to do with Files Inheritance Object YamlUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Common Assembly :Microsoft.DocAsCode.Common.dll Syntax public static class YamlUtility Remarks THIS is remarks overriden in MARKDWON file Methods | Improve this Doc View Source ConvertTo<T>(Object) Declaration public static T ConvertTo<T>(object obj) Parameters Type Name Description Object obj Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Deserialize<T>(TextReader) Declaration public static T Deserialize<T>(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Deserialize<T>(String) Declaration public static T Deserialize<T>(string path) Parameters Type Name Description String path Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Serialize(TextWriter, Object) Declaration public static void Serialize(TextWriter writer, object graph) Parameters Type Name Description TextWriter writer Object graph | Improve this Doc View Source Serialize(TextWriter, Object, String) Declaration public static void Serialize(TextWriter writer, object graph, string comments) Parameters Type Name Description TextWriter writer Object graph String comments | Improve this Doc View Source Serialize(String, Object) Declaration public static void Serialize(string path, object graph) Parameters Type Name Description String path Object graph | Improve this Doc View Source Serialize(String, Object, String) Declaration public static void Serialize(string path, object graph, string comments) Parameters Type Name Description String path Object graph String comments"
  },
  "api/Microsoft.DocAsCode.Common.html": {
    "href": "api/Microsoft.DocAsCode.Common.html",
    "title": "Namespace Microsoft.DocAsCode.Common | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Common Classes ConsoleLogListener ConsoleUtility CrossAppDomainListener HtmlLogListener HtmlLogListener.ReportItem JsonUtility Logger LoggerFileScope LoggerPhaseScope PerformanceScope ReplayLogListener Replay log on flushing. ReportLogListener ReportLogListener.ReportItem ResourceLease<T> ResourcePool ResourcePoolAsyncManager<TResource> ResourcePoolManager<TResource> XHtmlWriter YamlMime YamlUtility Interfaces ILoggerListener ILogItem Enums HtmlLogListener.MessageSeverity LogLevel ReportLogListener.MessageSeverity"
  },
  "api/Microsoft.DocAsCode.CustomAssemblyTextAttribute.html": {
    "href": "api/Microsoft.DocAsCode.CustomAssemblyTextAttribute.html",
    "title": "Class CustomAssemblyTextAttribute | DocFX website",
    "keywords": "Class CustomAssemblyTextAttribute Inheritance Object Attribute CustomAssemblyTextAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public abstract class CustomAssemblyTextAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source CustomAssemblyTextAttribute(String[]) Declaration public CustomAssemblyTextAttribute(params string[] lines) Parameters Type Name Description String [] lines Properties | Improve this Doc View Source Value Declaration public string Value { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.DevLang.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.DevLang.html",
    "title": "Class Constants.DevLang | DocFX website",
    "keywords": "Class Constants.DevLang Inheritance Object Constants.DevLang Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class DevLang Fields | Improve this Doc View Source CSharp Declaration public const string CSharp = \"csharp\" Field Value Type Description String | Improve this Doc View Source VB Declaration public const string VB = \"vb\" Field Value Type Description String"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.PropertyName.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.PropertyName.html",
    "title": "Class Constants.PropertyName | DocFX website",
    "keywords": "Class Constants.PropertyName TODO: add other property name const Inheritance Object Constants.PropertyName Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class PropertyName Fields | Improve this Doc View Source CommentId Declaration public const string CommentId = \"commentId\" Field Value Type Description String | Improve this Doc View Source Conceptual Declaration public const string Conceptual = \"conceptual\" Field Value Type Description String | Improve this Doc View Source Documentation Declaration public const string Documentation = \"documentation\" Field Value Type Description String | Improve this Doc View Source DocumentType Declaration public const string DocumentType = \"documentType\" Field Value Type Description String | Improve this Doc View Source Href Declaration public const string Href = \"href\" Field Value Type Description String | Improve this Doc View Source Id Declaration public const string Id = \"id\" Field Value Type Description String | Improve this Doc View Source Path Declaration public const string Path = \"path\" Field Value Type Description String | Improve this Doc View Source Source Declaration public const string Source = \"source\" Field Value Type Description String | Improve this Doc View Source Title Declaration public const string Title = \"title\" Field Value Type Description String | Improve this Doc View Source Type Declaration public const string Type = \"type\" Field Value Type Description String | Improve this Doc View Source Uid Declaration public const string Uid = \"uid\" Field Value Type Description String"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.html",
    "title": "Class Constants | DocFX website",
    "keywords": "Class Constants Inheritance Object Constants Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class Constants Fields | Improve this Doc View Source ContentPlaceholder Declaration public const string ContentPlaceholder = \"*content\" Field Value Type Description String | Improve this Doc View Source YamlExtension Declaration public const string YamlExtension = \".yml\" Field Value Type Description String"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageCollection.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageCollection.html",
    "title": "Class ExternalReferencePackageCollection | DocFX website",
    "keywords": "Class ExternalReferencePackageCollection Inheritance Object ExternalReferencePackageCollection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public class ExternalReferencePackageCollection : IDisposable Constructors | Improve this Doc View Source ExternalReferencePackageCollection(IEnumerable<String>, Int32) Declaration public ExternalReferencePackageCollection(IEnumerable<string> packageFiles, int maxParallelism) Parameters Type Name Description IEnumerable < String > packageFiles Int32 maxParallelism Properties | Improve this Doc View Source Readers Declaration public ImmutableList<ExternalReferencePackageReader> Readers { get; } Property Value Type Description System.Collections.Immutable.ImmutableList < ExternalReferencePackageReader > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source TryGetReference(String, out ReferenceViewModel) Declaration public bool TryGetReference(string uid, out ReferenceViewModel vm) Parameters Type Name Description String uid ReferenceViewModel vm Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageReader.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageReader.html",
    "title": "Class ExternalReferencePackageReader | DocFX website",
    "keywords": "Class ExternalReferencePackageReader Inheritance Object ExternalReferencePackageReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public class ExternalReferencePackageReader : IDisposable Constructors | Improve this Doc View Source ExternalReferencePackageReader(String) Declaration public ExternalReferencePackageReader(string packageFile) Parameters Type Name Description String packageFile Methods | Improve this Doc View Source CreateNoThrow(String) Declaration public static ExternalReferencePackageReader CreateNoThrow(string packageFile) Parameters Type Name Description String packageFile Returns Type Description ExternalReferencePackageReader | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source SeekUidIndex(String) Declaration protected virtual int SeekUidIndex(string uid) Parameters Type Name Description String uid Returns Type Description Int32 | Improve this Doc View Source TryGetReference(String, out ReferenceViewModel) Declaration public bool TryGetReference(string uid, out ReferenceViewModel vm) Parameters Type Name Description String uid ReferenceViewModel vm Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageWriter.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageWriter.html",
    "title": "Class ExternalReferencePackageWriter | DocFX website",
    "keywords": "Class ExternalReferencePackageWriter Inheritance Object ExternalReferencePackageWriter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public class ExternalReferencePackageWriter : IDisposable Methods | Improve this Doc View Source AddOrUpdateEntry(String, List<ReferenceViewModel>) Declaration public void AddOrUpdateEntry(string entryName, List<ReferenceViewModel> vm) Parameters Type Name Description String entryName List < ReferenceViewModel > vm | Improve this Doc View Source Append(String, Uri) Declaration public static ExternalReferencePackageWriter Append(string packageFile, Uri baseUri) Parameters Type Name Description String packageFile Uri baseUri Returns Type Description ExternalReferencePackageWriter | Improve this Doc View Source Create(String, Uri) Declaration public static ExternalReferencePackageWriter Create(string packageFile, Uri baseUri) Parameters Type Name Description String packageFile Uri baseUri Returns Type Description ExternalReferencePackageWriter | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.IOverwriteDocumentViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.IOverwriteDocumentViewModel.html",
    "title": "Interface IOverwriteDocumentViewModel | DocFX website",
    "keywords": "Interface IOverwriteDocumentViewModel Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax public interface IOverwriteDocumentViewModel Properties | Improve this Doc View Source Conceptual The markdown content from the overwrite document Declaration string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source Documentation The details for current overwrite document, containing the start/end line numbers, file path, and git info. Declaration SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Uid The uid for this overwrite document, as defined in YAML header Declaration string Uid { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ReferenceViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ReferenceViewModel.html",
    "title": "Class ReferenceViewModel | DocFX website",
    "keywords": "Class ReferenceViewModel Inheritance Object ReferenceViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class ReferenceViewModel Properties | Improve this Doc View Source Additional Declaration [ExtensibleMember] [JsonIgnore] public Dictionary<string, object> Additional { get; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public string FullName { get; set; } Property Value Type Description String | Improve this Doc View Source FullNameInDevLangs Declaration [ExtensibleMember(\"fullname.\")] [JsonIgnore] public SortedList<string, string> FullNameInDevLangs { get; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source IsExternal Declaration [JsonProperty(\"isExternal\")] [YamlMember(Alias = \"isExternal\")] public bool ? IsExternal { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source NameInDevLangs Declaration [ExtensibleMember(\"name.\")] [JsonIgnore] public SortedList<string, string> NameInDevLangs { get; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string NameWithType { get; set; } Property Value Type Description String | Improve this Doc View Source NameWithTypeInDevLangs Declaration [ExtensibleMember(\"nameWithType.\")] [JsonIgnore] public SortedList<string, string> NameWithTypeInDevLangs { get; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String | Improve this Doc View Source Specs Declaration [ExtensibleMember(\"spec.\")] [JsonIgnore] public SortedList<string, List<SpecViewModel>> Specs { get; } Property Value Type Description SortedList < String , List < SpecViewModel >> | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.SourceDetail.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.SourceDetail.html",
    "title": "Class SourceDetail | DocFX website",
    "keywords": "Class SourceDetail Inheritance Object SourceDetail Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class SourceDetail Properties | Improve this Doc View Source BasePath Declaration [YamlMember(Alias = \"base\")] [JsonProperty(\"base\")] public string BasePath { get; set; } Property Value Type Description String | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source EndLine Declaration [YamlMember(Alias = \"endLine\")] [JsonProperty(\"endLine\")] public int EndLine { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Href The url path for current source, should be resolved at some late stage Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source IsExternalPath The external path for current source if it is not locally available Declaration [YamlMember(Alias = \"isExternal\")] [JsonProperty(\"isExternal\")] public bool IsExternalPath { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Path The local path for current source, should be resolved to be relative path at some late stage Declaration [YamlMember(Alias = \"path\")] [JsonProperty(\"path\")] public string Path { get; set; } Property Value Type Description String | Improve this Doc View Source Remote Declaration [YamlMember(Alias = \"remote\")] [JsonProperty(\"remote\")] public GitDetail Remote { get; set; } Property Value Type Description GitDetail | Improve this Doc View Source StartLine Declaration [YamlMember(Alias = \"startLine\")] [JsonProperty(\"startLine\")] public int StartLine { get; set; } Property Value Type Description Int32 Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.SpecViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.SpecViewModel.html",
    "title": "Class SpecViewModel | DocFX website",
    "keywords": "Class SpecViewModel Inheritance Object SpecViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class SpecViewModel Properties | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public string FullName { get; set; } Property Value Type Description String | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source IsExternal Declaration [YamlMember(Alias = \"isExternal\")] [JsonProperty(\"isExternal\")] public bool IsExternal { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string NameWithType { get; set; } Property Value Type Description String | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel.html",
    "title": "Class TocItemViewModel | DocFX website",
    "keywords": "Class TocItemViewModel Inheritance Object TocItemViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class TocItemViewModel Properties | Improve this Doc View Source Additional Declaration [ExtensibleMember] [JsonIgnore] public Dictionary<string, object> Additional { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source AggregatedHref Declaration [YamlIgnore] [JsonIgnore] public string AggregatedHref { get; set; } Property Value Type Description String | Improve this Doc View Source AggregatedUid Declaration [YamlIgnore] [JsonIgnore] public string AggregatedUid { get; set; } Property Value Type Description String | Improve this Doc View Source Homepage Declaration [YamlMember(Alias = \"homepage\")] [JsonProperty(\"homepage\")] public string Homepage { get; set; } Property Value Type Description String | Improve this Doc View Source HomepageUid Declaration [YamlMember(Alias = \"homepageUid\")] [JsonProperty(\"homepageUid\")] public string HomepageUid { get; set; } Property Value Type Description String | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source IsHrefUpdated Declaration [YamlIgnore] [JsonIgnore] public bool IsHrefUpdated { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Items Declaration [YamlMember(Alias = \"items\")] [JsonProperty(\"items\")] public TocViewModel Items { get; set; } Property Value Type Description TocViewModel | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source NameForCSharp Declaration [YamlIgnore] [JsonIgnore] public string NameForCSharp { get; set; } Property Value Type Description String | Improve this Doc View Source NameForVB Declaration [YamlIgnore] [JsonIgnore] public string NameForVB { get; set; } Property Value Type Description String | Improve this Doc View Source NameInDevLangs Declaration [ExtensibleMember(\"name.\")] [JsonIgnore] public SortedList<string, string> NameInDevLangs { get; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source OriginalHomepage Declaration [YamlIgnore] [JsonIgnore] public string OriginalHomepage { get; set; } Property Value Type Description String | Improve this Doc View Source OriginalHref Declaration [YamlIgnore] [JsonIgnore] public string OriginalHref { get; set; } Property Value Type Description String | Improve this Doc View Source OriginalTocHref Declaration [YamlIgnore] [JsonIgnore] public string OriginalTocHref { get; set; } Property Value Type Description String | Improve this Doc View Source OriginalTopicHref Declaration [YamlIgnore] [JsonIgnore] public string OriginalTopicHref { get; set; } Property Value Type Description String | Improve this Doc View Source TocHref Declaration [YamlMember(Alias = \"tocHref\")] [JsonProperty(\"tocHref\")] public string TocHref { get; set; } Property Value Type Description String | Improve this Doc View Source TopicHref Declaration [YamlMember(Alias = \"topicHref\")] [JsonProperty(\"topicHref\")] public string TopicHref { get; set; } Property Value Type Description String | Improve this Doc View Source TopicUid Declaration [YamlMember(Alias = \"topicUid\")] [JsonProperty(\"topicUid\")] public string TopicUid { get; set; } Property Value Type Description String | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.TocViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.TocViewModel.html",
    "title": "Class TocViewModel | DocFX website",
    "keywords": "Class TocViewModel Inheritance Object List < TocItemViewModel > TocViewModel Inherited Members System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.set_Item(System.Int32, System.Object) List<TocItemViewModel>.Add(TocItemViewModel) System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.Add(System.Object) List<TocItemViewModel>.AddRange(IEnumerable<TocItemViewModel>) List<TocItemViewModel>.AsReadOnly() List<TocItemViewModel>.BinarySearch(Int32, Int32, TocItemViewModel, IComparer<TocItemViewModel>) List<TocItemViewModel>.BinarySearch(TocItemViewModel) List<TocItemViewModel>.BinarySearch(TocItemViewModel, IComparer<TocItemViewModel>) List<TocItemViewModel>.Clear() List<TocItemViewModel>.Contains(TocItemViewModel) System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.Contains(System.Object) List<TocItemViewModel>.ConvertAll<TOutput>(Converter<TocItemViewModel, TOutput>) List<TocItemViewModel>.CopyTo(TocItemViewModel[]) System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) List<TocItemViewModel>.CopyTo(Int32, TocItemViewModel[], Int32, Int32) List<TocItemViewModel>.CopyTo(TocItemViewModel[], Int32) List<TocItemViewModel>.Exists(Predicate<TocItemViewModel>) List<TocItemViewModel>.Find(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindAll(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindIndex(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindIndex(Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.FindIndex(Int32, Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLast(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLastIndex(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLastIndex(Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLastIndex(Int32, Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.ForEach(Action<TocItemViewModel>) List<TocItemViewModel>.GetEnumerator() System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.Generic.IEnumerable<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.GetEnumerator() System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IEnumerable.GetEnumerator() List<TocItemViewModel>.GetRange(Int32, Int32) List<TocItemViewModel>.IndexOf(TocItemViewModel) System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.IndexOf(System.Object) List<TocItemViewModel>.IndexOf(TocItemViewModel, Int32) List<TocItemViewModel>.IndexOf(TocItemViewModel, Int32, Int32) List<TocItemViewModel>.Insert(Int32, TocItemViewModel) System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.Insert(System.Int32, System.Object) List<TocItemViewModel>.InsertRange(Int32, IEnumerable<TocItemViewModel>) List<TocItemViewModel>.LastIndexOf(TocItemViewModel) List<TocItemViewModel>.LastIndexOf(TocItemViewModel, Int32) List<TocItemViewModel>.LastIndexOf(TocItemViewModel, Int32, Int32) List<TocItemViewModel>.Remove(TocItemViewModel) System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.Remove(System.Object) List<TocItemViewModel>.RemoveAll(Predicate<TocItemViewModel>) List<TocItemViewModel>.RemoveAt(Int32) List<TocItemViewModel>.RemoveRange(Int32, Int32) List<TocItemViewModel>.Reverse() List<TocItemViewModel>.Reverse(Int32, Int32) List<TocItemViewModel>.Sort() List<TocItemViewModel>.Sort(IComparer<TocItemViewModel>) List<TocItemViewModel>.Sort(Int32, Int32, IComparer<TocItemViewModel>) List<TocItemViewModel>.Sort(Comparison<TocItemViewModel>) List<TocItemViewModel>.ToArray() List<TocItemViewModel>.TrimExcess() List<TocItemViewModel>.TrueForAll(Predicate<TocItemViewModel>) List<TocItemViewModel>.Capacity List<TocItemViewModel>.Count System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.Generic.ICollection<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.IsReadOnly System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.ICollection.SyncRoot List<TocItemViewModel>.Item[Int32] System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.Item[System.Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.Common Assembly :Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class TocViewModel : List<TocItemViewModel>, IList<TocItemViewModel>, ICollection<TocItemViewModel>, IList, ICollection, IReadOnlyList<TocItemViewModel>, IReadOnlyCollection<TocItemViewModel>, IEnumerable<TocItemViewModel>, IEnumerable Constructors | Improve this Doc View Source TocViewModel() Declaration public TocViewModel() | Improve this Doc View Source TocViewModel(IEnumerable<TocItemViewModel>) Declaration public TocViewModel(IEnumerable<TocItemViewModel> items) Parameters Type Name Description IEnumerable < TocItemViewModel > items Extension Methods DocumentExceptionExtensions.RunAll<TocItemViewModel, TResult>(Func<TocItemViewModel, TResult>) DocumentExceptionExtensions.RunAll<TocItemViewModel>(Action<TocItemViewModel>) DocumentExceptionExtensions.RunAll<TocItemViewModel>(Action<TocItemViewModel>, Int32) TaskHelper.ForEachInParallelAsync<TocItemViewModel>(Func<TocItemViewModel, Task>, Int32) TaskHelper.ForEachInParallelAsync<TocItemViewModel>(Func<TocItemViewModel, Task>) TaskHelper.SelectInParallelAsync<TocItemViewModel, TResult>(Func<TocItemViewModel, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<TocItemViewModel, TResult>(Func<TocItemViewModel, Task<TResult>>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.html",
    "title": "Namespace Microsoft.DocAsCode.DataContracts.Common | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.DataContracts.Common Classes Constants Constants.DevLang Constants.PropertyName TODO: add other property name const ExternalReferencePackageCollection ExternalReferencePackageReader ExternalReferencePackageWriter ReferenceViewModel SourceDetail SpecViewModel TocItemViewModel TocViewModel Interfaces IOverwriteDocumentViewModel"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiParameter.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiParameter.html",
    "title": "Class ApiParameter | DocFX website",
    "keywords": "Class ApiParameter Inheritance Object ApiParameter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class ApiParameter Properties | Improve this Doc View Source Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] [MergeOption(MergeOption.Ignore)] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] [MergeOption(MergeOption.MergeKey)] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiReferenceViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiReferenceViewModel.html",
    "title": "Class ApiReferenceViewModel | DocFX website",
    "keywords": "Class ApiReferenceViewModel Inheritance Object Dictionary < String , String > ApiReferenceViewModel Inherited Members Dictionary<String, String>.Add(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) Dictionary<String, String>.Clear() Dictionary<String, String>.ContainsKey(String) Dictionary<String, String>.ContainsValue(String) Dictionary<String, String>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() Dictionary<String, String>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, String>.OnDeserialization(Object) Dictionary<String, String>.Remove(String) Dictionary<String, String>.TryGetValue(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Add(System.Object, System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Contains(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Remove(System.Object) Dictionary<String, String>.Comparer Dictionary<String, String>.Count Dictionary<String, String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys Dictionary<String, String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values Dictionary<String, String>.Item[String] System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.ICollection.SyncRoot System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.IsFixedSize System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.IsReadOnly System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Item[System.Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax public class ApiReferenceViewModel : Dictionary<string, string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback Extension Methods TaskHelper.ForEachInParallelAsync<KeyValuePair<String, String>>(Func<KeyValuePair<String, String>, Task>, Int32) TaskHelper.ForEachInParallelAsync<KeyValuePair<String, String>>(Func<KeyValuePair<String, String>, Task>) TaskHelper.SelectInParallelAsync<KeyValuePair<String, String>, TResult>(Func<KeyValuePair<String, String>, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<KeyValuePair<String, String>, TResult>(Func<KeyValuePair<String, String>, Task<TResult>>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ArgumentInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ArgumentInfo.html",
    "title": "Class ArgumentInfo | DocFX website",
    "keywords": "Class ArgumentInfo Inheritance Object ArgumentInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax public class ArgumentInfo Properties | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String | Improve this Doc View Source Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public object Value { get; set; } Property Value Type Description Object Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.AttributeInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.AttributeInfo.html",
    "title": "Class AttributeInfo | DocFX website",
    "keywords": "Class AttributeInfo Inheritance Object AttributeInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax public class AttributeInfo Properties | Improve this Doc View Source Arguments Declaration [YamlMember(Alias = \"arguments\")] [JsonProperty(\"arguments\")] public List<ArgumentInfo> Arguments { get; set; } Property Value Type Description List < ArgumentInfo > | Improve this Doc View Source Constructor Declaration [YamlMember(Alias = \"ctor\")] [JsonProperty(\"ctor\")] public string Constructor { get; set; } Property Value Type Description String | Improve this Doc View Source NamedArguments Declaration [YamlMember(Alias = \"namedArguments\")] [JsonProperty(\"namedArguments\")] public List<NamedArgumentInfo> NamedArguments { get; set; } Property Value Type Description List < NamedArgumentInfo > | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ExceptionInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ExceptionInfo.html",
    "title": "Class ExceptionInfo | DocFX website",
    "keywords": "Class ExceptionInfo Inheritance Object ExceptionInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class ExceptionInfo Properties | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [MergeOption(MergeOption.MergeKey)] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ItemViewModel.html",
    "title": "Class ItemViewModel | DocFX website",
    "keywords": "Class ItemViewModel Inheritance Object ItemViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class ItemViewModel : IOverwriteDocumentViewModel Properties | Improve this Doc View Source AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] [MergeOption(MergeOption.Ignore)] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > | Improve this Doc View Source Children Declaration [YamlMember(Alias = \"children\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"children\")] public List<string> Children { get; set; } Property Value Type Description List < String > | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Conceptual | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail Implements IOverwriteDocumentViewModel.Documentation | Improve this Doc View Source Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ExceptionInfo> Exceptions { get; set; } Property Value Type Description List < ExceptionInfo > | Improve this Doc View Source ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<string> ExtensionMethods { get; set; } Property Value Type Description List < String > | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public string FullName { get; set; } Property Value Type Description String | Improve this Doc View Source FullNameForCSharp Declaration [YamlIgnore] [JsonIgnore] public string FullNameForCSharp { get; set; } Property Value Type Description String | Improve this Doc View Source FullNameForVB Declaration [YamlIgnore] [JsonIgnore] public string FullNameForVB { get; set; } Property Value Type Description String | Improve this Doc View Source FullNames Declaration [ExtensibleMember(\"fullName.\")] [JsonIgnore] public SortedList<string, string> FullNames { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Implements Declaration [YamlMember(Alias = \"implements\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"implements\")] public List<string> Implements { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"inheritance\")] public List<string> Inheritance { get; set; } Property Value Type Description List < String > | Improve this Doc View Source InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [MergeOption(MergeOption.Ignore)] [JsonProperty(\"inheritedMembers\")] public List<string> InheritedMembers { get; set; } Property Value Type Description List < String > | Improve this Doc View Source IsExplicitInterfaceImplementation Declaration [YamlMember(Alias = \"isEii\")] [JsonProperty(\"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonIgnore] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Modifiers Declaration [ExtensibleMember(\"modifiers.\")] [MergeOption(MergeOption.Ignore)] [JsonIgnore] public SortedList<string, List<string>> Modifiers { get; set; } Property Value Type Description SortedList < String , List < String >> | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source NameForCSharp Declaration [YamlIgnore] [JsonIgnore] public string NameForCSharp { get; set; } Property Value Type Description String | Improve this Doc View Source NameForVB Declaration [YamlIgnore] [JsonIgnore] public string NameForVB { get; set; } Property Value Type Description String | Improve this Doc View Source Names Declaration [ExtensibleMember(\"name.\")] [JsonIgnore] public SortedList<string, string> Names { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public string NamespaceName { get; set; } Property Value Type Description String | Improve this Doc View Source NamesWithType Declaration [ExtensibleMember(\"nameWithType.\")] [JsonIgnore] public SortedList<string, string> NamesWithType { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string NameWithType { get; set; } Property Value Type Description String | Improve this Doc View Source NameWithTypeForCSharp Declaration [YamlIgnore] [JsonIgnore] public string NameWithTypeForCSharp { get; set; } Property Value Type Description String | Improve this Doc View Source NameWithTypeForVB Declaration [YamlIgnore] [JsonIgnore] public string NameWithTypeForVB { get; set; } Property Value Type Description String | Improve this Doc View Source Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public string Overridden { get; set; } Property Value Type Description String | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String | Improve this Doc View Source Platform Declaration [YamlMember(Alias = \"platform\")] [JsonProperty(\"platform\")] public List<string> Platform { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<LinkInfo> SeeAlsos { get; set; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<LinkInfo> Sees { get; set; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source SupportedLanguages Declaration [YamlMember(Alias = \"langs\")] [JsonProperty(\"langs\")] public string[] SupportedLanguages { get; set; } Property Value Type Description String [] | Improve this Doc View Source Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public SyntaxDetailViewModel Syntax { get; set; } Property Value Type Description SyntaxDetailViewModel | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public MemberType? Type { get; set; } Property Value Type Description Nullable < MemberType > | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] [MergeOption(MergeOption.MergeKey)] public string Uid { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Uid Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkInfo.html",
    "title": "Class LinkInfo | DocFX website",
    "keywords": "Class LinkInfo Inheritance Object LinkInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class LinkInfo Properties | Improve this Doc View Source AltText Declaration [YamlMember(Alias = \"altText\")] [JsonProperty(\"altText\")] public string AltText { get; set; } Property Value Type Description String | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source LinkId Declaration [YamlMember(Alias = \"linkId\")] [MergeOption(MergeOption.MergeKey)] [JsonProperty(\"linkId\")] public string LinkId { get; set; } Property Value Type Description String | Improve this Doc View Source LinkType Declaration [YamlMember(Alias = \"linkType\")] [JsonProperty(\"linkType\")] public LinkType LinkType { get; set; } Property Value Type Description LinkType Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkType.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkType.html",
    "title": "Enum LinkType | DocFX website",
    "keywords": "Enum LinkType Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public enum LinkType Fields Name Description CRef HRef Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.MemberType.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.MemberType.html",
    "title": "Enum MemberType | DocFX website",
    "keywords": "Enum MemberType Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public enum MemberType Fields Name Description Assembly Class Constructor Default Delegate Enum Event Field Interface Method Namespace Operator Property Struct Toc Extension Methods YamlViewModelExtensions.IsPageLevel() YamlViewModelExtensions.AllowMultipleItems() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.NamedArgumentInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.NamedArgumentInfo.html",
    "title": "Class NamedArgumentInfo | DocFX website",
    "keywords": "Class NamedArgumentInfo Inheritance Object NamedArgumentInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax public class NamedArgumentInfo Properties | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String | Improve this Doc View Source Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public object Value { get; set; } Property Value Type Description Object Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.PageViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.PageViewModel.html",
    "title": "Class PageViewModel | DocFX website",
    "keywords": "Class PageViewModel Inheritance Object PageViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class PageViewModel Properties | Improve this Doc View Source Items Declaration [YamlMember(Alias = \"items\")] [JsonProperty(\"items\")] public List<ItemViewModel> Items { get; set; } Property Value Type Description List < ItemViewModel > | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source References Declaration [YamlMember(Alias = \"references\")] [JsonProperty(\"references\")] public List<ReferenceViewModel> References { get; set; } Property Value Type Description List < ReferenceViewModel > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxDetailViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxDetailViewModel.html",
    "title": "Class SyntaxDetailViewModel | DocFX website",
    "keywords": "Class SyntaxDetailViewModel Inheritance Object SyntaxDetailViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class SyntaxDetailViewModel Properties | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source ContentForCSharp Declaration [YamlMember(Alias = \"content.csharp\")] [JsonProperty(\"content.csharp\")] public string ContentForCSharp { get; set; } Property Value Type Description String | Improve this Doc View Source ContentForVB Declaration [YamlMember(Alias = \"content.vb\")] [JsonProperty(\"content.vb\")] public string ContentForVB { get; set; } Property Value Type Description String | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ApiParameter> Parameters { get; set; } Property Value Type Description List < ApiParameter > | Improve this Doc View Source Return Declaration [YamlMember(Alias = \"return\")] [JsonProperty(\"return\")] public ApiParameter Return { get; set; } Property Value Type Description ApiParameter | Improve this Doc View Source TypeParameters Declaration [YamlMember(Alias = \"typeParameters\")] [JsonProperty(\"typeParameters\")] public List<ApiParameter> TypeParameters { get; set; } Property Value Type Description List < ApiParameter > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxLanguage.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxLanguage.html",
    "title": "Enum SyntaxLanguage | DocFX website",
    "keywords": "Enum SyntaxLanguage Namespace :Microsoft.DocAsCode.DataContracts.ManagedReference Assembly :Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax public enum SyntaxLanguage Fields Name Description CPlusPlus CSharp Default FSharp Javascript VB Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.html",
    "title": "Namespace Microsoft.DocAsCode.DataContracts.ManagedReference | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.DataContracts.ManagedReference Classes ApiParameter ApiReferenceViewModel ArgumentInfo AttributeInfo ExceptionInfo ItemViewModel LinkInfo NamedArgumentInfo PageViewModel SyntaxDetailViewModel Enums LinkType MemberType SyntaxLanguage"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiChildItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiChildItemViewModel.html",
    "title": "Class RestApiChildItemViewModel | DocFX website",
    "keywords": "Class RestApiChildItemViewModel Inheritance Object RestApiItemViewModelBase RestApiChildItemViewModel Inherited Members RestApiItemViewModelBase.Uid RestApiItemViewModelBase.HtmlId RestApiItemViewModelBase.Name RestApiItemViewModelBase.Conceptual RestApiItemViewModelBase.Description RestApiItemViewModelBase.Summary RestApiItemViewModelBase.Documentation RestApiItemViewModelBase.Metadata Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiChildItemViewModel : RestApiItemViewModelBase, IOverwriteDocumentViewModel Properties | Improve this Doc View Source OperationId Declaration [YamlMember(Alias = \"operationId\")] [JsonProperty(\"operationId\")] public string OperationId { get; set; } Property Value Type Description String | Improve this Doc View Source OperationName operation name, for example get, put, post, delete, options, head and patch. Declaration [YamlMember(Alias = \"operation\")] [JsonProperty(\"operation\")] public string OperationName { get; set; } Property Value Type Description String | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<RestApiParameterViewModel> Parameters { get; set; } Property Value Type Description List < RestApiParameterViewModel > | Improve this Doc View Source Path Declaration [YamlMember(Alias = \"path\")] [JsonProperty(\"path\")] public string Path { get; set; } Property Value Type Description String | Improve this Doc View Source Responses Declaration [YamlMember(Alias = \"responses\")] [JsonProperty(\"responses\")] public List<RestApiResponseViewModel> Responses { get; set; } Property Value Type Description List < RestApiResponseViewModel > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiItemViewModelBase.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiItemViewModelBase.html",
    "title": "Class RestApiItemViewModelBase | DocFX website",
    "keywords": "Class RestApiItemViewModelBase Inheritance Object RestApiItemViewModelBase Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiItemViewModelBase : IOverwriteDocumentViewModel Properties | Improve this Doc View Source Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Conceptual | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] [MergeOption(MergeOption.Ignore)] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail Implements IOverwriteDocumentViewModel.Documentation | Improve this Doc View Source HtmlId Declaration [YamlMember(Alias = \"htmlId\")] [JsonProperty(\"htmlId\")] [MergeOption(MergeOption.Ignore)] public string HtmlId { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] [MergeOption(MergeOption.MergeKey)] public string Uid { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Uid Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiParameterViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiParameterViewModel.html",
    "title": "Class RestApiParameterViewModel | DocFX website",
    "keywords": "Class RestApiParameterViewModel Inheritance Object RestApiParameterViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiParameterViewModel Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseExampleViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseExampleViewModel.html",
    "title": "Class RestApiResponseExampleViewModel | DocFX website",
    "keywords": "Class RestApiResponseExampleViewModel Inheritance Object RestApiResponseExampleViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiResponseExampleViewModel Properties | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source MimeType Declaration [YamlMember(Alias = \"mimeType\")] [JsonProperty(\"mimeType\")] public string MimeType { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseViewModel.html",
    "title": "Class RestApiResponseViewModel | DocFX website",
    "keywords": "Class RestApiResponseViewModel Inheritance Object RestApiResponseViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiResponseViewModel Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Examples Declaration [YamlMember(Alias = \"examples\")] [JsonProperty(\"examples\")] public List<RestApiResponseExampleViewModel> Examples { get; set; } Property Value Type Description List < RestApiResponseExampleViewModel > | Improve this Doc View Source HttpStatusCode Declaration [YamlMember(Alias = \"statusCode\")] [JsonProperty(\"statusCode\")] [MergeOption(MergeOption.MergeKey)] public string HttpStatusCode { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiRootItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiRootItemViewModel.html",
    "title": "Class RestApiRootItemViewModel | DocFX website",
    "keywords": "Class RestApiRootItemViewModel Inheritance Object RestApiItemViewModelBase RestApiRootItemViewModel Inherited Members RestApiItemViewModelBase.Uid RestApiItemViewModelBase.HtmlId RestApiItemViewModelBase.Name RestApiItemViewModelBase.Conceptual RestApiItemViewModelBase.Description RestApiItemViewModelBase.Summary RestApiItemViewModelBase.Documentation RestApiItemViewModelBase.Metadata Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiRootItemViewModel : RestApiItemViewModelBase, IOverwriteDocumentViewModel Properties | Improve this Doc View Source Children Declaration [YamlMember(Alias = \"children\")] [JsonProperty(\"children\")] public List<RestApiChildItemViewModel> Children { get; set; } Property Value Type Description List < RestApiChildItemViewModel > | Improve this Doc View Source Raw The original swagger.json content _ prefix indicates that this metadata is generated Declaration [YamlMember(Alias = \"_raw\")] [JsonProperty(\"_raw\")] [MergeOption(MergeOption.Ignore)] public string Raw { get; set; } Property Value Type Description String | Improve this Doc View Source Tags Declaration [YamlMember(Alias = \"tags\")] [JsonProperty(\"tags\")] public List<RestApiTagViewModel> Tags { get; set; } Property Value Type Description List < RestApiTagViewModel > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiTagViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiTagViewModel.html",
    "title": "Class RestApiTagViewModel | DocFX website",
    "keywords": "Class RestApiTagViewModel Inheritance Object RestApiTagViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.DataContracts.RestApi Assembly :Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiTagViewModel : IOverwriteDocumentViewModel Properties | Improve this Doc View Source Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Conceptual | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] [MergeOption(MergeOption.Ignore)] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail Implements IOverwriteDocumentViewModel.Documentation | Improve this Doc View Source HtmlId Declaration [YamlMember(Alias = \"htmlId\")] [JsonProperty(\"htmlId\")] [MergeOption(MergeOption.Ignore)] public string HtmlId { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [ExtensibleMember] [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] [MergeOption(MergeOption.MergeKey)] public string Uid { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel.Uid Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.html",
    "title": "Namespace Microsoft.DocAsCode.DataContracts.RestApi | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.DataContracts.RestApi Classes RestApiChildItemViewModel RestApiItemViewModelBase RestApiParameterViewModel RestApiResponseExampleViewModel RestApiResponseViewModel RestApiRootItemViewModel RestApiTagViewModel"
  },
  "api/Microsoft.DocAsCode.Dfm.CodeSnippetRegexExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CodeSnippetRegexExtractor.html",
    "title": "Class CodeSnippetRegexExtractor | DocFX website",
    "keywords": "Class CodeSnippetRegexExtractor Inheritance Object CodeSnippetRegexExtractor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public abstract class CodeSnippetRegexExtractor : ICodeSnippetExtractor Methods | Improve this Doc View Source GetAll(String[]) Declaration public Dictionary<string, DfmTagNameResolveResult> GetAll(string[] lines) Parameters Type Name Description String [] lines Returns Type Description Dictionary < String , DfmTagNameResolveResult > Implements ICodeSnippetExtractor.GetAll(String[]) | Improve this Doc View Source ResolveCodeSnippetTags(String[]) Declaration protected abstract List<CodeSnippetTag> ResolveCodeSnippetTags(string[] lines) Parameters Type Name Description String [] lines Returns Type Description List < CodeSnippetTag > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.CodeSnippetTag.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CodeSnippetTag.html",
    "title": "Class CodeSnippetTag | DocFX website",
    "keywords": "Class CodeSnippetTag Inheritance Object CodeSnippetTag Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class CodeSnippetTag Constructors | Improve this Doc View Source CodeSnippetTag(String, Int32, CodeSnippetTagType) Declaration public CodeSnippetTag(string name, int line, CodeSnippetTagType type) Parameters Type Name Description String name Int32 line CodeSnippetTagType type Properties | Improve this Doc View Source Line Declaration public int Line { get; } Property Value Type Description Int32 | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Type Declaration public CodeSnippetTagType Type { get; } Property Value Type Description CodeSnippetTagType Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.CodeSnippetTagType.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CodeSnippetTagType.html",
    "title": "Enum CodeSnippetTagType | DocFX website",
    "keywords": "Enum CodeSnippetTagType Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public enum CodeSnippetTagType Fields Name Description End Start Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteBlockRule.html",
    "title": "Class DfmBlockquoteBlockRule | DocFX website",
    "keywords": "Class DfmBlockquoteBlockRule Inheritance Object MarkdownBlockquoteBlockRule DfmBlockquoteBlockRule Inherited Members MarkdownBlockquoteBlockRule.Blockquote MarkdownBlockquoteBlockRule.LeadingBlockquote Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmBlockquoteBlockRule : MarkdownBlockquoteBlockRule, IMarkdownRule Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownBlockquoteBlockRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides MarkdownBlockquoteBlockRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteHelper.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteHelper.html",
    "title": "Class DfmBlockquoteHelper | DocFX website",
    "keywords": "Class DfmBlockquoteHelper Inheritance Object DfmBlockquoteHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmBlockquoteHelper Methods | Improve this Doc View Source SplitBlockquoteTokens(ImmutableArray<IMarkdownToken>) Declaration public static List<SplitToken> SplitBlockquoteTokens(ImmutableArray<IMarkdownToken> tokens) Parameters Type Name Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Returns Type Description List < SplitToken > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmCodeExtractorHelper.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmCodeExtractorHelper.html",
    "title": "Class DfmCodeExtractorHelper | DocFX website",
    "keywords": "Class DfmCodeExtractorHelper Inheritance Object DfmCodeExtractorHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public static class DfmCodeExtractorHelper Fields | Improve this Doc View Source AllowedIndentCharacters Declaration public static readonly List<char> AllowedIndentCharacters Field Value Type Description List < Char > Methods | Improve this Doc View Source GetIndentLength(String) Declaration public static int GetIndentLength(string s) Parameters Type Name Description String s Returns Type Description Int32"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmContextExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmContextExtensions.html",
    "title": "Class DfmContextExtensions | DocFX website",
    "keywords": "Class DfmContextExtensions Inheritance Object DfmContextExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public static class DfmContextExtensions Methods | Improve this Doc View Source GetBaseFolder(IMarkdownContext) Declaration public static string GetBaseFolder(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description String | Improve this Doc View Source GetFilePathStack(IMarkdownContext) Declaration public static ImmutableStack<string> GetFilePathStack(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description System.Collections.Immutable.ImmutableStack < String > | Improve this Doc View Source ReportDependency(IMarkdownContext, IEnumerable<String>) Declaration public static void ReportDependency(this IMarkdownContext context, IEnumerable<string> files) Parameters Type Name Description IMarkdownContext context IEnumerable < String > files | Improve this Doc View Source ReportDependency(IMarkdownContext, String) Declaration public static void ReportDependency(this IMarkdownContext context, string file) Parameters Type Name Description IMarkdownContext context String file | Improve this Doc View Source SetBaseFolder(IMarkdownContext, String) Declaration public static IMarkdownContext SetBaseFolder(this IMarkdownContext context, string baseFolder) Parameters Type Name Description IMarkdownContext context String baseFolder Returns Type Description IMarkdownContext | Improve this Doc View Source SetDependency(IMarkdownContext, HashSet<String>) Declaration public static IMarkdownContext SetDependency(this IMarkdownContext context, HashSet<string> dependency) Parameters Type Name Description IMarkdownContext context HashSet < String > dependency Returns Type Description IMarkdownContext | Improve this Doc View Source SetFilePathStack(IMarkdownContext, ImmutableStack<String>) Declaration public static IMarkdownContext SetFilePathStack(this IMarkdownContext context, ImmutableStack<string> filePathStack) Parameters Type Name Description IMarkdownContext context System.Collections.Immutable.ImmutableStack < String > filePathStack Returns Type Description IMarkdownContext"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmEmailInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmEmailInlineRule.html",
    "title": "Class DfmEmailInlineRule | DocFX website",
    "keywords": "Class DfmEmailInlineRule Inheritance Object DfmEmailInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmEmailInlineRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source Xref Declaration public virtual Regex Xref { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmEngine.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmEngine.html",
    "title": "Class DfmEngine | DocFX website",
    "keywords": "Class DfmEngine Inheritance Object MarkdownEngine DfmEngine Inherited Members MarkdownEngine.RendererImpl MarkdownEngine.Options MarkdownEngine.Context MarkdownEngine.Rewriter MarkdownEngine.TokenTreeValidator MarkdownEngine.Links MarkdownEngine.MaxExtractCount MarkdownEngine.Normalize(String) MarkdownEngine.Mark(SourceInfo, IMarkdownContext) MarkdownEngine.Preprocess(String) MarkdownEngine.Parser MarkdownEngine.RewriteEngine MarkdownEngine.Renderer Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmEngine : MarkdownEngine, IMarkdownEngine Constructors | Improve this Doc View Source DfmEngine(IMarkdownContext, IMarkdownTokenRewriter, Object, Options) Declaration public DfmEngine(IMarkdownContext context, IMarkdownTokenRewriter rewriter, object renderer, Options options) Parameters Type Name Description IMarkdownContext context IMarkdownTokenRewriter rewriter Object renderer Options options Methods | Improve this Doc View Source Markup(String, String) Declaration public override string Markup(string src, string path) Parameters Type Name Description String src String path Returns Type Description String Overrides MarkdownEngine.Markup(String, String) | Improve this Doc View Source Markup(String, String, HashSet<String>) Declaration public string Markup(string src, string path, HashSet<string> dependency) Parameters Type Name Description String src String path HashSet < String > dependency Returns Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmEngineBuilder.html",
    "title": "Class DfmEngineBuilder | DocFX website",
    "keywords": "Class DfmEngineBuilder Inheritance Object MarkdownEngineBuilder GfmEngineBuilder DfmEngineBuilder Inherited Members GfmEngineBuilder.BuildRules() GfmEngineBuilder.BuildBlockRules() GfmEngineBuilder.BuildInlineRules() MarkdownEngineBuilder.Options MarkdownEngineBuilder.BlockRules MarkdownEngineBuilder.InlineRules MarkdownEngineBuilder.Rewriter MarkdownEngineBuilder.TokenTreeValidator MarkdownEngineBuilder.CreateParseContext() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmEngineBuilder : GfmEngineBuilder Constructors | Improve this Doc View Source DfmEngineBuilder(Options, String, String) Declaration public DfmEngineBuilder(Options options, string baseDir = null, string templateDir = null) Parameters Type Name Description Options options String baseDir String templateDir Methods | Improve this Doc View Source CreateDfmEngine(Object) Declaration public DfmEngine CreateDfmEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description DfmEngine | Improve this Doc View Source CreateEngine(Object) Declaration public override IMarkdownEngine CreateEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description IMarkdownEngine Overrides MarkdownEngineBuilder.CreateEngine(Object) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockHelper.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockHelper.html",
    "title": "Class DfmFencesBlockHelper | DocFX website",
    "keywords": "Class DfmFencesBlockHelper Inheritance Object DfmFencesBlockHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public static class DfmFencesBlockHelper Methods | Improve this Doc View Source GenerateReferenceNotFoundErrorMessage(IMarkdownRenderer, DfmFencesBlockToken) Declaration public static string GenerateReferenceNotFoundErrorMessage(IMarkdownRenderer renderer, DfmFencesBlockToken token) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesBlockToken token Returns Type Description String | Improve this Doc View Source GetRenderedFencesBlockString(DfmFencesBlockToken, Options, String, String[]) Declaration public static string GetRenderedFencesBlockString(DfmFencesBlockToken token, Options options, string errorMessage, string[] codeLines = null) Parameters Type Name Description DfmFencesBlockToken token Options options String errorMessage String [] codeLines Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockPathQueryOption.html",
    "title": "Class DfmFencesBlockPathQueryOption | DocFX website",
    "keywords": "Class DfmFencesBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public abstract class DfmFencesBlockPathQueryOption : IDfmFencesBlockPathQueryOption Properties | Improve this Doc View Source DedentLength Declaration public int ? DedentLength { get; set; } Property Value Type Description Nullable < Int32 > Implements IDfmFencesBlockPathQueryOption.DedentLength | Improve this Doc View Source ErrorMessage Declaration public string ErrorMessage { get; protected set; } Property Value Type Description String Implements IDfmFencesBlockPathQueryOption.ErrorMessage | Improve this Doc View Source HighlightLines Declaration public string HighlightLines { get; set; } Property Value Type Description String Implements IDfmFencesBlockPathQueryOption.HighlightLines Methods | Improve this Doc View Source CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>) Declaration protected bool CheckLineRange(int totalLines, int ? startLine, int ? endLine) Parameters Type Name Description Int32 totalLines Nullable < Int32 > startLine Nullable < Int32 > endLine Returns Type Description Boolean | Improve this Doc View Source GetQueryLines(String[]) Declaration public abstract IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > Implements IDfmFencesBlockPathQueryOption.GetQueryLines(String[]) | Improve this Doc View Source ValidateAndPrepare(String[], DfmFencesBlockToken) Declaration public abstract bool ValidateAndPrepare(string[] lines, DfmFencesBlockToken token) Parameters Type Name Description String [] lines DfmFencesBlockToken token Returns Type Description Boolean Implements IDfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesBlockToken) | Improve this Doc View Source ValidateHighlightLinesAndDedentLength(Int32) Declaration public bool ValidateHighlightLinesAndDedentLength(int totalLines) Parameters Type Name Description Int32 totalLines Returns Type Description Boolean Implements IDfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockRule.html",
    "title": "Class DfmFencesBlockRule | DocFX website",
    "keywords": "Class DfmFencesBlockRule Inheritance Object DfmFencesBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmFencesBlockRule : IMarkdownRule Fields | Improve this Doc View Source _dfmFencesRangeQueryStringRegex Declaration public static readonly Regex _dfmFencesRangeQueryStringRegex Field Value Type Description Regex | Improve this Doc View Source _dfmFencesRegex Declaration public static readonly Regex _dfmFencesRegex Field Value Type Description Regex | Improve this Doc View Source _dfmFencesSharpQueryStringRegex Declaration public static readonly Regex _dfmFencesSharpQueryStringRegex Field Value Type Description Regex Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockToken.html",
    "title": "Class DfmFencesBlockToken | DocFX website",
    "keywords": "Class DfmFencesBlockToken Inheritance Object DfmFencesBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmFencesBlockToken : IMarkdownToken Constructors | Improve this Doc View Source DfmFencesBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, IDfmFencesBlockPathQueryOption) Declaration public DfmFencesBlockToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang = null, string title = null, IDfmFencesBlockPathQueryOption pathQueryOption = null) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title IDfmFencesBlockPathQueryOption pathQueryOption Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Lang Declaration public string Lang { get; } Property Value Type Description String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Path Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source PathQueryOption Declaration public IDfmFencesBlockPathQueryOption PathQueryOption { get; } Property Value Type Description IDfmFencesBlockPathQueryOption | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableBlockRule.html",
    "title": "Class MarkdownTableBlockRule | DocFX website",
    "keywords": "Class MarkdownTableBlockRule Inheritance Object MarkdownTableBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTableBlockRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source Table Declaration public virtual Regex Table { get; } Property Value Type Description Regex Methods | Improve this Doc View Source ParseAligns(String[]) Declaration protected virtual Align[] ParseAligns(string[] aligns) Parameters Type Name Description String [] aligns Returns Type Description Align [] | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableBlockToken.html",
    "title": "Class MarkdownTableBlockToken | DocFX website",
    "keywords": "Class MarkdownTableBlockToken Inheritance Object MarkdownTableBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTableBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownTableBlockToken> Constructors | Improve this Doc View Source MarkdownTableBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<MarkdownTableItemBlockToken>, ImmutableArray<Align>, ImmutableArray<ImmutableArray<MarkdownTableItemBlockToken>>, SourceInfo) Declaration public MarkdownTableBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<MarkdownTableItemBlockToken> header, ImmutableArray<Align> align, ImmutableArray<ImmutableArray<MarkdownTableItemBlockToken>> cells, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < MarkdownTableItemBlockToken > header System.Collections.Immutable.ImmutableArray < Align > align System.Collections.Immutable.ImmutableArray < System.Collections.Immutable.ImmutableArray < MarkdownTableItemBlockToken >> cells SourceInfo sourceInfo Properties | Improve this Doc View Source Align Declaration public ImmutableArray<Align> Align { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < Align > | Improve this Doc View Source Cells Declaration public ImmutableArray<ImmutableArray<MarkdownTableItemBlockToken>> Cells { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < System.Collections.Immutable.ImmutableArray < MarkdownTableItemBlockToken >> | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Header Declaration public ImmutableArray<MarkdownTableItemBlockToken> Header { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < MarkdownTableItemBlockToken > | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownTableBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownTableBlockToken Implements IMarkdownRewritable<MarkdownTableBlockToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableItemBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTableItemBlockToken.html",
    "title": "Class MarkdownTableItemBlockToken | DocFX website",
    "keywords": "Class MarkdownTableItemBlockToken Inheritance Object MarkdownTableItemBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTableItemBlockToken : IMarkdownToken, IMarkdownRewritable<MarkdownTableItemBlockToken> Constructors | Improve this Doc View Source MarkdownTableItemBlockToken(IMarkdownRule, IMarkdownContext, InlineContent, SourceInfo) Declaration public MarkdownTableItemBlockToken(IMarkdownRule rule, IMarkdownContext context, InlineContent content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context InlineContent content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public InlineContent Content { get; } Property Value Type Description InlineContent | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownTableItemBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownTableItemBlockToken Implements IMarkdownRewritable<MarkdownTableItemBlockToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTagInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTagInlineRule.html",
    "title": "Class MarkdownTagInlineRule | DocFX website",
    "keywords": "Class MarkdownTagInlineRule Inheritance Object MarkdownTagInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTagInlineRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source Tag Declaration public virtual Regex Tag { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTagInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTagInlineToken.html",
    "title": "Class MarkdownTagInlineToken | DocFX website",
    "keywords": "Class MarkdownTagInlineToken Inheritance Object MarkdownTagInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTagInlineToken : IMarkdownToken Constructors | Improve this Doc View Source MarkdownTagInlineToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownTagInlineToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextBlockRule.html",
    "title": "Class MarkdownTextBlockRule | DocFX website",
    "keywords": "Class MarkdownTextBlockRule Inheritance Object MarkdownTextBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTextBlockRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source Text Declaration public virtual Regex Text { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextInlineRule.html",
    "title": "Class MarkdownTextInlineRule | DocFX website",
    "keywords": "Class MarkdownTextInlineRule Inheritance Object MarkdownTextInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTextInlineRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source Text Declaration public virtual Regex Text { get; } Property Value Type Description Regex Methods | Improve this Doc View Source Smartypants(Options, String) Smartypants Transformations Declaration protected virtual string Smartypants(Options options, string text) Parameters Type Name Description Options options String text Returns Type Description String | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTextToken.html",
    "title": "Class MarkdownTextToken | DocFX website",
    "keywords": "Class MarkdownTextToken Inheritance Object MarkdownTextToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTextToken : IMarkdownToken Constructors | Improve this Doc View Source MarkdownTextToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public MarkdownTextToken(IMarkdownRule rule, IMarkdownContext context, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenExtensions.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenExtensions.html",
    "title": "Class MarkdownTokenExtensions | DocFX website",
    "keywords": "Class MarkdownTokenExtensions Inheritance Object MarkdownTokenExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class MarkdownTokenExtensions Methods | Improve this Doc View Source BlockTokens(IEnumerable<IMarkdownToken>) Declaration public static IEnumerable<IMarkdownToken> BlockTokens(this IEnumerable<IMarkdownToken> tokens) Parameters Type Name Description IEnumerable < IMarkdownToken > tokens Returns Type Description IEnumerable < IMarkdownToken > | Improve this Doc View Source Children(IMarkdownToken) Declaration public static IEnumerable<IMarkdownToken> Children(this IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Returns Type Description IEnumerable < IMarkdownToken > | Improve this Doc View Source Children<T>(IMarkdownToken) Declaration public static IEnumerable<T> Children<T>(this IMarkdownToken token)where T : IMarkdownToken Parameters Type Name Description IMarkdownToken token Returns Type Description IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source Descendants(IMarkdownToken) Declaration public static IEnumerable<IMarkdownToken> Descendants(this IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Returns Type Description IEnumerable < IMarkdownToken > | Improve this Doc View Source Descendants<T>(IMarkdownToken) Declaration public static IEnumerable<T> Descendants<T>(this IMarkdownToken token)where T : IMarkdownToken Parameters Type Name Description IMarkdownToken token Returns Type Description IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source InlineTokens(IEnumerable<IMarkdownToken>) Declaration public static IEnumerable<IMarkdownToken> InlineTokens(this IEnumerable<IMarkdownToken> tokens) Parameters Type Name Description IEnumerable < IMarkdownToken > tokens Returns Type Description IEnumerable < IMarkdownToken >"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenRewriterFactory.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenRewriterFactory.html",
    "title": "Class MarkdownTokenRewriterFactory | DocFX website",
    "keywords": "Class MarkdownTokenRewriterFactory Inheritance Object MarkdownTokenRewriterFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class MarkdownTokenRewriterFactory Fields | Improve this Doc View Source MarkdownTokenRewriterFactory Declaration public static readonly IMarkdownTokenRewriter Null Field Value Type Description IMarkdownTokenRewriter Methods | Improve this Doc View Source Composite(IMarkdownTokenRewriter[]) Declaration public static IMarkdownTokenRewriter Composite(params IMarkdownTokenRewriter[] rewriters) Parameters Type Name Description IMarkdownTokenRewriter [] rewriters Returns Type Description IMarkdownTokenRewriter | Improve this Doc View Source Composite(IEnumerable<IMarkdownTokenRewriter>) Declaration public static IMarkdownTokenRewriter Composite(IEnumerable<IMarkdownTokenRewriter> rewriters) Parameters Type Name Description IEnumerable < IMarkdownTokenRewriter > rewriters Returns Type Description IMarkdownTokenRewriter | Improve this Doc View Source FromLambda<TEngine, TToken>(Func<TEngine, TToken, IMarkdownToken>) Declaration public static IMarkdownTokenRewriter FromLambda<TEngine, TToken>(Func<TEngine, TToken, IMarkdownToken> rewriteFunc)where TEngine : class, IMarkdownRewriteEngine where TToken : class, IMarkdownToken Parameters Type Name Description Func <TEngine, TToken, IMarkdownToken > rewriteFunc Returns Type Description IMarkdownTokenRewriter Type Parameters Name Description TEngine TToken | Improve this Doc View Source FromLambda<TEngine, TToken>(Func<TEngine, TToken, IMarkdownToken>, Action<TEngine>) Declaration public static IMarkdownTokenRewriter FromLambda<TEngine, TToken>(Func<TEngine, TToken, IMarkdownToken> rewriteFunc, Action<TEngine> initializer)where TEngine : class, IMarkdownRewriteEngine where TToken : class, IMarkdownToken Parameters Type Name Description Func <TEngine, TToken, IMarkdownToken > rewriteFunc Action <TEngine> initializer Returns Type Description IMarkdownTokenRewriter Type Parameters Name Description TEngine TToken | Improve this Doc View Source FromValidators(IMarkdownTokenValidator[]) Declaration public static IMarkdownTokenRewriter FromValidators(params IMarkdownTokenValidator[] validators) Parameters Type Name Description IMarkdownTokenValidator [] validators Returns Type Description IMarkdownTokenRewriter | Improve this Doc View Source FromValidators(IEnumerable<IMarkdownTokenValidator>) Declaration public static IMarkdownTokenRewriter FromValidators(IEnumerable<IMarkdownTokenValidator> validators) Parameters Type Name Description IEnumerable < IMarkdownTokenValidator > validators Returns Type Description IMarkdownTokenRewriter | Improve this Doc View Source FromValidators(String, IEnumerable<IMarkdownTokenValidator>) Declaration public static IMarkdownTokenRewriter FromValidators(string scopeName, IEnumerable<IMarkdownTokenValidator> validators) Parameters Type Name Description String scopeName IEnumerable < IMarkdownTokenValidator > validators Returns Type Description IMarkdownTokenRewriter | Improve this Doc View Source Loop(IMarkdownTokenRewriter, Int32) Declaration public static IMarkdownTokenRewriter Loop(IMarkdownTokenRewriter rewriter, int maxLoopCount) Parameters Type Name Description IMarkdownTokenRewriter rewriter Int32 maxLoopCount Returns Type Description IMarkdownTokenRewriter | Improve this Doc View Source Sequence(IMarkdownTokenRewriter[]) Declaration public static IMarkdownTokenRewriter Sequence(params IMarkdownTokenRewriter[] rewriters) Parameters Type Name Description IMarkdownTokenRewriter [] rewriters Returns Type Description IMarkdownTokenRewriter"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenTreeValidatorFactory.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenTreeValidatorFactory.html",
    "title": "Class MarkdownTokenTreeValidatorFactory | DocFX website",
    "keywords": "Class MarkdownTokenTreeValidatorFactory Inheritance Object MarkdownTokenTreeValidatorFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class MarkdownTokenTreeValidatorFactory Fields | Improve this Doc View Source MarkdownTokenTreeValidatorFactory Declaration public static readonly IMarkdownTokenTreeValidator Null Field Value Type Description IMarkdownTokenTreeValidator Methods | Improve this Doc View Source Combine(IMarkdownTokenTreeValidator[]) Declaration public static IMarkdownTokenTreeValidator Combine(params IMarkdownTokenTreeValidator[] validators) Parameters Type Name Description IMarkdownTokenTreeValidator [] validators Returns Type Description IMarkdownTokenTreeValidator | Improve this Doc View Source Combine(IEnumerable<IMarkdownTokenTreeValidator>) Declaration public static IMarkdownTokenTreeValidator Combine(IEnumerable<IMarkdownTokenTreeValidator> validators) Parameters Type Name Description IEnumerable < IMarkdownTokenTreeValidator > validators Returns Type Description IMarkdownTokenTreeValidator"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenValidatorContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenValidatorContext.html",
    "title": "Class MarkdownTokenValidatorContext | DocFX website",
    "keywords": "Class MarkdownTokenValidatorContext Inheritance Object MarkdownTokenValidatorContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownTokenValidatorContext : IDisposable Properties | Improve this Doc View Source CurrentRewriteEngine Declaration public static IMarkdownRewriteEngine CurrentRewriteEngine { get; } Property Value Type Description IMarkdownRewriteEngine Explicit Interface Implementations | Improve this Doc View Source IDisposable.Dispose() Declaration void IDisposable.Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenValidatorFactory.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownTokenValidatorFactory.html",
    "title": "Class MarkdownTokenValidatorFactory | DocFX website",
    "keywords": "Class MarkdownTokenValidatorFactory Inheritance Object MarkdownTokenValidatorFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class MarkdownTokenValidatorFactory Methods | Improve this Doc View Source FromLambda<TToken>(Action<TToken>) Declaration public static IMarkdownTokenValidator FromLambda<TToken>(Action<TToken> validator)where TToken : class, IMarkdownToken Parameters Type Name Description Action <TToken> validator Returns Type Description IMarkdownTokenValidator Type Parameters Name Description TToken | Improve this Doc View Source FromLambda<TToken>(Action<TToken>, Action<IMarkdownRewriteEngine>) Declaration public static IMarkdownTokenValidator FromLambda<TToken>(Action<TToken> validator, Action<IMarkdownRewriteEngine> initializer)where TToken : class, IMarkdownToken Parameters Type Name Description Action <TToken> validator Action < IMarkdownRewriteEngine > initializer Returns Type Description IMarkdownTokenValidator Type Parameters Name Description TToken"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Options.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Options.html",
    "title": "Class Options | DocFX website",
    "keywords": "Class Options Inheritance Object Options Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class Options Constructors | Improve this Doc View Source Options() Declaration public Options() Properties | Improve this Doc View Source Breaks Declaration public bool Breaks { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Gfm Declaration public bool Gfm { get; set; } Property Value Type Description Boolean | Improve this Doc View Source HeaderPrefix Declaration public string HeaderPrefix { get; set; } Property Value Type Description String | Improve this Doc View Source Highlight Declaration public Func<string, string, string> Highlight { get; set; } Property Value Type Description Func < String , String , String > | Improve this Doc View Source LangPrefix Declaration public string LangPrefix { get; set; } Property Value Type Description String | Improve this Doc View Source Mangle Declaration public bool Mangle { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Pedantic Declaration public bool Pedantic { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Sanitize Declaration public bool Sanitize { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Sanitizer Declaration public Func<string, string> Sanitizer { get; set; } Property Value Type Description Func < String , String > | Improve this Doc View Source ShouldExportSourceInfo Declaration public bool ShouldExportSourceInfo { get; set; } Property Value Type Description Boolean | Improve this Doc View Source SmartLists Declaration public bool SmartLists { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Smartypants Declaration public bool Smartypants { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Tables Declaration public bool Tables { get; set; } Property Value Type Description Boolean | Improve this Doc View Source XHtml Declaration public bool XHtml { get; set; } Property Value Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockToken.html",
    "title": "Class DfmVideoBlockToken | DocFX website",
    "keywords": "Class DfmVideoBlockToken Inheritance Object DfmVideoBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmVideoBlockToken : IMarkdownToken, IDfmBlockSpecialSplitToken Constructors | Improve this Doc View Source DfmVideoBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public DfmVideoBlockToken(IMarkdownRule rule, IMarkdownContext context, string link, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String link SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Link Declaration public string Link { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmXrefAutoLinkInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmXrefAutoLinkInlineRule.html",
    "title": "Class DfmXrefAutoLinkInlineRule | DocFX website",
    "keywords": "Class DfmXrefAutoLinkInlineRule Xref auto link syntax: &lt;xref:uid&gt; &lt;xref:\"uid with space\"&gt; Inheritance Object DfmXrefAutoLinkInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmXrefAutoLinkInlineRule : IMarkdownRule Fields | Improve this Doc View Source XrefAutoLinkRegexString Declaration public static readonly string XrefAutoLinkRegexString Field Value Type Description String | Improve this Doc View Source XrefAutoLinkRegexWithQuoteString Declaration public static readonly string XrefAutoLinkRegexWithQuoteString Field Value Type Description String Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmXrefInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmXrefInlineToken.html",
    "title": "Class DfmXrefInlineToken | DocFX website",
    "keywords": "Class DfmXrefInlineToken Inheritance Object DfmXrefInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmXrefInlineToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<DfmXrefInlineToken> Constructors | Improve this Doc View Source DfmXrefInlineToken(IMarkdownRule, IMarkdownContext, String, ImmutableArray<IMarkdownToken>, String, Boolean, SourceInfo) Declaration public DfmXrefInlineToken(IMarkdownRule rule, IMarkdownContext context, string href, ImmutableArray<IMarkdownToken> content, string title, bool throwIfNotResolved, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String href System.Collections.Immutable.ImmutableArray < IMarkdownToken > content String title Boolean throwIfNotResolved SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Href Declaration public string Href { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source ThrowIfNotResolved Declaration public bool ThrowIfNotResolved { get; } Property Value Type Description Boolean | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public DfmXrefInlineToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description DfmXrefInlineToken Implements IMarkdownRewritable<DfmXrefInlineToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmXrefShortcutInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmXrefShortcutInlineRule.html",
    "title": "Class DfmXrefShortcutInlineRule | DocFX website",
    "keywords": "Class DfmXrefShortcutInlineRule XREF regex: 1. If content after `@` is wrapped by `'` or `\"`, it contains any character including white space 2. If content after `@` is not wrapped by `'` or `\"`, It must start with word character `a-z` or `A-Z` It ends when a. line ends b. meets whitespaces c. line ends with `.`, `,`, `;`, `:`, `!`, `?` and `~` d. meets 2 times or more `.`, `,`, `;`, `:`, `!`, `?` and `~` Inheritance Object DfmXrefShortcutInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmXrefShortcutInlineRule : IMarkdownRule Fields | Improve this Doc View Source XrefShortcutRegexString Declaration public static readonly string XrefShortcutRegexString Field Value Type Description String | Improve this Doc View Source XrefShortcutRegexWithQuoteString Declaration public static readonly string XrefShortcutRegexWithQuoteString Field Value Type Description String Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockRule.html",
    "title": "Class DfmYamlHeaderBlockRule | DocFX website",
    "keywords": "Class DfmYamlHeaderBlockRule Inheritance Object DfmYamlHeaderBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmYamlHeaderBlockRule : IMarkdownRule Fields | Improve this Doc View Source _yamlHeaderRegex Declaration public static readonly Regex _yamlHeaderRegex Field Value Type Description Regex Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source YamlHeader Declaration public virtual Regex YamlHeader { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockToken.html",
    "title": "Class DfmYamlHeaderBlockToken | DocFX website",
    "keywords": "Class DfmYamlHeaderBlockToken Inheritance Object DfmYamlHeaderBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmYamlHeaderBlockToken : IMarkdownToken Constructors | Improve this Doc View Source DfmYamlHeaderBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public DfmYamlHeaderBlockToken(IMarkdownRule rule, IMarkdownContext context, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DocfxFlavoredMarked.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DocfxFlavoredMarked.html",
    "title": "Class DocfxFlavoredMarked | DocFX website",
    "keywords": "Class DocfxFlavoredMarked Inheritance Object DocfxFlavoredMarked Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DocfxFlavoredMarked Methods | Improve this Doc View Source CreateBuilder(String) Declaration public static DfmEngineBuilder CreateBuilder(string baseDir) Parameters Type Name Description String baseDir Returns Type Description DfmEngineBuilder | Improve this Doc View Source CreateBuilder(String, String) Declaration public static DfmEngineBuilder CreateBuilder(string baseDir, string templateDir) Parameters Type Name Description String baseDir String templateDir Returns Type Description DfmEngineBuilder | Improve this Doc View Source Markup(String, String, ImmutableDictionary<String, String>, HashSet<String>) Declaration public static string Markup(string src, string path = null, ImmutableDictionary<string, string> tokens = null, HashSet<string> dependency = null) Parameters Type Name Description String src String path System.Collections.Immutable.ImmutableDictionary < String , String > tokens HashSet < String > dependency Returns Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.FileCacheLite.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.FileCacheLite.html",
    "title": "Class FileCacheLite | DocFX website",
    "keywords": "Class FileCacheLite Inheritance Object FileCacheLite Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class FileCacheLite : IDisposable Constructors | Improve this Doc View Source FileCacheLite(IEqualityComparer<String>) Declaration public FileCacheLite(IEqualityComparer<string> keyComparer) Parameters Type Name Description IEqualityComparer < String > keyComparer Fields | Improve this Doc View Source Default Declaration public static readonly FileCacheLite Default Field Value Type Description FileCacheLite Methods | Improve this Doc View Source Add(String, String) Declaration public void Add(string key, string value) Parameters Type Name Description String key String value | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Get(String) Declaration public string Get(string key) Parameters Type Name Description String key Returns Type Description String | Improve this Doc View Source Remove(String) Declaration public bool Remove(string key) Parameters Type Name Description String key Returns Type Description Boolean | Improve this Doc View Source TryGet(String, out String) Declaration public bool TryGet(string key, out string value) Parameters Type Name Description String key String value Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.FlatNameCodeSnippetExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.FlatNameCodeSnippetExtractor.html",
    "title": "Class FlatNameCodeSnippetExtractor | DocFX website",
    "keywords": "Class FlatNameCodeSnippetExtractor Flat name extrator works for snippet name exists in both start and end line representations E.g., comment representation needs snippet name exists in both start and end line comment Inheritance Object CodeSnippetRegexExtractor FlatNameCodeSnippetExtractor Inherited Members CodeSnippetRegexExtractor.GetAll(String[]) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class FlatNameCodeSnippetExtractor : CodeSnippetRegexExtractor, ICodeSnippetExtractor Constructors | Improve this Doc View Source FlatNameCodeSnippetExtractor(Regex, Regex) Declaration public FlatNameCodeSnippetExtractor(Regex startLineRegex, Regex endLineRegex) Parameters Type Name Description Regex startLineRegex Regex endLineRegex Methods | Improve this Doc View Source ResolveCodeSnippetTags(String[]) Declaration protected override List<CodeSnippetTag> ResolveCodeSnippetTags(string[] lines) Parameters Type Name Description String [] lines Returns Type Description List < CodeSnippetTag > Overrides CodeSnippetRegexExtractor.ResolveCodeSnippetTags(String[]) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.FullFileBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.FullFileBlockPathQueryOption.html",
    "title": "Class FullFileBlockPathQueryOption | DocFX website",
    "keywords": "Class FullFileBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption FullFileBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class FullFileBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Methods | Improve this Doc View Source GetQueryLines(String[]) Declaration public override IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[]) | Improve this Doc View Source ValidateAndPrepare(String[], DfmFencesBlockToken) Declaration public override bool ValidateAndPrepare(string[] lines, DfmFencesBlockToken token) Parameters Type Name Description String [] lines DfmFencesBlockToken token Returns Type Description Boolean Overrides DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesBlockToken) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.ICodeSnippetExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.ICodeSnippetExtractor.html",
    "title": "Interface ICodeSnippetExtractor | DocFX website",
    "keywords": "Interface ICodeSnippetExtractor Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public interface ICodeSnippetExtractor Methods | Improve this Doc View Source GetAll(String[]) Declaration Dictionary<string, DfmTagNameResolveResult> GetAll(string[] lines) Parameters Type Name Description String [] lines Returns Type Description Dictionary < String , DfmTagNameResolveResult > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmBlockSpecialSplitToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmBlockSpecialSplitToken.html",
    "title": "Interface IDfmBlockSpecialSplitToken | DocFX website",
    "keywords": "Interface IDfmBlockSpecialSplitToken Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmBlockSpecialSplitToken Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmFencesBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmFencesBlockPathQueryOption.html",
    "title": "Interface IDfmFencesBlockPathQueryOption | DocFX website",
    "keywords": "Interface IDfmFencesBlockPathQueryOption Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmFencesBlockPathQueryOption Properties | Improve this Doc View Source DedentLength Declaration int ? DedentLength { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source ErrorMessage Declaration string ErrorMessage { get; } Property Value Type Description String | Improve this Doc View Source HighlightLines Declaration string HighlightLines { get; set; } Property Value Type Description String Methods | Improve this Doc View Source GetQueryLines(String[]) Declaration IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > | Improve this Doc View Source ValidateAndPrepare(String[], DfmFencesBlockToken) Declaration bool ValidateAndPrepare(string[] lines, DfmFencesBlockToken token) Parameters Type Name Description String [] lines DfmFencesBlockToken token Returns Type Description Boolean | Improve this Doc View Source ValidateHighlightLinesAndDedentLength(Int32) Declaration bool ValidateHighlightLinesAndDedentLength(int totalLines) Parameters Type Name Description Int32 totalLines Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.LineRangeBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.LineRangeBlockPathQueryOption.html",
    "title": "Class LineRangeBlockPathQueryOption | DocFX website",
    "keywords": "Class LineRangeBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption LineRangeBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class LineRangeBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Properties | Improve this Doc View Source EndLine Declaration public int ? EndLine { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source StartLine Declaration public int ? StartLine { get; set; } Property Value Type Description Nullable < Int32 > Methods | Improve this Doc View Source GetQueryLines(String[]) Declaration public override IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[]) | Improve this Doc View Source ValidateAndPrepare(String[], DfmFencesBlockToken) Declaration public override bool ValidateAndPrepare(string[] lines, DfmFencesBlockToken token) Parameters Type Name Description String [] lines DfmFencesBlockToken token Returns Type Description Boolean Overrides DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesBlockToken) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownMetadataValidationRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownMetadataValidationRule.html",
    "title": "Class MarkdownMetadataValidationRule | DocFX website",
    "keywords": "Class MarkdownMetadataValidationRule Inheritance Object MarkdownMetadataValidationRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownMetadataValidationRule Properties | Improve this Doc View Source ContractName The contract name of rule. Declaration [JsonProperty(\"contractName\", Required = Required.Always)] public string ContractName { get; set; } Property Value Type Description String | Improve this Doc View Source Disable Whether to disable this rule by default. Declaration [JsonProperty(\"disable\")] public bool Disable { get; set; } Property Value Type Description Boolean Operators | Improve this Doc View Source Explicit(String to MarkdownMetadataValidationRule) Declaration public static explicit operator MarkdownMetadataValidationRule(string contractName) Parameters Type Name Description String contractName Returns Type Description MarkdownMetadataValidationRule Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownSytleConfig.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownSytleConfig.html",
    "title": "Class MarkdownSytleConfig | DocFX website",
    "keywords": "Class MarkdownSytleConfig Inheritance Object MarkdownSytleConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownSytleConfig Fields | Improve this Doc View Source MarkdownStyleFileName Declaration public const string MarkdownStyleFileName = \"md.style\" Field Value Type Description String Properties | Improve this Doc View Source MetadataRules Declaration [JsonProperty(\"metadataRules\")] public MarkdownMetadataValidationRule[] MetadataRules { get; set; } Property Value Type Description MarkdownMetadataValidationRule [] | Improve this Doc View Source Rules Declaration [JsonProperty(\"rules\")] public MarkdownValidationRule[] Rules { get; set; } Property Value Type Description MarkdownValidationRule [] | Improve this Doc View Source Settings Declaration [JsonProperty(\"settings\")] public MarkdownValidationSetting[] Settings { get; set; } Property Value Type Description MarkdownValidationSetting [] | Improve this Doc View Source TagRules Declaration [JsonProperty(\"tagRules\")] public MarkdownTagValidationRule[] TagRules { get; set; } Property Value Type Description MarkdownTagValidationRule [] Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownSytleDefinition.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownSytleDefinition.html",
    "title": "Class MarkdownSytleDefinition | DocFX website",
    "keywords": "Class MarkdownSytleDefinition Inheritance Object MarkdownSytleDefinition Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownSytleDefinition Fields | Improve this Doc View Source MarkdownStyleDefinitionFilePostfix Declaration public const string MarkdownStyleDefinitionFilePostfix = \".md.style\" Field Value Type Description String | Improve this Doc View Source MarkdownStyleDefinitionFolderName Declaration public const string MarkdownStyleDefinitionFolderName = \"md.styles\" Field Value Type Description String Properties | Improve this Doc View Source MetadataRules Declaration [JsonProperty(\"metadataRules\")] public Dictionary<string, MarkdownMetadataValidationRule> MetadataRules { get; set; } Property Value Type Description Dictionary < String , MarkdownMetadataValidationRule > | Improve this Doc View Source Rules Declaration [JsonProperty(\"rules\")] public Dictionary<string, MarkdownValidationRule> Rules { get; set; } Property Value Type Description Dictionary < String , MarkdownValidationRule > | Improve this Doc View Source TagRules Declaration [JsonProperty(\"tagRules\")] public Dictionary<string, MarkdownTagValidationRule> TagRules { get; set; } Property Value Type Description Dictionary < String , MarkdownTagValidationRule > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownTagValidationRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownTagValidationRule.html",
    "title": "Class MarkdownTagValidationRule | DocFX website",
    "keywords": "Class MarkdownTagValidationRule Inheritance Object MarkdownTagValidationRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownTagValidationRule Properties | Improve this Doc View Source Behavior Define tag's behavior. Declaration [JsonProperty(\"behavior\", Required = Required.Always)] public TagValidationBehavior Behavior { get; set; } Property Value Type Description TagValidationBehavior | Improve this Doc View Source CustomValidatorContractName The contract name for custom validator ICustomMarkdownTagValidator . Declaration [JsonProperty(\"customValidatorContractName\")] public string CustomValidatorContractName { get; set; } Property Value Type Description String | Improve this Doc View Source Disable Whether to disable this rule by default. Declaration [JsonProperty(\"disable\")] public bool Disable { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MessageFormatter The message formatter for warning and error. '{0}' is name of tag, '{1}' is the full tag. Declaration [JsonProperty(\"messageFormatter\", Required = Required.Always)] public string MessageFormatter { get; set; } Property Value Type Description String | Improve this Doc View Source OpeningTagOnly Only validate opening tag. Declaration [JsonProperty(\"openingTagOnly\")] public bool OpeningTagOnly { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Relation The relation for tags. Declaration [JsonProperty(\"relation\")] public TagRelation Relation { get; set; } Property Value Type Description TagRelation | Improve this Doc View Source TagNames The names of tag. Declaration [JsonProperty(\"tagNames\", Required = Required.Always)] public List<string> TagNames { get; set; } Property Value Type Description List < String > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidationRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidationRule.html",
    "title": "Class MarkdownValidationRule | DocFX website",
    "keywords": "Class MarkdownValidationRule Inheritance Object MarkdownValidationRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownValidationRule Properties | Improve this Doc View Source ContractName The contract name of rule. Declaration [JsonProperty(\"contractName\")] public string ContractName { get; set; } Property Value Type Description String | Improve this Doc View Source Disable Whether to disable this rule by default. Declaration [JsonProperty(\"disable\")] public bool Disable { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RuleName The contract name of rule. Declaration [Obsolete(\"Please use ContractName.\")] [JsonProperty(\"name\")] public string RuleName { get; set; } Property Value Type Description String Operators | Improve this Doc View Source Explicit(String to MarkdownValidationRule) Declaration public static explicit operator MarkdownValidationRule(string contractName) Parameters Type Name Description String contractName Returns Type Description MarkdownValidationRule Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidationSetting.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidationSetting.html",
    "title": "Class MarkdownValidationSetting | DocFX website",
    "keywords": "Class MarkdownValidationSetting Inheritance Object MarkdownValidationSetting Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownValidationSetting Properties | Improve this Doc View Source Category The category of rule Declaration [JsonProperty(\"category\", Required = Required.Always)] public string Category { get; set; } Property Value Type Description String | Improve this Doc View Source Disable Whether to disable this rule by default. Declaration [JsonProperty(\"disable\")] public bool Disable { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Id The id of rule. Declaration [JsonProperty(\"id\")] public string Id { get; set; } Property Value Type Description String Operators | Improve this Doc View Source Explicit(String to MarkdownValidationSetting) Declaration public static explicit operator MarkdownValidationSetting(string category) Parameters Type Name Description String category Returns Type Description MarkdownValidationSetting Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidatorBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidatorBuilder.html",
    "title": "Class MarkdownValidatorBuilder | DocFX website",
    "keywords": "Class MarkdownValidatorBuilder Inheritance Object MarkdownValidatorBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownValidatorBuilder Constructors | Improve this Doc View Source MarkdownValidatorBuilder(CompositionHost) Declaration public MarkdownValidatorBuilder(CompositionHost host) Parameters Type Name Description System.Composition.Hosting.CompositionHost host Fields | Improve this Doc View Source DefaultValidatorName Declaration public const string DefaultValidatorName = \"default\" Field Value Type Description String | Improve this Doc View Source MarkdownValidatePhaseName Declaration public const string MarkdownValidatePhaseName = \"Markdown style\" Field Value Type Description String Properties | Improve this Doc View Source CompositionHost Declaration public CompositionHost CompositionHost { get; } Property Value Type Description System.Composition.Hosting.CompositionHost Methods | Improve this Doc View Source AddMetadataValidators(MarkdownMetadataValidationRule[]) Declaration public void AddMetadataValidators(MarkdownMetadataValidationRule[] rules) Parameters Type Name Description MarkdownMetadataValidationRule [] rules | Improve this Doc View Source AddMetadataValidators(String, Dictionary<String, MarkdownMetadataValidationRule>) Declaration public void AddMetadataValidators(string category, Dictionary<string, MarkdownMetadataValidationRule> validators) Parameters Type Name Description String category Dictionary < String , MarkdownMetadataValidationRule > validators | Improve this Doc View Source AddSettings(MarkdownValidationSetting[]) Declaration public void AddSettings(MarkdownValidationSetting[] settings) Parameters Type Name Description MarkdownValidationSetting [] settings | Improve this Doc View Source AddTagValidators(MarkdownTagValidationRule[]) Declaration public void AddTagValidators(MarkdownTagValidationRule[] validators) Parameters Type Name Description MarkdownTagValidationRule [] validators | Improve this Doc View Source AddTagValidators(String, Dictionary<String, MarkdownTagValidationRule>) Declaration public void AddTagValidators(string category, Dictionary<string, MarkdownTagValidationRule> validators) Parameters Type Name Description String category Dictionary < String , MarkdownTagValidationRule > validators | Improve this Doc View Source AddValidators(MarkdownValidationRule[]) Declaration public void AddValidators(MarkdownValidationRule[] rules) Parameters Type Name Description MarkdownValidationRule [] rules | Improve this Doc View Source AddValidators(String, Dictionary<String, MarkdownValidationRule>) Declaration public void AddValidators(string category, Dictionary<string, MarkdownValidationRule> validators) Parameters Type Name Description String category Dictionary < String , MarkdownValidationRule > validators | Improve this Doc View Source Create(CompositionHost, String, String) Declaration public static MarkdownValidatorBuilder Create(CompositionHost host, string baseDir, string templateDir) Parameters Type Name Description System.Composition.Hosting.CompositionHost host String baseDir String templateDir Returns Type Description MarkdownValidatorBuilder | Improve this Doc View Source CreateRewriter() Declaration public IMarkdownTokenRewriter CreateRewriter() Returns Type Description IMarkdownTokenRewriter | Improve this Doc View Source EnsureDefaultValidator() Declaration public void EnsureDefaultValidator() | Improve this Doc View Source GetEnabledMetadataRules() Declaration public IEnumerable<IInputMetadataValidator> GetEnabledMetadataRules() Returns Type Description IEnumerable < IInputMetadataValidator > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.TagRelation.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.TagRelation.html",
    "title": "Enum TagRelation | DocFX website",
    "keywords": "Enum TagRelation Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public enum TagRelation Fields Name Description In NotIn Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.TagValidationBehavior.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.TagValidationBehavior.html",
    "title": "Enum TagValidationBehavior | DocFX website",
    "keywords": "Enum TagValidationBehavior Namespace :Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public enum TagValidationBehavior Fields Name Description Error None Warning Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.html",
    "title": "Namespace Microsoft.DocAsCode.Dfm.MarkdownValidators | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Dfm.MarkdownValidators Classes MarkdownMetadataValidationRule MarkdownSytleConfig MarkdownSytleDefinition MarkdownTagValidationRule MarkdownValidationRule MarkdownValidationSetting MarkdownValidatorBuilder Enums TagRelation TagValidationBehavior"
  },
  "api/Microsoft.DocAsCode.Dfm.MultipleLineRangeBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MultipleLineRangeBlockPathQueryOption.html",
    "title": "Class MultipleLineRangeBlockPathQueryOption | DocFX website",
    "keywords": "Class MultipleLineRangeBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption MultipleLineRangeBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class MultipleLineRangeBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Properties | Improve this Doc View Source LinePairs Declaration public List<Tuple<int ? , int ? >> LinePairs { get; set; } Property Value Type Description List < Tuple < Nullable < Int32 >, Nullable < Int32 >>> Methods | Improve this Doc View Source GetQueryLines(String[]) Declaration public override IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[]) | Improve this Doc View Source ValidateAndPrepare(String[], DfmFencesBlockToken) Declaration public override bool ValidateAndPrepare(string[] lines, DfmFencesBlockToken token) Parameters Type Name Description String [] lines DfmFencesBlockToken token Returns Type Description Boolean Overrides DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesBlockToken) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.RecursiveNameCodeSnippetExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.RecursiveNameCodeSnippetExtractor.html",
    "title": "Class RecursiveNameCodeSnippetExtractor | DocFX website",
    "keywords": "Class RecursiveNameCodeSnippetExtractor Recursive name extrator works for snippet name only exists in start line representation E.g., C# region representation only has snippet name in start line representation Inheritance Object CodeSnippetRegexExtractor RecursiveNameCodeSnippetExtractor Inherited Members CodeSnippetRegexExtractor.GetAll(String[]) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class RecursiveNameCodeSnippetExtractor : CodeSnippetRegexExtractor, ICodeSnippetExtractor Constructors | Improve this Doc View Source RecursiveNameCodeSnippetExtractor(Regex, Regex) Declaration public RecursiveNameCodeSnippetExtractor(Regex startLineRegex, Regex endLineRegex) Parameters Type Name Description Regex startLineRegex Regex endLineRegex Methods | Improve this Doc View Source ResolveCodeSnippetTags(String[]) Declaration protected override List<CodeSnippetTag> ResolveCodeSnippetTags(string[] lines) Parameters Type Name Description String [] lines Returns Type Description List < CodeSnippetTag > Overrides CodeSnippetRegexExtractor.ResolveCodeSnippetTags(String[]) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.SplitToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.SplitToken.html",
    "title": "Class SplitToken | DocFX website",
    "keywords": "Class SplitToken Inheritance Object SplitToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class SplitToken Constructors | Improve this Doc View Source SplitToken(IMarkdownToken) Declaration public SplitToken(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Properties | Improve this Doc View Source InnerTokens Declaration public List<IMarkdownToken> InnerTokens { get; set; } Property Value Type Description List < IMarkdownToken > | Improve this Doc View Source Token Declaration public IMarkdownToken Token { get; set; } Property Value Type Description IMarkdownToken Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.TagNameBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.TagNameBlockPathQueryOption.html",
    "title": "Class TagNameBlockPathQueryOption | DocFX website",
    "keywords": "Class TagNameBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption TagNameBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class TagNameBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Properties | Improve this Doc View Source TagName Declaration public string TagName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source GetQueryLines(String[]) Declaration public override IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[]) | Improve this Doc View Source ValidateAndPrepare(String[], DfmFencesBlockToken) Declaration public override bool ValidateAndPrepare(string[] lines, DfmFencesBlockToken token) Parameters Type Name Description String [] lines DfmFencesBlockToken token Returns Type Description Boolean Overrides DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesBlockToken) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.html",
    "title": "Namespace Microsoft.DocAsCode.Dfm | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Dfm Classes CodeSnippetRegexExtractor CodeSnippetTag DfmBlockquoteBlockRule DfmBlockquoteHelper DfmCodeExtractorHelper DfmContextExtensions DfmEmailInlineRule DfmEngine DfmEngineBuilder DfmFencesBlockHelper DfmFencesBlockPathQueryOption DfmFencesBlockRule DfmFencesBlockToken DfmIncludeBlockRule DfmIncludeBlockToken DfmIncludeInlineRule DfmIncludeInlineToken DfmMarkdownRenderer DfmNoteBlockRule DfmNoteBlockToken DfmParagraphBlockRule DfmRenderer DfmSectionBlockRule DfmSectionBlockToken DfmTagNameResolveResult DfmTextInlineRule DfmVideoBlockRule DfmVideoBlockToken DfmXrefAutoLinkInlineRule Xref auto link syntax: &lt;xref:uid&gt; &lt;xref:\"uid with space\"&gt; DfmXrefInlineToken DfmXrefShortcutInlineRule XREF regex: 1. If content after `@` is wrapped by `'` or `\"`, it contains any character including white space 2. If content after `@` is not wrapped by `'` or `\"`, It must start with word character `a-z` or `A-Z` It ends when a. line ends b. meets whitespaces c. line ends with `.`, `,`, `;`, `:`, `!`, `?` and `~` d. meets 2 times or more `.`, `,`, `;`, `:`, `!`, `?` and `~` DfmYamlHeaderBlockRule DfmYamlHeaderBlockToken DocfxFlavoredMarked FileCacheLite FlatNameCodeSnippetExtractor Flat name extrator works for snippet name exists in both start and end line representations E.g., comment representation needs snippet name exists in both start and end line comment FullFileBlockPathQueryOption LineRangeBlockPathQueryOption MultipleLineRangeBlockPathQueryOption RecursiveNameCodeSnippetExtractor Recursive name extrator works for snippet name only exists in start line representation E.g., C# region representation only has snippet name in start line representation SplitToken TagNameBlockPathQueryOption Interfaces ICodeSnippetExtractor IDfmBlockSpecialSplitToken IDfmFencesBlockPathQueryOption Enums CodeSnippetTagType"
  },
  "api/Microsoft.DocAsCode.Exceptions.DocfxException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.DocfxException.html",
    "title": "Class DocfxException | DocFX website",
    "keywords": "Class DocfxException Inheritance Object Exception DocfxException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :Microsoft.DocAsCode.Common.dll Syntax [Serializable] public class DocfxException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DocfxException() Declaration public DocfxException() | Improve this Doc View Source DocfxException(SerializationInfo, StreamingContext) Declaration protected DocfxException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source DocfxException(String) Declaration public DocfxException(string message) Parameters Type Name Description String message | Improve this Doc View Source DocfxException(String, Exception) Declaration public DocfxException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.DocfxInitException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.DocfxInitException.html",
    "title": "Class DocfxInitException | DocFX website",
    "keywords": "Class DocfxInitException Inheritance Object Exception DocfxInitException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :docfx.dll Syntax public class DocfxInitException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DocfxInitException() Declaration public DocfxInitException() | Improve this Doc View Source DocfxInitException(SerializationInfo, StreamingContext) Declaration protected DocfxInitException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source DocfxInitException(String) Declaration public DocfxInitException(string message) Parameters Type Name Description String message | Improve this Doc View Source DocfxInitException(String, Exception) Declaration public DocfxInitException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.DocfxMetadataException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.DocfxMetadataException.html",
    "title": "Class DocfxMetadataException | DocFX website",
    "keywords": "Class DocfxMetadataException Inheritance Object Exception DocfxMetadataException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :docfx.dll Syntax public class DocfxMetadataException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DocfxMetadataException() Declaration public DocfxMetadataException() | Improve this Doc View Source DocfxMetadataException(SerializationInfo, StreamingContext) Declaration protected DocfxMetadataException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source DocfxMetadataException(String) Declaration public DocfxMetadataException(string message) Parameters Type Name Description String message | Improve this Doc View Source DocfxMetadataException(String, Exception) Declaration public DocfxMetadataException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.ExtractMetadataException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.ExtractMetadataException.html",
    "title": "Class ExtractMetadataException | DocFX website",
    "keywords": "Class ExtractMetadataException Inheritance Object Exception DocfxException ExtractMetadataException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class ExtractMetadataException : DocfxException, ISerializable, _Exception Constructors | Improve this Doc View Source ExtractMetadataException() Declaration public ExtractMetadataException() | Improve this Doc View Source ExtractMetadataException(SerializationInfo, StreamingContext) Declaration protected ExtractMetadataException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source ExtractMetadataException(String) Declaration public ExtractMetadataException(string message) Parameters Type Name Description String message | Improve this Doc View Source ExtractMetadataException(String, Exception) Declaration public ExtractMetadataException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.InvalidOptionException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.InvalidOptionException.html",
    "title": "Class InvalidOptionException | DocFX website",
    "keywords": "Class InvalidOptionException Inheritance Object Exception SystemException ArgumentException InvalidOptionException Inherited Members ArgumentException.GetObjectData(SerializationInfo, StreamingContext) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :docfx.dll Syntax public class InvalidOptionException : ArgumentException, _Exception, ISerializable Constructors | Improve this Doc View Source InvalidOptionException() Declaration public InvalidOptionException() | Improve this Doc View Source InvalidOptionException(SerializationInfo, StreamingContext) Declaration protected InvalidOptionException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source InvalidOptionException(String) Declaration public InvalidOptionException(string message) Parameters Type Name Description String message | Improve this Doc View Source InvalidOptionException(String, Exception) Declaration public InvalidOptionException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException | Improve this Doc View Source InvalidOptionException(String, String) Declaration public InvalidOptionException(string message, string paramName) Parameters Type Name Description String message String paramName | Improve this Doc View Source InvalidOptionException(String, String, Exception) Declaration public InvalidOptionException(string message, string paramName, Exception innerException) Parameters Type Name Description String message String paramName Exception innerException Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.PluginDirectoryAlreadyExistsException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.PluginDirectoryAlreadyExistsException.html",
    "title": "Class PluginDirectoryAlreadyExistsException | DocFX website",
    "keywords": "Class PluginDirectoryAlreadyExistsException Inheritance Object Exception DocfxException PluginException PluginDirectoryAlreadyExistsException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :docfx.dll Syntax [Serializable] public class PluginDirectoryAlreadyExistsException : PluginException, ISerializable, _Exception Constructors | Improve this Doc View Source PluginDirectoryAlreadyExistsException(SerializationInfo, StreamingContext) Declaration protected PluginDirectoryAlreadyExistsException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source PluginDirectoryAlreadyExistsException(String) Declaration public PluginDirectoryAlreadyExistsException(string directoryName) Parameters Type Name Description String directoryName Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.PluginException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.PluginException.html",
    "title": "Class PluginException | DocFX website",
    "keywords": "Class PluginException Inheritance Object Exception DocfxException PluginException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Exceptions Assembly :docfx.dll Syntax [Serializable] public class PluginException : DocfxException, ISerializable, _Exception Constructors | Improve this Doc View Source PluginException() Declaration public PluginException() | Improve this Doc View Source PluginException(SerializationInfo, StreamingContext) Declaration protected PluginException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source PluginException(String) Declaration public PluginException(string message) Parameters Type Name Description String message Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Exceptions.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.html",
    "title": "Namespace Microsoft.DocAsCode.Exceptions | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Exceptions Classes DocfxException DocfxInitException DocfxMetadataException ExtractMetadataException InvalidOptionException PluginDirectoryAlreadyExistsException PluginException"
  },
  "api/Microsoft.DocAsCode.FileItems.html": {
    "href": "api/Microsoft.DocAsCode.FileItems.html",
    "title": "Class FileItems | DocFX website",
    "keywords": "Class FileItems Inheritance Object List < String > FileItems Inherited Members System.Collections.Generic.List<System.String>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.String>.System.Collections.IList.set_Item(System.Int32, System.Object) List<String>.Add(String) System.Collections.Generic.List<System.String>.System.Collections.IList.Add(System.Object) List<String>.AddRange(IEnumerable<String>) List<String>.AsReadOnly() List<String>.BinarySearch(Int32, Int32, String, IComparer<String>) List<String>.BinarySearch(String) List<String>.BinarySearch(String, IComparer<String>) List<String>.Clear() List<String>.Contains(String) System.Collections.Generic.List<System.String>.System.Collections.IList.Contains(System.Object) List<String>.ConvertAll<TOutput>(Converter<String, TOutput>) List<String>.CopyTo(String[]) System.Collections.Generic.List<System.String>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) List<String>.CopyTo(Int32, String[], Int32, Int32) List<String>.CopyTo(String[], Int32) List<String>.Exists(Predicate<String>) List<String>.Find(Predicate<String>) List<String>.FindAll(Predicate<String>) List<String>.FindIndex(Predicate<String>) List<String>.FindIndex(Int32, Predicate<String>) List<String>.FindIndex(Int32, Int32, Predicate<String>) List<String>.FindLast(Predicate<String>) List<String>.FindLastIndex(Predicate<String>) List<String>.FindLastIndex(Int32, Predicate<String>) List<String>.FindLastIndex(Int32, Int32, Predicate<String>) List<String>.ForEach(Action<String>) List<String>.GetEnumerator() System.Collections.Generic.List<System.String>.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator() System.Collections.Generic.List<System.String>.System.Collections.IEnumerable.GetEnumerator() List<String>.GetRange(Int32, Int32) List<String>.IndexOf(String) System.Collections.Generic.List<System.String>.System.Collections.IList.IndexOf(System.Object) List<String>.IndexOf(String, Int32) List<String>.IndexOf(String, Int32, Int32) List<String>.Insert(Int32, String) System.Collections.Generic.List<System.String>.System.Collections.IList.Insert(System.Int32, System.Object) List<String>.InsertRange(Int32, IEnumerable<String>) List<String>.LastIndexOf(String) List<String>.LastIndexOf(String, Int32) List<String>.LastIndexOf(String, Int32, Int32) List<String>.Remove(String) System.Collections.Generic.List<System.String>.System.Collections.IList.Remove(System.Object) List<String>.RemoveAll(Predicate<String>) List<String>.RemoveAt(Int32) List<String>.RemoveRange(Int32, Int32) List<String>.Reverse() List<String>.Reverse(Int32, Int32) List<String>.Sort() List<String>.Sort(IComparer<String>) List<String>.Sort(Int32, Int32, IComparer<String>) List<String>.Sort(Comparison<String>) List<String>.ToArray() List<String>.TrimExcess() List<String>.TrueForAll(Predicate<String>) List<String>.Capacity List<String>.Count System.Collections.Generic.List<System.String>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<System.String>.System.Collections.Generic.ICollection<System.String>.IsReadOnly System.Collections.Generic.List<System.String>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<System.String>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<System.String>.System.Collections.ICollection.SyncRoot List<String>.Item[Int32] System.Collections.Generic.List<System.String>.System.Collections.IList.Item[System.Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] public class FileItems : List<string>, IList<string>, ICollection<string>, IList, ICollection, IReadOnlyList<string>, IReadOnlyCollection<string>, IEnumerable<string>, IEnumerable Constructors | Improve this Doc View Source FileItems(IEnumerable<String>) Declaration public FileItems(IEnumerable<string> files) Parameters Type Name Description IEnumerable < String > files | Improve this Doc View Source FileItems(String) Declaration public FileItems(string file) Parameters Type Name Description String file Operators | Improve this Doc View Source Explicit(String to FileItems) Declaration public static explicit operator FileItems(string input) Parameters Type Name Description String input Returns Type Description FileItems Extension Methods DocumentExceptionExtensions.RunAll<String, TResult>(Func<String, TResult>) DocumentExceptionExtensions.RunAll<String>(Action<String>) DocumentExceptionExtensions.RunAll<String>(Action<String>, Int32) CollectionExtensions.Merge<Char, TResult>(IComparer<Char>, Func<List<Char>, TResult>) PathUtility.CopyFilesToFolder(String, String, Boolean, Action<String>, Func<String, Boolean>) StringExtension.ToDelimitedString(String) StringExtension.GetNormalizedFullPathKey() StringExtension.GetNormalizedFullPathList() StringExtension.GetNormalizedPathList() TaskHelper.ForEachInParallelAsync<String>(Func<String, Task>, Int32) TaskHelper.ForEachInParallelAsync<String>(Func<String, Task>) TaskHelper.SelectInParallelAsync<String, TResult>(Func<String, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<String, TResult>(Func<String, Task<TResult>>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.FileMapping.html": {
    "href": "api/Microsoft.DocAsCode.FileMapping.html",
    "title": "Class FileMapping | DocFX website",
    "keywords": "Class FileMapping FileMapping supports two forms: Array form This form supports multiple file mappings, and also allows additional properties per mapping. e.g. \"key\": [ {\"files\": [\"file1\", \"file2\"], \"dest\": \"dest1\"}, {\"files\": \"file3\", \"dest\": \"dest2\"}, {\"files\": [\"file4\", \"file5\"], \"exclude\": [\"file5\"], \"src\": \"folder1\"}, {\"files\": \"Example.yml\", \"src\": \"v1.0\", \"dest\":\"v1.0/api\", \"version\": \"v1.0\"}, {\"files\": \"Example.yml\", \"src\": \"v2.0\", \"dest\":\"v2.0/api\", \"version\": \"v2.0\"} ] Compact form This form supports multiple file patterns in an array e.g. projects: [\"file1\", \"file2\"] Inheritance Object FileMapping Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [JsonConverter(typeof (FileMappingConverter))] [Serializable] public class FileMapping Constructors | Improve this Doc View Source FileMapping() Declaration public FileMapping() | Improve this Doc View Source FileMapping(FileMappingItem) Declaration public FileMapping(FileMappingItem item) Parameters Type Name Description FileMappingItem item | Improve this Doc View Source FileMapping(IEnumerable<FileMappingItem>) Declaration public FileMapping(IEnumerable<FileMappingItem> items) Parameters Type Name Description IEnumerable < FileMappingItem > items Properties | Improve this Doc View Source Expanded Declaration public bool Expanded { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Items Declaration public IReadOnlyList<FileMappingItem> Items { get; } Property Value Type Description IReadOnlyList < FileMappingItem > Methods | Improve this Doc View Source Add(FileMappingItem) Should not merge FileMappingItems even if they are using the same name, because other propertes also matters, e.g. cwd, exclude. Declaration public void Add(FileMappingItem item) Parameters Type Name Description FileMappingItem item Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.FileMappingConverter.html": {
    "href": "api/Microsoft.DocAsCode.FileMappingConverter.html",
    "title": "Class FileMappingConverter | DocFX website",
    "keywords": "Class FileMappingConverter Inheritance Object Newtonsoft.Json.JsonConverter FileMappingConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class FileMappingConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.FileMappingItem.html": {
    "href": "api/Microsoft.DocAsCode.FileMappingItem.html",
    "title": "Class FileMappingItem | DocFX website",
    "keywords": "Class FileMappingItem Data model for a file-mapping item Inheritance Object FileMappingItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] public class FileMappingItem Constructors | Improve this Doc View Source FileMappingItem() Declaration public FileMappingItem() | Improve this Doc View Source FileMappingItem(String[]) Declaration public FileMappingItem(params string[] files) Parameters Type Name Description String [] files Properties | Improve this Doc View Source AllowDotMatch Allow files start with . to be matched even if . is not explicitly specified in the pattern. By default files start with . will not be matched by * unless the pattern starts with . . Declaration [JsonProperty(\"dot\")] public bool ? AllowDotMatch { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source CaseSensitive Pattern match will be case sensitive. By default the pattern is case insensitive Declaration [JsonProperty(\"case\")] public bool ? CaseSensitive { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source CurrentWorkingDirectory cwd defines the root folder for the source files, it has the same meaning as src As discussed, cwd may lead to confusing and misunderstanding, so in version 1.3, src is introduced and cwd is kept for backward compatibility Declaration [JsonProperty(\"cwd\")] [Obsolete] public string CurrentWorkingDirectory { get; set; } Property Value Type Description String | Improve this Doc View Source DestinationFolder The destination folder for the files if copy/transform is used Declaration [JsonProperty(\"dest\")] public string DestinationFolder { get; set; } Property Value Type Description String | Improve this Doc View Source DisableEscape Disable the usage of \\ to escape values. By default the usage is enabled. Declaration [JsonProperty(\"noEscape\")] public bool ? DisableEscape { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source DisableExpand Disable {a,b}c => [\"ac\", \"bc\"] . By default the usage is enabled. Declaration [JsonProperty(\"noExpand\")] public bool ? DisableExpand { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source DisableGlobStar Disable the usage of ** to match everything including / when it is the beginning of the pattern or is after / . By default the usage is enable. Declaration [JsonProperty(\"noGlobStar\")] public bool ? DisableGlobStar { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source DisableNegate Disable pattern begin with ! to mean negate By default the usage is enabled. Declaration [JsonProperty(\"noNegate\")] public bool ? DisableNegate { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Exclude The file glob pattern collection for files that should be excluded, with path relative to property src / cwd is value is set Declaration [JsonProperty(\"exclude\")] public FileItems Exclude { get; set; } Property Value Type Description FileItems | Improve this Doc View Source Files The file glob pattern collection, with path relative to property src / cwd is value is set Declaration [JsonProperty(\"files\")] public FileItems Files { get; set; } Property Value Type Description FileItems | Improve this Doc View Source Name The name of current item, the value is not used for now Declaration [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source SourceFolder src defines the root folder for the source files, it has the same meaning as cwd Declaration [JsonProperty(\"src\")] public string SourceFolder { get; set; } Property Value Type Description String | Improve this Doc View Source VersionName Version name for the current file-mapping item. If not set, treat the current file-mapping item as in default version. Mappings with the same version name will be built together. Cross reference doesn't support cross different versions. Declaration [JsonProperty(\"version\")] public string VersionName { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.FileMetadataPairs.html": {
    "href": "api/Microsoft.DocAsCode.FileMetadataPairs.html",
    "title": "Class FileMetadataPairs | DocFX website",
    "keywords": "Class FileMetadataPairs Inheritance Object FileMetadataPairs Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] [JsonConverter(typeof (FileMetadataPairsConverter))] public class FileMetadataPairs Constructors | Improve this Doc View Source FileMetadataPairs(FileMetadataPairsItem) Declaration public FileMetadataPairs(FileMetadataPairsItem item) Parameters Type Name Description FileMetadataPairsItem item | Improve this Doc View Source FileMetadataPairs(List<FileMetadataPairsItem>) Declaration public FileMetadataPairs(List<FileMetadataPairsItem> items) Parameters Type Name Description List < FileMetadataPairsItem > items Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public FileMetadataPairsItem this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description FileMetadataPairsItem | Improve this Doc View Source Items Declaration public IReadOnlyList<FileMetadataPairsItem> Items { get; } Property Value Type Description IReadOnlyList < FileMetadataPairsItem > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.FileMetadataPairsConverter.html": {
    "href": "api/Microsoft.DocAsCode.FileMetadataPairsConverter.html",
    "title": "Class FileMetadataPairsConverter | DocFX website",
    "keywords": "Class FileMetadataPairsConverter Inheritance Object Newtonsoft.Json.JsonConverter FileMetadataPairsConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class FileMetadataPairsConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.FileMetadataPairsItem.html": {
    "href": "api/Microsoft.DocAsCode.FileMetadataPairsItem.html",
    "title": "Class FileMetadataPairsItem | DocFX website",
    "keywords": "Class FileMetadataPairsItem Inheritance Object FileMetadataPairsItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] public class FileMetadataPairsItem Constructors | Improve this Doc View Source FileMetadataPairsItem(String, Object) Declaration public FileMetadataPairsItem(string pattern, object value) Parameters Type Name Description String pattern Object value Properties | Improve this Doc View Source Glob Declaration public GlobMatcher Glob { get; } Property Value Type Description GlobMatcher | Improve this Doc View Source Value JObject, no need to transform it to object as the metadata value will not be used but only to be serialized Declaration public object Value { get; } Property Value Type Description Object Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Glob.FileGlob.html": {
    "href": "api/Microsoft.DocAsCode.Glob.FileGlob.html",
    "title": "Class FileGlob | DocFX website",
    "keywords": "Class FileGlob Inheritance Object FileGlob Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Glob Assembly :Microsoft.DocAsCode.Glob.dll Syntax public class FileGlob Methods | Improve this Doc View Source GetFiles(String, IEnumerable<String>, IEnumerable<String>, GlobMatcherOptions) Declaration public static IEnumerable<string> GetFiles(string cwd, IEnumerable<string> patterns, IEnumerable<string> excludePatterns, GlobMatcherOptions options = GlobMatcherOptions.IgnoreCase | GlobMatcherOptions.AllowNegate | GlobMatcherOptions.AllowExpand | GlobMatcherOptions.AllowEscape | GlobMatcherOptions.AllowGlobStar) Parameters Type Name Description String cwd IEnumerable < String > patterns IEnumerable < String > excludePatterns GlobMatcherOptions options Returns Type Description IEnumerable < String > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Glob.GlobMatcher.html": {
    "href": "api/Microsoft.DocAsCode.Glob.GlobMatcher.html",
    "title": "Class GlobMatcher | DocFX website",
    "keywords": "Class GlobMatcher Inheritance Object GlobMatcher Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Glob Assembly :Microsoft.DocAsCode.Glob.dll Syntax [Serializable] public class GlobMatcher Constructors | Improve this Doc View Source GlobMatcher(String, GlobMatcherOptions) Declaration public GlobMatcher(string pattern, GlobMatcherOptions options = GlobMatcherOptions.IgnoreCase | GlobMatcherOptions.AllowNegate | GlobMatcherOptions.AllowExpand | GlobMatcherOptions.AllowEscape | GlobMatcherOptions.AllowGlobStar) Parameters Type Name Description String pattern GlobMatcherOptions options Fields | Improve this Doc View Source DefaultOptions Declaration public const GlobMatcherOptions DefaultOptions = GlobMatcherOptions.IgnoreCase | GlobMatcherOptions.AllowNegate | GlobMatcherOptions.AllowExpand | GlobMatcherOptions.AllowEscape | GlobMatcherOptions.AllowGlobStar Field Value Type Description GlobMatcherOptions Properties | Improve this Doc View Source Options Declaration public GlobMatcherOptions Options { get; } Property Value Type Description GlobMatcherOptions | Improve this Doc View Source Raw Declaration public string Raw { get; } Property Value Type Description String Methods | Improve this Doc View Source GetRegex() Currently not used TODO: add test case Declaration public Regex GetRegex() Returns Type Description Regex | Improve this Doc View Source Match(String, Boolean) Declaration public bool Match(string file, bool partial = false) Parameters Type Name Description String file Boolean partial Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Glob.GlobMatcherOptions.html": {
    "href": "api/Microsoft.DocAsCode.Glob.GlobMatcherOptions.html",
    "title": "Enum GlobMatcherOptions | DocFX website",
    "keywords": "Enum GlobMatcherOptions Namespace :Microsoft.DocAsCode.Glob Assembly :Microsoft.DocAsCode.Glob.dll Syntax [Flags] public enum GlobMatcherOptions Fields Name Description AllowDotMatch Allow patterns to match filenames starting with a period even if the pattern does not explicitly have a period. By default disabled: a/ /b will **not match a/.c/d, unless AllowDotMatch is set AllowEscape AllowExpand AllowGlobStar AllowNegate IgnoreCase None Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Glob.html": {
    "href": "api/Microsoft.DocAsCode.Glob.html",
    "title": "Namespace Microsoft.DocAsCode.Glob | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Glob Classes FileGlob GlobMatcher Enums GlobMatcherOptions"
  },
  "api/Microsoft.DocAsCode.ListWithStringFallback.html": {
    "href": "api/Microsoft.DocAsCode.ListWithStringFallback.html",
    "title": "Class ListWithStringFallback | DocFX website",
    "keywords": "Class ListWithStringFallback Inheritance Object List < String > ListWithStringFallback Inherited Members System.Collections.Generic.List<System.String>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.String>.System.Collections.IList.set_Item(System.Int32, System.Object) List<String>.Add(String) System.Collections.Generic.List<System.String>.System.Collections.IList.Add(System.Object) List<String>.AddRange(IEnumerable<String>) List<String>.AsReadOnly() List<String>.BinarySearch(Int32, Int32, String, IComparer<String>) List<String>.BinarySearch(String) List<String>.BinarySearch(String, IComparer<String>) List<String>.Clear() List<String>.Contains(String) System.Collections.Generic.List<System.String>.System.Collections.IList.Contains(System.Object) List<String>.ConvertAll<TOutput>(Converter<String, TOutput>) List<String>.CopyTo(String[]) System.Collections.Generic.List<System.String>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) List<String>.CopyTo(Int32, String[], Int32, Int32) List<String>.CopyTo(String[], Int32) List<String>.Exists(Predicate<String>) List<String>.Find(Predicate<String>) List<String>.FindAll(Predicate<String>) List<String>.FindIndex(Predicate<String>) List<String>.FindIndex(Int32, Predicate<String>) List<String>.FindIndex(Int32, Int32, Predicate<String>) List<String>.FindLast(Predicate<String>) List<String>.FindLastIndex(Predicate<String>) List<String>.FindLastIndex(Int32, Predicate<String>) List<String>.FindLastIndex(Int32, Int32, Predicate<String>) List<String>.ForEach(Action<String>) List<String>.GetEnumerator() System.Collections.Generic.List<System.String>.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator() System.Collections.Generic.List<System.String>.System.Collections.IEnumerable.GetEnumerator() List<String>.GetRange(Int32, Int32) List<String>.IndexOf(String) System.Collections.Generic.List<System.String>.System.Collections.IList.IndexOf(System.Object) List<String>.IndexOf(String, Int32) List<String>.IndexOf(String, Int32, Int32) List<String>.Insert(Int32, String) System.Collections.Generic.List<System.String>.System.Collections.IList.Insert(System.Int32, System.Object) List<String>.InsertRange(Int32, IEnumerable<String>) List<String>.LastIndexOf(String) List<String>.LastIndexOf(String, Int32) List<String>.LastIndexOf(String, Int32, Int32) List<String>.Remove(String) System.Collections.Generic.List<System.String>.System.Collections.IList.Remove(System.Object) List<String>.RemoveAll(Predicate<String>) List<String>.RemoveAt(Int32) List<String>.RemoveRange(Int32, Int32) List<String>.Reverse() List<String>.Reverse(Int32, Int32) List<String>.Sort() List<String>.Sort(IComparer<String>) List<String>.Sort(Int32, Int32, IComparer<String>) List<String>.Sort(Comparison<String>) List<String>.ToArray() List<String>.TrimExcess() List<String>.TrueForAll(Predicate<String>) List<String>.Capacity List<String>.Count System.Collections.Generic.List<System.String>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<System.String>.System.Collections.Generic.ICollection<System.String>.IsReadOnly System.Collections.Generic.List<System.String>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<System.String>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<System.String>.System.Collections.ICollection.SyncRoot List<String>.Item[Int32] System.Collections.Generic.List<System.String>.System.Collections.IList.Item[System.Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [JsonConverter(typeof (ListWithStringFallbackConverter))] [Serializable] public class ListWithStringFallback : List<string>, IList<string>, ICollection<string>, IList, ICollection, IReadOnlyList<string>, IReadOnlyCollection<string>, IEnumerable<string>, IEnumerable Constructors | Improve this Doc View Source ListWithStringFallback() Declaration public ListWithStringFallback() | Improve this Doc View Source ListWithStringFallback(IEnumerable<String>) Declaration public ListWithStringFallback(IEnumerable<string> list) Parameters Type Name Description IEnumerable < String > list Extension Methods DocumentExceptionExtensions.RunAll<String, TResult>(Func<String, TResult>) DocumentExceptionExtensions.RunAll<String>(Action<String>) DocumentExceptionExtensions.RunAll<String>(Action<String>, Int32) CollectionExtensions.Merge<Char, TResult>(IComparer<Char>, Func<List<Char>, TResult>) PathUtility.CopyFilesToFolder(String, String, Boolean, Action<String>, Func<String, Boolean>) StringExtension.ToDelimitedString(String) StringExtension.GetNormalizedFullPathKey() StringExtension.GetNormalizedFullPathList() StringExtension.GetNormalizedPathList() TaskHelper.ForEachInParallelAsync<String>(Func<String, Task>, Int32) TaskHelper.ForEachInParallelAsync<String>(Func<String, Task>) TaskHelper.SelectInParallelAsync<String, TResult>(Func<String, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<String, TResult>(Func<String, Task<TResult>>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.ListWithStringFallbackConverter.html": {
    "href": "api/Microsoft.DocAsCode.ListWithStringFallbackConverter.html",
    "title": "Class ListWithStringFallbackConverter | DocFX website",
    "keywords": "Class ListWithStringFallbackConverter Inheritance Object Newtonsoft.Json.JsonConverter ListWithStringFallbackConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class ListWithStringFallbackConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.Align.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.Align.html",
    "title": "Enum Align | DocFX website",
    "keywords": "Enum Align Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public enum Align Fields Name Description Center Left NotSpec Right Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmDelInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmDelInlineRule.html",
    "title": "Class GfmDelInlineRule | DocFX website",
    "keywords": "Class GfmDelInlineRule Inheritance Object GfmDelInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmDelInlineRule : IMarkdownRule Properties | Improve this Doc View Source Del Declaration public virtual Regex Del { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmDelInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmDelInlineToken.html",
    "title": "Class GfmDelInlineToken | DocFX website",
    "keywords": "Class GfmDelInlineToken Inheritance Object GfmDelInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmDelInlineToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<GfmDelInlineToken> Constructors | Improve this Doc View Source GfmDelInlineToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public GfmDelInlineToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public GfmDelInlineToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description GfmDelInlineToken Implements IMarkdownRewritable<GfmDelInlineToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmEmInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmEmInlineRule.html",
    "title": "Class GfmEmInlineRule | DocFX website",
    "keywords": "Class GfmEmInlineRule Inheritance Object MarkdownEmInlineRule GfmEmInlineRule Inherited Members MarkdownEmInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmEmInlineRule : MarkdownEmInlineRule, IMarkdownRule Properties | Improve this Doc View Source Em Declaration public override Regex Em { get; } Property Value Type Description Regex Overrides MarkdownEmInlineRule.Em | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownEmInlineRule.Name Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmEmojiInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmEmojiInlineRule.html",
    "title": "Class GfmEmojiInlineRule | DocFX website",
    "keywords": "Class GfmEmojiInlineRule Inheritance Object GfmEmojiInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmEmojiInlineRule : IMarkdownRule Properties | Improve this Doc View Source Emoji Declaration public virtual Regex Emoji { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source GetEmoji(String) Declaration protected virtual string GetEmoji(string shortCode) Parameters Type Name Description String shortCode Returns Type Description String | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmEmojiInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmEmojiInlineToken.html",
    "title": "Class GfmEmojiInlineToken | DocFX website",
    "keywords": "Class GfmEmojiInlineToken Inheritance Object GfmEmojiInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmEmojiInlineToken : IMarkdownToken Constructors | Improve this Doc View Source GfmEmojiInlineToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public GfmEmojiInlineToken(IMarkdownRule rule, IMarkdownContext context, string shortCode, string emoji, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String shortCode String emoji SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Emoji Declaration public string Emoji { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source ShortCode Declaration public string ShortCode { get; } Property Value Type Description String | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmEngineBuilder.html",
    "title": "Class GfmEngineBuilder | DocFX website",
    "keywords": "Class GfmEngineBuilder Inheritance Object MarkdownEngineBuilder GfmEngineBuilder Inherited Members MarkdownEngineBuilder.Options MarkdownEngineBuilder.BlockRules MarkdownEngineBuilder.InlineRules MarkdownEngineBuilder.Rewriter MarkdownEngineBuilder.TokenTreeValidator MarkdownEngineBuilder.CreateParseContext() MarkdownEngineBuilder.CreateEngine(Object) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmEngineBuilder : MarkdownEngineBuilder Constructors | Improve this Doc View Source GfmEngineBuilder(Options) Declaration public GfmEngineBuilder(Options options) Parameters Type Name Description Options options Methods | Improve this Doc View Source BuildBlockRules() Declaration protected virtual void BuildBlockRules() | Improve this Doc View Source BuildInlineRules() Declaration protected virtual void BuildInlineRules() | Improve this Doc View Source BuildRules() Declaration protected virtual void BuildRules() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmEscapeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmEscapeInlineRule.html",
    "title": "Class GfmEscapeInlineRule | DocFX website",
    "keywords": "Class GfmEscapeInlineRule Inheritance Object MarkdownEscapeInlineRule GfmEscapeInlineRule Inherited Members MarkdownEscapeInlineRule.Name MarkdownEscapeInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmEscapeInlineRule : MarkdownEscapeInlineRule, IMarkdownRule Properties | Improve this Doc View Source Escape Declaration public override Regex Escape { get; } Property Value Type Description Regex Overrides MarkdownEscapeInlineRule.Escape Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmFencesBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmFencesBlockRule.html",
    "title": "Class GfmFencesBlockRule | DocFX website",
    "keywords": "Class GfmFencesBlockRule Inheritance Object GfmFencesBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmFencesBlockRule : IMarkdownRule Properties | Improve this Doc View Source Fences Declaration public virtual Regex Fences { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmHeadingBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmHeadingBlockRule.html",
    "title": "Class GfmHeadingBlockRule | DocFX website",
    "keywords": "Class GfmHeadingBlockRule Inheritance Object MarkdownHeadingBlockRule GfmHeadingBlockRule Inherited Members MarkdownHeadingBlockRule.Name MarkdownHeadingBlockRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmHeadingBlockRule : MarkdownHeadingBlockRule, IMarkdownRule Properties | Improve this Doc View Source Heading Declaration public override Regex Heading { get; } Property Value Type Description Regex Overrides MarkdownHeadingBlockRule.Heading Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmHtmlCommentBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmHtmlCommentBlockRule.html",
    "title": "Class GfmHtmlCommentBlockRule | DocFX website",
    "keywords": "Class GfmHtmlCommentBlockRule Inheritance Object GfmHtmlCommentBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmHtmlCommentBlockRule : IMarkdownRule Properties | Improve this Doc View Source HtmlComment Declaration public virtual Regex HtmlComment { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmParagraphBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmParagraphBlockRule.html",
    "title": "Class GfmParagraphBlockRule | DocFX website",
    "keywords": "Class GfmParagraphBlockRule Inheritance Object MarkdownParagraphBlockRule GfmParagraphBlockRule Inherited Members MarkdownParagraphBlockRule.Name MarkdownParagraphBlockRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmParagraphBlockRule : MarkdownParagraphBlockRule, IMarkdownRule Properties | Improve this Doc View Source Paragraph Declaration public override Regex Paragraph { get; } Property Value Type Description Regex Overrides MarkdownParagraphBlockRule.Paragraph Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmStrongEmInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmStrongEmInlineRule.html",
    "title": "Class GfmStrongEmInlineRule | DocFX website",
    "keywords": "Class GfmStrongEmInlineRule Inheritance Object GfmStrongEmInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmStrongEmInlineRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source StrongEm Declaration public virtual Regex StrongEm { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmStrongInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmStrongInlineRule.html",
    "title": "Class GfmStrongInlineRule | DocFX website",
    "keywords": "Class GfmStrongInlineRule Inheritance Object MarkdownStrongInlineRule GfmStrongInlineRule Inherited Members MarkdownStrongInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmStrongInlineRule : MarkdownStrongInlineRule, IMarkdownRule Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownStrongInlineRule.Name | Improve this Doc View Source Strong Declaration public override Regex Strong { get; } Property Value Type Description Regex Overrides MarkdownStrongInlineRule.Strong Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmTextInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmTextInlineRule.html",
    "title": "Class GfmTextInlineRule | DocFX website",
    "keywords": "Class GfmTextInlineRule Inheritance Object MarkdownTextInlineRule GfmTextInlineRule Inherited Members MarkdownTextInlineRule.Name MarkdownTextInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) MarkdownTextInlineRule.Smartypants(Options, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmTextInlineRule : MarkdownTextInlineRule, IMarkdownRule Properties | Improve this Doc View Source Text Declaration public override Regex Text { get; } Property Value Type Description Regex Overrides MarkdownTextInlineRule.Text Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.GfmUrlInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.GfmUrlInlineRule.html",
    "title": "Class GfmUrlInlineRule | DocFX website",
    "keywords": "Class GfmUrlInlineRule Inheritance Object GfmUrlInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class GfmUrlInlineRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source Url Declaration public virtual Regex Url { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.HtmlRenderer.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.HtmlRenderer.html",
    "title": "Class HtmlRenderer | DocFX website",
    "keywords": "Class HtmlRenderer The html renderer for gfm. Inheritance Object HtmlRenderer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class HtmlRenderer Methods | Improve this Doc View Source AppendSourceInfo(StringBuffer, IMarkdownRenderer, IMarkdownToken) Declaration protected static StringBuffer AppendSourceInfo(StringBuffer result, IMarkdownRenderer renderer, IMarkdownToken token) Parameters Type Name Description StringBuffer result IMarkdownRenderer renderer IMarkdownToken token Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, GfmDelInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer GfmDelInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, GfmEmojiInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, GfmEmojiInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer GfmEmojiInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownBrInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownBrInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBrInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownCodeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownCodeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownCodeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownCodeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownCodeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownCodeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownEmInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownEmInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownEscapeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownEscapeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownEscapeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHeadingBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHeadingBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHrBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHrBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHtmlBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHtmlBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownIgnoreToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownIgnoreToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownIgnoreToken token IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownImageInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownImageInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownLinkInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownLinkInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownListBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownListBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownListItemBlockToken) Declaration protected virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownListItemBlockToken token) Parameters Type Name Description IMarkdownRenderer renderer MarkdownListItemBlockToken token Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownNewLineBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownNewLineBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownNewLineBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownNonParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownNonParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownRawToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownRawToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownRawToken token IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownStrongInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownStrongInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTableBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTableBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownTagInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTagInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTagInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownTextToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTextToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTextToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownTextToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTextToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTextToken token MarkdownInlineContext context Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IInitializable.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IInitializable.html",
    "title": "Interface IInitializable | DocFX website",
    "keywords": "Interface IInitializable Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IInitializable Methods | Improve this Doc View Source Initialize(IMarkdownRewriteEngine) Declaration void Initialize(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownContext.html",
    "title": "Interface IMarkdownContext | DocFX website",
    "keywords": "Interface IMarkdownContext The context for markdown parser. It should be immutable. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownContext Properties | Improve this Doc View Source Rules Get the rule set for current context. Declaration ImmutableList<IMarkdownRule> Rules { get; } Property Value Type Description System.Collections.Immutable.ImmutableList < IMarkdownRule > | Improve this Doc View Source Variables Get the variables. Declaration ImmutableDictionary<string, object> Variables { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Methods | Improve this Doc View Source CreateContext(ImmutableDictionary<String, Object>) Create a new context with different variables. Declaration IMarkdownContext CreateContext(ImmutableDictionary<string, object> variables) Parameters Type Name Description System.Collections.Immutable.ImmutableDictionary < String , Object > variables The new variables. Returns Type Description IMarkdownContext a new instance of IMarkdownContext Extension Methods DfmContextExtensions.GetFilePathStack() DfmContextExtensions.SetFilePathStack(ImmutableStack<String>) DfmContextExtensions.GetBaseFolder() DfmContextExtensions.SetBaseFolder(String) DfmContextExtensions.SetDependency(HashSet<String>) DfmContextExtensions.ReportDependency(String) DfmContextExtensions.ReportDependency(IEnumerable<String>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownEngine.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownEngine.html",
    "title": "Interface IMarkdownEngine | DocFX website",
    "keywords": "Interface IMarkdownEngine Markdown engine Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownEngine Properties | Improve this Doc View Source Parser Get the parser (it can read markdown text, then return markdown tokens). Declaration IMarkdownParser Parser { get; } Property Value Type Description IMarkdownParser | Improve this Doc View Source Renderer Get the renderer (it can read markdown token, then return text e.g. html). Declaration IMarkdownRenderer Renderer { get; } Property Value Type Description IMarkdownRenderer | Improve this Doc View Source RewriteEngine Get the rewriter (it can read markdown tokens, then rewrite them and return). Declaration IMarkdownRewriteEngine RewriteEngine { get; } Property Value Type Description IMarkdownRewriteEngine | Improve this Doc View Source TokenTreeValidator Get the token tree validator. Declaration IMarkdownTokenTreeValidator TokenTreeValidator { get; set; } Property Value Type Description IMarkdownTokenTreeValidator Methods | Improve this Doc View Source Mark(SourceInfo, IMarkdownContext) Mark markdown text. Declaration StringBuffer Mark(SourceInfo sourceInfo, IMarkdownContext context = null) Parameters Type Name Description SourceInfo sourceInfo The line info for markdown text. IMarkdownContext context The markdown context contains rules. Returns Type Description StringBuffer Rendered text. | Improve this Doc View Source Markup(String, String) Mark markdown text. Declaration string Markup(string markdown, string file = null) Parameters Type Name Description String markdown The markdown text. String file The file of markdown. Returns Type Description String Rendered text. Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownExpression.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownExpression.html",
    "title": "Interface IMarkdownExpression | DocFX website",
    "keywords": "Interface IMarkdownExpression Inherited Members IMarkdownToken.Rule IMarkdownToken.Context IMarkdownToken.SourceInfo Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownExpression : IMarkdownToken Methods | Improve this Doc View Source GetChildren() Declaration IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownParser.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownParser.html",
    "title": "Interface IMarkdownParser | DocFX website",
    "keywords": "Interface IMarkdownParser Markdown parser. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownParser Properties | Improve this Doc View Source Context Get the current markdown context. Declaration IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Links Get the No. links. Declaration Dictionary<string, LinkObj> Links { get; } Property Value Type Description Dictionary < String , LinkObj > | Improve this Doc View Source Options Get the Options . Declaration Options Options { get; } Property Value Type Description Options Methods | Improve this Doc View Source SwitchContext(IMarkdownContext) Switch the markdown context. Declaration IMarkdownContext SwitchContext(IMarkdownContext context) Parameters Type Name Description IMarkdownContext context New context. Returns Type Description IMarkdownContext The old context. | Improve this Doc View Source Tokenize(SourceInfo) Tokenize the markdown text. Declaration ImmutableArray<IMarkdownToken> Tokenize(SourceInfo sourceInfo) Parameters Type Name Description SourceInfo sourceInfo Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > A list of IMarkdownToken . Extension Methods MarkdownParserExtensions.SwitchContext(String, Object) MarkdownParserExtensions.SwitchContext(IReadOnlyDictionary<String, Object>) MarkdownParserExtensions.TokenizeInline(SourceInfo) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownParsingContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownParsingContext.html",
    "title": "Interface IMarkdownParsingContext | DocFX website",
    "keywords": "Interface IMarkdownParsingContext Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownParsingContext Properties | Improve this Doc View Source CurrentMarkdown Declaration string CurrentMarkdown { get; } Property Value Type Description String Methods | Improve this Doc View Source Consume(Int32) Declaration SourceInfo Consume(int charCount) Parameters Type Name Description Int32 charCount Returns Type Description SourceInfo Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRenderer.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRenderer.html",
    "title": "Interface IMarkdownRenderer | DocFX website",
    "keywords": "Interface IMarkdownRenderer Markdown renderer. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownRenderer Properties | Improve this Doc View Source Engine Get the markdown engine. Declaration IMarkdownEngine Engine { get; } Property Value Type Description IMarkdownEngine | Improve this Doc View Source Links Get the No. links. Declaration Dictionary<string, LinkObj> Links { get; } Property Value Type Description Dictionary < String , LinkObj > | Improve this Doc View Source Options Get the Options . Declaration Options Options { get; } Property Value Type Description Options Methods | Improve this Doc View Source Render(IMarkdownToken) Render a token. Declaration StringBuffer Render(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token The token to render. Returns Type Description StringBuffer The text. Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRewritable-1.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRewritable-1.html",
    "title": "Interface IMarkdownRewritable<T> | DocFX website",
    "keywords": "Interface IMarkdownRewritable<T> Markdown rewritable (for object contains IMarkdownToken ). Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownRewritable<out T> Type Parameters Name Description T The type of implement this interface. Methods | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Rewrite object with IMarkdownRewriteEngine Declaration T Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine The rewrite engine Returns Type Description T The rewritten object. Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRewriteEngine.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRewriteEngine.html",
    "title": "Interface IMarkdownRewriteEngine | DocFX website",
    "keywords": "Interface IMarkdownRewriteEngine Markdown rewrite engine. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownRewriteEngine Properties | Improve this Doc View Source Engine Get markdown engine. Declaration IMarkdownEngine Engine { get; } Property Value Type Description IMarkdownEngine Methods | Improve this Doc View Source Complete() Declaration void Complete() | Improve this Doc View Source GetParents() Declaration ImmutableArray<IMarkdownToken> GetParents() Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > | Improve this Doc View Source GetVariable(String) Declaration object GetVariable(string name) Parameters Type Name Description String name Returns Type Description Object | Improve this Doc View Source HasPostProcess(String) Declaration bool HasPostProcess(string name) Parameters Type Name Description String name Returns Type Description Boolean | Improve this Doc View Source HasVariable(String) Declaration bool HasVariable(string name) Parameters Type Name Description String name Returns Type Description Boolean | Improve this Doc View Source Initialize() Declaration void Initialize() | Improve this Doc View Source RemovePostProcess(String) Declaration void RemovePostProcess(string name) Parameters Type Name Description String name | Improve this Doc View Source RemoveVariable(String) Declaration void RemoveVariable(string name) Parameters Type Name Description String name | Improve this Doc View Source Rewrite(ImmutableArray<IMarkdownToken>) Rewrite markdown tokens. Declaration ImmutableArray<IMarkdownToken> Rewrite(ImmutableArray<IMarkdownToken> tokens) Parameters Type Name Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Source markdown tokens. Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Rewritten markdown tokens. | Improve this Doc View Source SetPostProcess(String, Action<IMarkdownRewriteEngine>) Declaration void SetPostProcess(string name, Action<IMarkdownRewriteEngine> action) Parameters Type Name Description String name Action < IMarkdownRewriteEngine > action | Improve this Doc View Source SetVariable(String, Object) Declaration void SetVariable(string name, object value) Parameters Type Name Description String name Object value Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownRule.html",
    "title": "Interface IMarkdownRule | DocFX website",
    "keywords": "Interface IMarkdownRule Markdown rule. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownRule Properties | Improve this Doc View Source Name Get the name of rule. Declaration string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Try match this rule. Declaration IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser The markdown parser. IMarkdownParsingContext context The context for parser, contains markdown text, line number and file. Returns Type Description IMarkdownToken If matched, an instance of IMarkdownToken should be return, otherwise null. Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.SourceInfo.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.SourceInfo.html",
    "title": "Struct SourceInfo | DocFX website",
    "keywords": "Struct SourceInfo Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public struct SourceInfo Properties | Improve this Doc View Source File Declaration public string File { get; } Property Value Type Description String | Improve this Doc View Source LineNumber Declaration public int LineNumber { get; } Property Value Type Description Int32 | Improve this Doc View Source Markdown Declaration public string Markdown { get; } Property Value Type Description String Methods | Improve this Doc View Source Copy(String, Int32) Declaration public SourceInfo Copy(string markdown, int lineOffset = 0) Parameters Type Name Description String markdown Int32 lineOffset Returns Type Description SourceInfo | Improve this Doc View Source Create(String, String, Int32) Declaration public static SourceInfo Create(string markdown, string file, int lineNumber = 1) Parameters Type Name Description String markdown String file Int32 lineNumber Returns Type Description SourceInfo Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.StringBuffer.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.StringBuffer.html",
    "title": "Class StringBuffer | DocFX website",
    "keywords": "Class StringBuffer A type like System.Text.StringBuilder but only do concat. Inheritance Object StringBuffer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public sealed class StringBuffer Fields | Improve this Doc View Source Empty An empty StringBuffer . Declaration public static readonly StringBuffer Empty Field Value Type Description StringBuffer Methods | Improve this Doc View Source Append(String) Declaration public StringBuffer Append(string str) Parameters Type Name Description String str Returns Type Description StringBuffer | Improve this Doc View Source Clone() Declaration public StringBuffer Clone() Returns Type Description StringBuffer | Improve this Doc View Source Concat(StringBuffer) Declaration public StringBuffer Concat(StringBuffer another) Parameters Type Name Description StringBuffer another Returns Type Description StringBuffer | Improve this Doc View Source EndsWith(Char) Declaration public bool EndsWith(char character) Parameters Type Name Description Char character Returns Type Description Boolean | Improve this Doc View Source EndsWith(String) Declaration public bool EndsWith(string text) Parameters Type Name Description String text Returns Type Description Boolean | Improve this Doc View Source GetLength() Declaration public int GetLength() Returns Type Description Int32 | Improve this Doc View Source StartsWith(Char) Declaration public bool StartsWith(char character) Parameters Type Name Description Char character Returns Type Description Boolean | Improve this Doc View Source StartsWith(String) Declaration public bool StartsWith(string text) Parameters Type Name Description String text Returns Type Description Boolean | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators | Improve this Doc View Source Addition(StringBuffer, StringBuffer) Declaration public static StringBuffer operator +(StringBuffer buffer, StringBuffer another) Parameters Type Name Description StringBuffer buffer StringBuffer another Returns Type Description StringBuffer | Improve this Doc View Source Addition(StringBuffer, String) Declaration public static StringBuffer operator +(StringBuffer buffer, string value) Parameters Type Name Description StringBuffer buffer String value Returns Type Description StringBuffer | Improve this Doc View Source Implicit(StringBuffer to String) Declaration public static implicit operator string (StringBuffer buffer) Parameters Type Name Description StringBuffer buffer Returns Type Description String | Improve this Doc View Source Implicit(String to StringBuffer) Declaration public static implicit operator StringBuffer(string value) Parameters Type Name Description String value Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.StringHelper.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.StringHelper.html",
    "title": "Class StringHelper | DocFX website",
    "keywords": "Class StringHelper Inheritance Object StringHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class StringHelper Methods | Improve this Doc View Source Apply(Regex, String, Int32) Declaration public static string[] Apply(this Regex regex, string src, int index = 0) Parameters Type Name Description Regex regex String src Int32 index Returns Type Description String [] | Improve this Doc View Source DecodeURIComponent(String) Declaration public static string DecodeURIComponent(string str) Parameters Type Name Description String str Returns Type Description String | Improve this Doc View Source Escape(String, Boolean) Declaration public static string Escape(string html, bool encode = false) Parameters Type Name Description String html Boolean encode Returns Type Description String | Improve this Doc View Source HtmlDecode(String) Declaration public static string HtmlDecode(string html) Parameters Type Name Description String html Returns Type Description String | Improve this Doc View Source HtmlEncode(String) Declaration public static string HtmlEncode(string html) Parameters Type Name Description String html Returns Type Description String | Improve this Doc View Source Match(String, Regex) Declaration public static string[] Match(this string src, Regex regex) Parameters Type Name Description String src Regex regex Returns Type Description String [] | Improve this Doc View Source NotEmpty(IList<String>, Int32, Int32) Declaration public static string NotEmpty(IList<string> source, int index1, int index2) Parameters Type Name Description IList < String > source Int32 index1 Int32 index2 Returns Type Description String | Improve this Doc View Source ReplaceRegex(String, Regex, String) Declaration public static string ReplaceRegex(this string input, Regex pattern, string replacement) Parameters Type Name Description String input Regex pattern String replacement Returns Type Description String | Improve this Doc View Source SplitRegex(String, Regex) Declaration public static string[] SplitRegex(this string input, Regex pattern) Parameters Type Name Description String input Regex pattern Returns Type Description String [] | Improve this Doc View Source Unescape(String) Declaration public static string Unescape(string html) Parameters Type Name Description String html Returns Type Description String"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.TokenHelper.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.TokenHelper.html",
    "title": "Class TokenHelper | DocFX website",
    "keywords": "Class TokenHelper Inheritance Object TokenHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class TokenHelper Methods | Improve this Doc View Source ParseInlineToken(IMarkdownParser, IMarkdownRule, ImmutableArray<IMarkdownToken>, Boolean, SourceInfo) Declaration public static ImmutableArray<IMarkdownToken> ParseInlineToken(IMarkdownParser parser, IMarkdownRule rule, ImmutableArray<IMarkdownToken> blockTokens, bool wrapParagraph, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownParser parser IMarkdownRule rule System.Collections.Immutable.ImmutableArray < IMarkdownToken > blockTokens Boolean wrapParagraph SourceInfo sourceInfo Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken >"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.TwoPhaseBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.TwoPhaseBlockToken.html",
    "title": "Class TwoPhaseBlockToken | DocFX website",
    "keywords": "Class TwoPhaseBlockToken Inheritance Object TwoPhaseBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public sealed class TwoPhaseBlockToken : IMarkdownToken Constructors | Improve this Doc View Source TwoPhaseBlockToken(IMarkdownRule, IMarkdownContext, SourceInfo, Func<IMarkdownParser, TwoPhaseBlockToken, IMarkdownToken>) Declaration public TwoPhaseBlockToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo, Func<IMarkdownParser, TwoPhaseBlockToken, IMarkdownToken> extractor) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Func < IMarkdownParser , TwoPhaseBlockToken , IMarkdownToken > extractor Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods | Improve this Doc View Source Extract(IMarkdownParser) Declaration public IMarkdownToken Extract(IMarkdownParser parser) Parameters Type Name Description IMarkdownParser parser Returns Type Description IMarkdownToken Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.html",
    "title": "Namespace Microsoft.DocAsCode.MarkdownLite | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.MarkdownLite Classes GfmDelInlineRule GfmDelInlineToken GfmEmInlineRule GfmEmojiInlineRule GfmEmojiInlineToken GfmEngineBuilder GfmEscapeInlineRule GfmFencesBlockRule GfmHeadingBlockRule GfmHtmlCommentBlockRule GfmParagraphBlockRule GfmStrongEmInlineRule GfmStrongInlineRule GfmTextInlineRule GfmUrlInlineRule HtmlRenderer The html renderer for gfm. InlineContent JsonTokenTreeRenderer LinkObj MarkdownAutoLinkInlineRule MarkdownBlockContext MarkdownBlockquoteBlockRule MarkdownBlockquoteBlockToken MarkdownBrInlineRule MarkdownBrInlineToken MarkdownCodeBlockRule MarkdownCodeBlockToken MarkdownCodeElementInlineRule MarkdownCodeInlineRule MarkdownCodeInlineToken MarkdownCommentInlineRule MarkdownDefBlockRule MarkdownEmInlineRule MarkdownEmInlineToken MarkdownEngine MarkdownEngineBuilder A builder for create an instance of IMarkdownEngine MarkdownEngineByOptionsBuilder MarkdownEscapedTextInlineRule MarkdownEscapeInlineRule MarkdownEscapeInlineToken MarkdownHeadingBlockRule MarkdownHeadingBlockToken MarkdownHrBlockRule MarkdownHrBlockToken MarkdownHtmlBlockRule MarkdownHtmlBlockToken MarkdownIgnoreToken MarkdownImageInlineToken MarkdownInlineContext MarkdownLHeadingBlockRule MarkdownLinkBaseInlineRule MarkdownLinkInlineRule MarkdownLinkInlineToken MarkdownListBlockRule MarkdownListBlockToken MarkdownListItemBlockToken MarkdownNewLineBlockRule MarkdownNewLineBlockToken MarkdownNoLinkInlineRule MarkdownNonParagraphBlockToken MarkdownNpTableBlockRule MarkdownParagraphBlockRule MarkdownParagraphBlockToken MarkdownParser MarkdownParserExtensions MarkdownParsingContext MarkdownRawToken MarkdownRefLinkInlineRule MarkdownRenderer MarkdownRendererAdapter The adapter for markdown renderer, use dynamic dispatch. MarkdownRewriteEngine MarkdownStrongInlineRule MarkdownStrongInlineToken MarkdownTableBlockRule MarkdownTableBlockToken MarkdownTableItemBlockToken MarkdownTagInlineRule MarkdownTagInlineToken MarkdownTextBlockRule MarkdownTextInlineRule MarkdownTextToken MarkdownTokenExtensions MarkdownTokenRewriterFactory MarkdownTokenTreeValidatorFactory MarkdownTokenValidatorContext MarkdownTokenValidatorFactory Options StringBuffer A type like System.Text.StringBuilder but only do concat. StringHelper TokenHelper TwoPhaseBlockToken Structs SourceInfo Interfaces IInitializable IMarkdownContext The context for markdown parser. It should be immutable. IMarkdownEngine Markdown engine IMarkdownExpression IMarkdownParser Markdown parser. IMarkdownParsingContext IMarkdownRenderer Markdown renderer. IMarkdownRewritable<T> Markdown rewritable (for object contains IMarkdownToken ). IMarkdownRewriteEngine Markdown rewrite engine. IMarkdownRule Markdown rule. IMarkdownToken The token for markdown. It should be immutable. IMarkdownTokenRewriter rewrite the markdown when rendering IMarkdownTokenTreeValidator IMarkdownTokenValidator IMarkdownTokenValidatorProvider Enums Align MarkdownLinkType"
  },
  "api/Microsoft.DocAsCode.MergeJsonConfig.html": {
    "href": "api/Microsoft.DocAsCode.MergeJsonConfig.html",
    "title": "Class MergeJsonConfig | DocFX website",
    "keywords": "Class MergeJsonConfig Inheritance Object MergeJsonConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [Serializable] public class MergeJsonConfig Properties | Improve this Doc View Source BaseDirectory Declaration [JsonIgnore] public string BaseDirectory { get; set; } Property Value Type Description String | Improve this Doc View Source Content Declaration [JsonProperty(\"content\")] public FileMapping Content { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source Destination Declaration [JsonProperty(\"dest\")] public string Destination { get; set; } Property Value Type Description String | Improve this Doc View Source FileMetadata Metadata that applies to some specific files. The key is the metadata name. For each item of the value: The key is the glob pattern to match the files. The value is the value of the metadata. Declaration [JsonProperty(\"fileMetadata\")] public Dictionary<string, FileMetadataPairs> FileMetadata { get; set; } Property Value Type Description Dictionary < String , FileMetadataPairs > | Improve this Doc View Source GlobalMetadata Declaration [JsonProperty(\"globalMetadata\")] [JsonConverter(typeof (JObjectDictionaryToObjectDictionaryConverter))] public Dictionary<string, object> GlobalMetadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source OutputFolder Declaration [JsonIgnore] public string OutputFolder { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.AttributeFilterInfo.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.AttributeFilterInfo.html",
    "title": "Class AttributeFilterInfo | DocFX website",
    "keywords": "Class AttributeFilterInfo Inheritance Object AttributeFilterInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class AttributeFilterInfo Properties | Improve this Doc View Source ConstructorArguments Declaration [YamlMember(Alias = \"ctorArguments\")] public List<string> ConstructorArguments { get; set; } Property Value Type Description List < String > | Improve this Doc View Source ConstructorNamedArguments Declaration [YamlMember(Alias = \"ctorNamedArguments\")] public Dictionary<string, string> ConstructorNamedArguments { get; set; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ContainedIn(ISymbol) Declaration public bool ContainedIn(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildMembers.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildMembers.html",
    "title": "Class BuildMembers | DocFX website",
    "keywords": "Class BuildMembers Inheritance Object BuildMembers Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class BuildMembers : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildToc.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildToc.html",
    "title": "Class BuildToc | DocFX website",
    "keywords": "Class BuildToc Inheritance Object BuildToc Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class BuildToc : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CachedFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CachedFilterVisitor.html",
    "title": "Class CachedFilterVisitor | DocFX website",
    "keywords": "Class CachedFilterVisitor Inheritance Object DelegatingFilterVisitor CachedFilterVisitor Inherited Members DelegatingFilterVisitor.Inner DelegatingFilterVisitor.CanVisitApi(ISymbol, Boolean, IFilterVisitor) DelegatingFilterVisitor.CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class CachedFilterVisitor : DelegatingFilterVisitor, IFilterVisitor Constructors | Improve this Doc View Source CachedFilterVisitor(IFilterVisitor) Declaration public CachedFilterVisitor(IFilterVisitor inner) Parameters Type Name Description IFilterVisitor inner Methods | Improve this Doc View Source CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitApiCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) | Improve this Doc View Source CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitAttributeCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Extension Methods FilterVisitorExtensions.WithConfig(String) FilterVisitorExtensions.WithConfig(ConfigFilterRule) FilterVisitorExtensions.WithCache() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CompositeYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CompositeYamlModelGenerator.html",
    "title": "Class CompositeYamlModelGenerator | DocFX website",
    "keywords": "Class CompositeYamlModelGenerator Inheritance Object YamlModelGenerator CompositeYamlModelGenerator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public sealed class CompositeYamlModelGenerator : YamlModelGenerator Constructors | Improve this Doc View Source CompositeYamlModelGenerator(SimpleYamlModelGenerator[]) Declaration public CompositeYamlModelGenerator(params SimpleYamlModelGenerator[] generators) Parameters Type Name Description SimpleYamlModelGenerator [] generators | Improve this Doc View Source CompositeYamlModelGenerator(IEnumerable<SimpleYamlModelGenerator>) Declaration public CompositeYamlModelGenerator(IEnumerable<SimpleYamlModelGenerator> generators) Parameters Type Name Description IEnumerable < SimpleYamlModelGenerator > generators Methods | Improve this Doc View Source DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Operators | Improve this Doc View Source Addition(CompositeYamlModelGenerator, SimpleYamlModelGenerator) Declaration public static CompositeYamlModelGenerator operator +(CompositeYamlModelGenerator left, SimpleYamlModelGenerator right) Parameters Type Name Description CompositeYamlModelGenerator left SimpleYamlModelGenerator right Returns Type Description CompositeYamlModelGenerator Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRule.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRule.html",
    "title": "Class ConfigFilterRule | DocFX website",
    "keywords": "Class ConfigFilterRule Inheritance Object ConfigFilterRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class ConfigFilterRule Properties | Improve this Doc View Source ApiRules Declaration [YamlMember(Alias = \"apiRules\")] public List<ConfigFilterRuleItemUnion> ApiRules { get; set; } Property Value Type Description List < ConfigFilterRuleItemUnion > | Improve this Doc View Source AttributeRules Declaration [YamlMember(Alias = \"attributeRules\")] public List<ConfigFilterRuleItemUnion> AttributeRules { get; set; } Property Value Type Description List < ConfigFilterRuleItemUnion > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleExcludeItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleExcludeItem.html",
    "title": "Class ConfigFilterRuleExcludeItem | DocFX website",
    "keywords": "Class ConfigFilterRuleExcludeItem Inheritance Object ConfigFilterRuleItem ConfigFilterRuleExcludeItem Inherited Members ConfigFilterRuleItem.UidRegex ConfigFilterRuleItem.Kind ConfigFilterRuleItem.Attribute ConfigFilterRuleItem.IsMatch(ISymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class ConfigFilterRuleExcludeItem : ConfigFilterRuleItem Properties | Improve this Doc View Source CanVisit Declaration [YamlIgnore] public override bool CanVisit { get; } Property Value Type Description Boolean Overrides ConfigFilterRuleItem.CanVisit Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleIncludeItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleIncludeItem.html",
    "title": "Class ConfigFilterRuleIncludeItem | DocFX website",
    "keywords": "Class ConfigFilterRuleIncludeItem Inheritance Object ConfigFilterRuleItem ConfigFilterRuleIncludeItem Inherited Members ConfigFilterRuleItem.UidRegex ConfigFilterRuleItem.Kind ConfigFilterRuleItem.Attribute ConfigFilterRuleItem.IsMatch(ISymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class ConfigFilterRuleIncludeItem : ConfigFilterRuleItem Properties | Improve this Doc View Source CanVisit Declaration [YamlIgnore] public override bool CanVisit { get; } Property Value Type Description Boolean Overrides ConfigFilterRuleItem.CanVisit Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItem.html",
    "title": "Class ConfigFilterRuleItem | DocFX website",
    "keywords": "Class ConfigFilterRuleItem Inheritance Object ConfigFilterRuleItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class ConfigFilterRuleItem Properties | Improve this Doc View Source Attribute Declaration [YamlMember(Alias = \"hasAttribute\")] public AttributeFilterInfo Attribute { get; set; } Property Value Type Description AttributeFilterInfo | Improve this Doc View Source CanVisit Declaration [YamlIgnore] public abstract bool CanVisit { get; } Property Value Type Description Boolean | Improve this Doc View Source Kind Declaration [YamlMember(Alias = \"type\")] public ExtendedSymbolKind? Kind { get; set; } Property Value Type Description Nullable < ExtendedSymbolKind > | Improve this Doc View Source UidRegex Declaration [YamlMember(Alias = \"uidRegex\")] public string UidRegex { get; set; } Property Value Type Description String Methods | Improve this Doc View Source IsMatch(ISymbol) Declaration public bool IsMatch(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItemUnion.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItemUnion.html",
    "title": "Class ConfigFilterRuleItemUnion | DocFX website",
    "keywords": "Class ConfigFilterRuleItemUnion Inheritance Object ConfigFilterRuleItemUnion Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class ConfigFilterRuleItemUnion Properties | Improve this Doc View Source Exclude Declaration [YamlMember(Alias = \"exclude\")] public ConfigFilterRuleExcludeItem Exclude { get; set; } Property Value Type Description ConfigFilterRuleExcludeItem | Improve this Doc View Source Include Declaration [YamlMember(Alias = \"include\")] public ConfigFilterRuleIncludeItem Include { get; set; } Property Value Type Description ConfigFilterRuleIncludeItem Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterVisitor.html",
    "title": "Class ConfigFilterVisitor | DocFX website",
    "keywords": "Class ConfigFilterVisitor Inheritance Object DelegatingFilterVisitor ConfigFilterVisitor Inherited Members DelegatingFilterVisitor.Inner DelegatingFilterVisitor.CanVisitApi(ISymbol, Boolean, IFilterVisitor) DelegatingFilterVisitor.CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ConfigFilterVisitor : DelegatingFilterVisitor, IFilterVisitor Constructors | Improve this Doc View Source ConfigFilterVisitor(IFilterVisitor, ConfigFilterRule) Declaration public ConfigFilterVisitor(IFilterVisitor inner, ConfigFilterRule rule) Parameters Type Name Description IFilterVisitor inner ConfigFilterRule rule | Improve this Doc View Source ConfigFilterVisitor(IFilterVisitor, String) Declaration public ConfigFilterVisitor(IFilterVisitor inner, string configFile) Parameters Type Name Description IFilterVisitor inner String configFile Methods | Improve this Doc View Source CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitApiCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) | Improve this Doc View Source CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitAttributeCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) | Improve this Doc View Source LoadRules(String) Declaration public static ConfigFilterRule LoadRules(string configFile) Parameters Type Name Description String configFile Returns Type Description ConfigFilterRule Extension Methods FilterVisitorExtensions.WithConfig(String) FilterVisitorExtensions.WithConfig(ConfigFilterRule) FilterVisitorExtensions.WithCache() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSharpNameVisitorCreator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSharpNameVisitorCreator.html",
    "title": "Class CSharpNameVisitorCreator | DocFX website",
    "keywords": "Class CSharpNameVisitorCreator Inheritance Object NameVisitorCreator CSharpNameVisitorCreator Inherited Members NameVisitorCreator.GetName(ISymbol) NameVisitorCreator.GetCSharp(NameOptions) NameVisitorCreator.GetVB(NameOptions) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class CSharpNameVisitorCreator : NameVisitorCreator Constructors | Improve this Doc View Source CSharpNameVisitorCreator(NameOptions) Declaration public CSharpNameVisitorCreator(NameOptions options) Parameters Type Name Description NameOptions options Methods | Improve this Doc View Source Create() Declaration protected override NameVisitor Create() Returns Type Description NameVisitor Overrides NameVisitorCreator.Create() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSReferenceItemVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSReferenceItemVisitor.html",
    "title": "Class CSReferenceItemVisitor | DocFX website",
    "keywords": "Class CSReferenceItemVisitor Inheritance Object Microsoft.CodeAnalysis.SymbolVisitor ReferenceItemVisitor CSReferenceItemVisitor Inherited Members ReferenceItemVisitor.ShortFormat ReferenceItemVisitor.QualifiedFormat ReferenceItemVisitor.ShortFormatWithoutGenericeParameter ReferenceItemVisitor.QualifiedFormatWithoutGenericeParameter ReferenceItemVisitor.ReferenceItem ReferenceItemVisitor.VisitNamedType(INamedTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.Visit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.DefaultVisit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class CSReferenceItemVisitor : ReferenceItemVisitor Constructors | Improve this Doc View Source CSReferenceItemVisitor(ReferenceItem) Declaration public CSReferenceItemVisitor(ReferenceItem referenceItem) Parameters Type Name Description ReferenceItem referenceItem Methods | Improve this Doc View Source AddBeginGenericParameter() Declaration protected override void AddBeginGenericParameter() Overrides ReferenceItemVisitor.AddBeginGenericParameter() | Improve this Doc View Source AddEndGenericParameter() Declaration protected override void AddEndGenericParameter() Overrides ReferenceItemVisitor.AddEndGenericParameter() | Improve this Doc View Source AddGenericParameterSeparator() Declaration protected override void AddGenericParameterSeparator() Overrides ReferenceItemVisitor.AddGenericParameterSeparator() | Improve this Doc View Source AddLinkItems(INamedTypeSymbol, Boolean) Declaration protected override void AddLinkItems(INamedTypeSymbol symbol, bool withGenericeParameter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol Boolean withGenericeParameter Overrides ReferenceItemVisitor.AddLinkItems(INamedTypeSymbol, Boolean) | Improve this Doc View Source VisitArrayType(IArrayTypeSymbol) Declaration public override void VisitArrayType(IArrayTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IArrayTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol) | Improve this Doc View Source VisitDynamicType(IDynamicTypeSymbol) Declaration public override void VisitDynamicType(IDynamicTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IDynamicTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol) | Improve this Doc View Source VisitEvent(IEventSymbol) Declaration public override void VisitEvent(IEventSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol) | Improve this Doc View Source VisitField(IFieldSymbol) Declaration public override void VisitField(IFieldSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitField(Microsoft.CodeAnalysis.IFieldSymbol) | Improve this Doc View Source VisitMethod(IMethodSymbol) Declaration public override void VisitMethod(IMethodSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol) | Improve this Doc View Source VisitNamespace(INamespaceSymbol) Declaration public override void VisitNamespace(INamespaceSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.INamespaceSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol) | Improve this Doc View Source VisitPointerType(IPointerTypeSymbol) Declaration public override void VisitPointerType(IPointerTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IPointerTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol) | Improve this Doc View Source VisitProperty(IPropertySymbol) Declaration public override void VisitProperty(IPropertySymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol) | Improve this Doc View Source VisitTypeParameter(ITypeParameterSymbol) Declaration public override void VisitTypeParameter(ITypeParameterSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ITypeParameterSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSYamlModelGenerator.html",
    "title": "Class CSYamlModelGenerator | DocFX website",
    "keywords": "Class CSYamlModelGenerator Inheritance Object YamlModelGenerator SimpleYamlModelGenerator CSYamlModelGenerator Inherited Members SimpleYamlModelGenerator.ShortFormat SimpleYamlModelGenerator.QualifiedFormat SimpleYamlModelGenerator.Language Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class CSYamlModelGenerator : SimpleYamlModelGenerator Constructors | Improve this Doc View Source CSYamlModelGenerator() Declaration public CSYamlModelGenerator() Methods | Improve this Doc View Source DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter) Declaration protected override void GenerateReference(ISymbol symbol, ReferenceItem reference, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol ReferenceItem reference SymbolVisitorAdapter adapter Overrides SimpleYamlModelGenerator.GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter) | Improve this Doc View Source GetLiteralExpressionCore(Object, ITypeSymbol) Declaration public static ExpressionSyntax GetLiteralExpressionCore(object value, ITypeSymbol type) Parameters Type Name Description Object value Microsoft.CodeAnalysis.ITypeSymbol type Returns Type Description Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax | Improve this Doc View Source GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Declaration protected override string GetSyntaxContent(MemberType typeKind, ISymbol symbol, SymbolVisitorAdapter adapter) Parameters Type Name Description MemberType typeKind Microsoft.CodeAnalysis.ISymbol symbol SymbolVisitorAdapter adapter Returns Type Description String Overrides SimpleYamlModelGenerator.GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.DefaultFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.DefaultFilterVisitor.html",
    "title": "Class DefaultFilterVisitor | DocFX website",
    "keywords": "Class DefaultFilterVisitor Inheritance Object DefaultFilterVisitor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class DefaultFilterVisitor : IFilterVisitor Methods | Improve this Doc View Source CanVisitApi(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitApi(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Implements IFilterVisitor.CanVisitApi(ISymbol, Boolean, IFilterVisitor) | Improve this Doc View Source CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitAttribute(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Implements IFilterVisitor.CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Extension Methods FilterVisitorExtensions.WithConfig(String) FilterVisitorExtensions.WithConfig(ConfigFilterRule) FilterVisitorExtensions.WithCache() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.DelegatingFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.DelegatingFilterVisitor.html",
    "title": "Class DelegatingFilterVisitor | DocFX website",
    "keywords": "Class DelegatingFilterVisitor Inheritance Object DelegatingFilterVisitor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class DelegatingFilterVisitor : IFilterVisitor Constructors | Improve this Doc View Source DelegatingFilterVisitor(IFilterVisitor) Declaration public DelegatingFilterVisitor(IFilterVisitor inner) Parameters Type Name Description IFilterVisitor inner Properties | Improve this Doc View Source Inner Declaration protected IFilterVisitor Inner { get; } Property Value Type Description IFilterVisitor Methods | Improve this Doc View Source CanVisitApi(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitApi(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Implements IFilterVisitor.CanVisitApi(ISymbol, Boolean, IFilterVisitor) | Improve this Doc View Source CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) Declaration protected virtual bool CanVisitApiCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean | Improve this Doc View Source CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitAttribute(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Implements IFilterVisitor.CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) | Improve this Doc View Source CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Declaration protected virtual bool CanVisitAttributeCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Extension Methods FilterVisitorExtensions.WithConfig(String) FilterVisitorExtensions.WithConfig(ConfigFilterRule) FilterVisitorExtensions.WithCache() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKind.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKind.html",
    "title": "Enum ExtendedSymbolKind | DocFX website",
    "keywords": "Enum ExtendedSymbolKind Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public enum ExtendedSymbolKind Fields Name Description Assembly Class Delegate Enum Event Field Interface Member Method Namespace Property Struct Type Extension Methods ExtendedSymbolKindHelper.Contains(ISymbol) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKindHelper.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKindHelper.html",
    "title": "Class ExtendedSymbolKindHelper | DocFX website",
    "keywords": "Class ExtendedSymbolKindHelper Inheritance Object ExtendedSymbolKindHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class ExtendedSymbolKindHelper Methods | Improve this Doc View Source Contains(ExtendedSymbolKind, ISymbol) Declaration public static bool Contains(this ExtendedSymbolKind kind, ISymbol symbol) Parameters Type Name Description ExtendedSymbolKind kind Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description Boolean"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataInputModel.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataInputModel.html",
    "title": "Class ExtractMetadataInputModel | DocFX website",
    "keywords": "Class ExtractMetadataInputModel Inheritance Object ExtractMetadataInputModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ExtractMetadataInputModel Properties | Improve this Doc View Source ApiFolderName Declaration public string ApiFolderName { get; set; } Property Value Type Description String | Improve this Doc View Source ExternalReferences Declaration public List<string> ExternalReferences { get; set; } Property Value Type Description List < String > | Improve this Doc View Source FilterConfigFile Declaration public string FilterConfigFile { get; set; } Property Value Type Description String | Improve this Doc View Source ForceRebuild Declaration public bool ForceRebuild { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IndexFileName Declaration public string IndexFileName { get; set; } Property Value Type Description String | Improve this Doc View Source Items Declaration public Dictionary<string, List<string>> Items { get; set; } Property Value Type Description Dictionary < String , List < String >> | Improve this Doc View Source PreserveRawInlineComments Declaration public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source TocFileName Declaration public string TocFileName { get; set; } Property Value Type Description String | Improve this Doc View Source UseCompatibilityFileName Declaration public bool UseCompatibilityFileName { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Clone() Declaration public ExtractMetadataInputModel Clone() Returns Type Description ExtractMetadataInputModel | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataWorker.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataWorker.html",
    "title": "Class ExtractMetadataWorker | DocFX website",
    "keywords": "Class ExtractMetadataWorker Inheritance Object ExtractMetadataWorker Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public sealed class ExtractMetadataWorker : IDisposable Constructors | Improve this Doc View Source ExtractMetadataWorker(ExtractMetadataInputModel, Boolean, Boolean) Declaration public ExtractMetadataWorker(ExtractMetadataInputModel input, bool rebuild, bool useCompatibilityFileName) Parameters Type Name Description ExtractMetadataInputModel input Boolean rebuild Boolean useCompatibilityFileName Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source ExtractMetadataAsync() Declaration public Task ExtractMetadataAsync() Returns Type Description Task Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.FilterVisitorExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.FilterVisitorExtensions.html",
    "title": "Class FilterVisitorExtensions | DocFX website",
    "keywords": "Class FilterVisitorExtensions Inheritance Object FilterVisitorExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class FilterVisitorExtensions Methods | Improve this Doc View Source WithCache(IFilterVisitor) Declaration public static IFilterVisitor WithCache(this IFilterVisitor fv) Parameters Type Name Description IFilterVisitor fv Returns Type Description IFilterVisitor | Improve this Doc View Source WithConfig(IFilterVisitor, ConfigFilterRule) Declaration public static IFilterVisitor WithConfig(this IFilterVisitor fv, ConfigFilterRule rule) Parameters Type Name Description IFilterVisitor fv ConfigFilterRule rule Returns Type Description IFilterVisitor | Improve this Doc View Source WithConfig(IFilterVisitor, String) Declaration public static IFilterVisitor WithConfig(this IFilterVisitor fv, string configFile) Parameters Type Name Description IFilterVisitor fv String configFile Returns Type Description IFilterVisitor"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IFilterVisitor.html",
    "title": "Interface IFilterVisitor | DocFX website",
    "keywords": "Interface IFilterVisitor Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public interface IFilterVisitor Methods | Improve this Doc View Source CanVisitApi(ISymbol, Boolean, IFilterVisitor) Declaration bool CanVisitApi(ISymbol symbol, bool wantProtectedMember = true, IFilterVisitor outer = null) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean | Improve this Doc View Source CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Declaration bool CanVisitAttribute(ISymbol symbol, bool wantProtectedMember = true, IFilterVisitor outer = null) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Extension Methods FilterVisitorExtensions.WithConfig(String) FilterVisitorExtensions.WithConfig(ConfigFilterRule) FilterVisitorExtensions.WithCache() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IResolverPipeline.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IResolverPipeline.html",
    "title": "Interface IResolverPipeline | DocFX website",
    "keywords": "Interface IResolverPipeline Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public interface IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ITripleSlashCommentParserContext.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ITripleSlashCommentParserContext.html",
    "title": "Interface ITripleSlashCommentParserContext | DocFX website",
    "keywords": "Interface ITripleSlashCommentParserContext Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public interface ITripleSlashCommentParserContext Properties | Improve this Doc View Source AddReferenceDelegate Declaration Action<string, string> AddReferenceDelegate { get; set; } Property Value Type Description Action < String , String > | Improve this Doc View Source PreserveRawInlineComments Declaration bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Source Declaration SourceDetail Source { get; set; } Property Value Type Description SourceDetail Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownToken.html",
    "title": "Interface IMarkdownToken | DocFX website",
    "keywords": "Interface IMarkdownToken The token for markdown. It should be immutable. Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownToken Properties | Improve this Doc View Source Context The context when created this token. Declaration IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Rule The rule created this token. Declaration IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo The source info of this token. Declaration SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenRewriter.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenRewriter.html",
    "title": "Interface IMarkdownTokenRewriter | DocFX website",
    "keywords": "Interface IMarkdownTokenRewriter rewrite the markdown when rendering Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownTokenRewriter Methods | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine, IMarkdownToken) rewrite Declaration IMarkdownToken Rewrite(IMarkdownRewriteEngine engine, IMarkdownToken token) Parameters Type Name Description IMarkdownRewriteEngine engine the engine IMarkdownToken token the token Returns Type Description IMarkdownToken If need rewrite, return the new token, otherwise, null Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenTreeValidator.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenTreeValidator.html",
    "title": "Interface IMarkdownTokenTreeValidator | DocFX website",
    "keywords": "Interface IMarkdownTokenTreeValidator Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownTokenTreeValidator Methods | Improve this Doc View Source Validate(ImmutableArray<IMarkdownToken>) Declaration void Validate(ImmutableArray<IMarkdownToken> tokens) Parameters Type Name Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenValidator.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenValidator.html",
    "title": "Interface IMarkdownTokenValidator | DocFX website",
    "keywords": "Interface IMarkdownTokenValidator Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownTokenValidator Methods | Improve this Doc View Source Validate(IMarkdownToken) Declaration void Validate(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenValidatorProvider.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenValidatorProvider.html",
    "title": "Interface IMarkdownTokenValidatorProvider | DocFX website",
    "keywords": "Interface IMarkdownTokenValidatorProvider Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public interface IMarkdownTokenValidatorProvider Methods | Improve this Doc View Source GetValidators() Declaration ImmutableArray<IMarkdownTokenValidator> GetValidators() Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownTokenValidator > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.InlineContent.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.InlineContent.html",
    "title": "Class InlineContent | DocFX website",
    "keywords": "Class InlineContent Inheritance Object InlineContent Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class InlineContent : IMarkdownRewritable<InlineContent> Constructors | Improve this Doc View Source InlineContent(ImmutableArray<IMarkdownToken>) Declaration public InlineContent(ImmutableArray<IMarkdownToken> tokens) Parameters Type Name Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Properties | Improve this Doc View Source Tokens Declaration public ImmutableArray<IMarkdownToken> Tokens { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Methods | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public InlineContent Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description InlineContent Implements IMarkdownRewritable<InlineContent>.Rewrite(IMarkdownRewriteEngine) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.JsonTokenTreeRenderer.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.JsonTokenTreeRenderer.html",
    "title": "Class JsonTokenTreeRenderer | DocFX website",
    "keywords": "Class JsonTokenTreeRenderer Inheritance Object JsonTokenTreeRenderer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class JsonTokenTreeRenderer Methods | Improve this Doc View Source Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, GfmDelInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer GfmDelInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownBrInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownBrInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBrInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownCodeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownCodeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownCodeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownCodeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownCodeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownCodeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownEmInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownEmInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownEscapeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownEscapeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownEscapeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHeadingBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHeadingBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHrBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHrBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownHtmlBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownHtmlBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownIgnoreToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownIgnoreToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownIgnoreToken token IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownImageInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownImageInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownLinkInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownLinkInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownListBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownListBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownListItemBlockToken) Declaration protected virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownListItemBlockToken token) Parameters Type Name Description IMarkdownRenderer renderer MarkdownListItemBlockToken token Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownNewLineBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownNewLineBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownNewLineBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownNonParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownNonParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownRawToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownRawToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownRawToken token IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownStrongInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownStrongInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTableBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTableBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownTagInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTagInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTagInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownTextToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTextToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTextToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownTextToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownTextToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownTextToken token MarkdownInlineContext context Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.LinkObj.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.LinkObj.html",
    "title": "Class LinkObj | DocFX website",
    "keywords": "Class LinkObj Inheritance Object LinkObj Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class LinkObj Properties | Improve this Doc View Source Href Declaration public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownAutoLinkInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownAutoLinkInlineRule.html",
    "title": "Class MarkdownAutoLinkInlineRule | DocFX website",
    "keywords": "Class MarkdownAutoLinkInlineRule Inheritance Object MarkdownAutoLinkInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownAutoLinkInlineRule : IMarkdownRule Properties | Improve this Doc View Source AutoLink Declaration public virtual Regex AutoLink { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source Mangle(String) Declaration protected virtual StringBuffer Mangle(string text) Parameters Type Name Description String text Returns Type Description StringBuffer | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockContext.html",
    "title": "Class MarkdownBlockContext | DocFX website",
    "keywords": "Class MarkdownBlockContext Inheritance Object MarkdownBlockContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownBlockContext : IMarkdownContext Constructors | Improve this Doc View Source MarkdownBlockContext(ImmutableList<IMarkdownRule>, IMarkdownContext) Declaration public MarkdownBlockContext(ImmutableList<IMarkdownRule> rules, IMarkdownContext inlineContext) Parameters Type Name Description System.Collections.Immutable.ImmutableList < IMarkdownRule > rules IMarkdownContext inlineContext | Improve this Doc View Source MarkdownBlockContext(ImmutableList<IMarkdownRule>, IMarkdownContext, ImmutableDictionary<String, Object>) Declaration protected MarkdownBlockContext(ImmutableList<IMarkdownRule> rules, IMarkdownContext inlineContext, ImmutableDictionary<string, object> variables) Parameters Type Name Description System.Collections.Immutable.ImmutableList < IMarkdownRule > rules IMarkdownContext inlineContext System.Collections.Immutable.ImmutableDictionary < String , Object > variables Fields | Improve this Doc View Source IsBlockQuote Declaration public const string IsBlockQuote = \"IsBlockQuote\" Field Value Type Description String | Improve this Doc View Source IsTop Declaration public const string IsTop = \"IsTop\" Field Value Type Description String Properties | Improve this Doc View Source Rules Declaration public ImmutableList<IMarkdownRule> Rules { get; } Property Value Type Description System.Collections.Immutable.ImmutableList < IMarkdownRule > Implements IMarkdownContext.Rules | Improve this Doc View Source Variables Declaration public ImmutableDictionary<string, object> Variables { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Implements IMarkdownContext.Variables Methods | Improve this Doc View Source CreateContext(ImmutableDictionary<String, Object>) Declaration public virtual IMarkdownContext CreateContext(ImmutableDictionary<string, object> variables) Parameters Type Name Description System.Collections.Immutable.ImmutableDictionary < String , Object > variables Returns Type Description IMarkdownContext Implements IMarkdownContext.CreateContext(ImmutableDictionary<String, Object>) | Improve this Doc View Source GetInlineContext() Declaration public IMarkdownContext GetInlineContext() Returns Type Description IMarkdownContext Extension Methods DfmContextExtensions.GetFilePathStack() DfmContextExtensions.SetFilePathStack(ImmutableStack<String>) DfmContextExtensions.GetBaseFolder() DfmContextExtensions.SetBaseFolder(String) DfmContextExtensions.SetDependency(HashSet<String>) DfmContextExtensions.ReportDependency(String) DfmContextExtensions.ReportDependency(IEnumerable<String>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockquoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockquoteBlockRule.html",
    "title": "Class MarkdownBlockquoteBlockRule | DocFX website",
    "keywords": "Class MarkdownBlockquoteBlockRule Inheritance Object MarkdownBlockquoteBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownBlockquoteBlockRule : IMarkdownRule Properties | Improve this Doc View Source Blockquote Declaration public virtual Regex Blockquote { get; } Property Value Type Description Regex | Improve this Doc View Source LeadingBlockquote Declaration public virtual Regex LeadingBlockquote { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockquoteBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBlockquoteBlockToken.html",
    "title": "Class MarkdownBlockquoteBlockToken | DocFX website",
    "keywords": "Class MarkdownBlockquoteBlockToken Inheritance Object MarkdownBlockquoteBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownBlockquoteBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownBlockquoteBlockToken> Constructors | Improve this Doc View Source MarkdownBlockquoteBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public MarkdownBlockquoteBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> tokens, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source Tokens Declaration public ImmutableArray<IMarkdownToken> Tokens { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownBlockquoteBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownBlockquoteBlockToken Implements IMarkdownRewritable<MarkdownBlockquoteBlockToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBrInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBrInlineRule.html",
    "title": "Class MarkdownBrInlineRule | DocFX website",
    "keywords": "Class MarkdownBrInlineRule Inheritance Object MarkdownBrInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownBrInlineRule : IMarkdownRule Properties | Improve this Doc View Source Br Declaration public virtual Regex Br { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBrInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownBrInlineToken.html",
    "title": "Class MarkdownBrInlineToken | DocFX website",
    "keywords": "Class MarkdownBrInlineToken Inheritance Object MarkdownBrInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownBrInlineToken : IMarkdownToken Constructors | Improve this Doc View Source MarkdownBrInlineToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownBrInlineToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeBlockRule.html",
    "title": "Class MarkdownCodeBlockRule | DocFX website",
    "keywords": "Class MarkdownCodeBlockRule Inheritance Object MarkdownCodeBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownCodeBlockRule : IMarkdownRule Properties | Improve this Doc View Source Code Declaration public virtual Regex Code { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeBlockToken.html",
    "title": "Class MarkdownCodeBlockToken | DocFX website",
    "keywords": "Class MarkdownCodeBlockToken Inheritance Object MarkdownCodeBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownCodeBlockToken : IMarkdownToken Constructors | Improve this Doc View Source MarkdownCodeBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public MarkdownCodeBlockToken(IMarkdownRule rule, IMarkdownContext context, string code, string lang, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String code String lang SourceInfo sourceInfo Properties | Improve this Doc View Source Code Declaration public string Code { get; } Property Value Type Description String | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Lang Declaration public string Lang { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeElementInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeElementInlineRule.html",
    "title": "Class MarkdownCodeElementInlineRule | DocFX website",
    "keywords": "Class MarkdownCodeElementInlineRule Inheritance Object MarkdownCodeElementInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownCodeElementInlineRule : IMarkdownRule Properties | Improve this Doc View Source CodeElement Declaration public virtual Regex CodeElement { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeInlineRule.html",
    "title": "Class MarkdownCodeInlineRule | DocFX website",
    "keywords": "Class MarkdownCodeInlineRule Inheritance Object MarkdownCodeInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownCodeInlineRule : IMarkdownRule Properties | Improve this Doc View Source Code Declaration public virtual Regex Code { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCodeInlineToken.html",
    "title": "Class MarkdownCodeInlineToken | DocFX website",
    "keywords": "Class MarkdownCodeInlineToken Inheritance Object MarkdownCodeInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownCodeInlineToken : IMarkdownToken Constructors | Improve this Doc View Source MarkdownCodeInlineToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public MarkdownCodeInlineToken(IMarkdownRule rule, IMarkdownContext context, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCommentInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownCommentInlineRule.html",
    "title": "Class MarkdownCommentInlineRule | DocFX website",
    "keywords": "Class MarkdownCommentInlineRule Inheritance Object MarkdownCommentInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownCommentInlineRule : IMarkdownRule Properties | Improve this Doc View Source Comment Declaration public virtual Regex Comment { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownDefBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownDefBlockRule.html",
    "title": "Class MarkdownDefBlockRule | DocFX website",
    "keywords": "Class MarkdownDefBlockRule Inheritance Object MarkdownDefBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownDefBlockRule : IMarkdownRule Properties | Improve this Doc View Source Def Declaration public virtual Regex Def { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEmInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEmInlineRule.html",
    "title": "Class MarkdownEmInlineRule | DocFX website",
    "keywords": "Class MarkdownEmInlineRule Inheritance Object MarkdownEmInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEmInlineRule : IMarkdownRule Properties | Improve this Doc View Source Em Declaration public virtual Regex Em { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEmInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEmInlineToken.html",
    "title": "Class MarkdownEmInlineToken | DocFX website",
    "keywords": "Class MarkdownEmInlineToken Inheritance Object MarkdownEmInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEmInlineToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownEmInlineToken> Constructors | Improve this Doc View Source MarkdownEmInlineToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public MarkdownEmInlineToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownEmInlineToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownEmInlineToken Implements IMarkdownRewritable<MarkdownEmInlineToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngine.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngine.html",
    "title": "Class MarkdownEngine | DocFX website",
    "keywords": "Class MarkdownEngine Inheritance Object MarkdownEngine Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEngine : IMarkdownEngine Constructors | Improve this Doc View Source MarkdownEngine(IMarkdownContext, IMarkdownTokenRewriter, Object, Options) Declaration public MarkdownEngine(IMarkdownContext context, IMarkdownTokenRewriter rewriter, object renderer, Options options) Parameters Type Name Description IMarkdownContext context IMarkdownTokenRewriter rewriter Object renderer Options options | Improve this Doc View Source MarkdownEngine(IMarkdownContext, IMarkdownTokenRewriter, Object, Options, Dictionary<String, LinkObj>) Declaration protected MarkdownEngine(IMarkdownContext context, IMarkdownTokenRewriter rewriter, object renderer, Options options, Dictionary<string, LinkObj> links) Parameters Type Name Description IMarkdownContext context IMarkdownTokenRewriter rewriter Object renderer Options options Dictionary < String , LinkObj > links | Improve this Doc View Source MarkdownEngine(IMarkdownContext, Object, Options) Declaration public MarkdownEngine(IMarkdownContext context, object renderer, Options options) Parameters Type Name Description IMarkdownContext context Object renderer Options options Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Links Declaration public Dictionary<string, LinkObj> Links { get; } Property Value Type Description Dictionary < String , LinkObj > | Improve this Doc View Source MaxExtractCount Declaration public int MaxExtractCount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Options Declaration public Options Options { get; } Property Value Type Description Options | Improve this Doc View Source Parser Declaration public virtual IMarkdownParser Parser { get; } Property Value Type Description IMarkdownParser Implements IMarkdownEngine.Parser | Improve this Doc View Source Renderer Declaration public virtual IMarkdownRenderer Renderer { get; } Property Value Type Description IMarkdownRenderer Implements IMarkdownEngine.Renderer | Improve this Doc View Source RendererImpl Declaration public object RendererImpl { get; } Property Value Type Description Object | Improve this Doc View Source RewriteEngine Declaration public virtual IMarkdownRewriteEngine RewriteEngine { get; } Property Value Type Description IMarkdownRewriteEngine Implements IMarkdownEngine.RewriteEngine | Improve this Doc View Source Rewriter Declaration public IMarkdownTokenRewriter Rewriter { get; } Property Value Type Description IMarkdownTokenRewriter | Improve this Doc View Source TokenTreeValidator Declaration public IMarkdownTokenTreeValidator TokenTreeValidator { get; set; } Property Value Type Description IMarkdownTokenTreeValidator Implements IMarkdownEngine.TokenTreeValidator Methods | Improve this Doc View Source Mark(SourceInfo, IMarkdownContext) Declaration public StringBuffer Mark(SourceInfo sourceInfo, IMarkdownContext context) Parameters Type Name Description SourceInfo sourceInfo IMarkdownContext context Returns Type Description StringBuffer Implements IMarkdownEngine.Mark(SourceInfo, IMarkdownContext) | Improve this Doc View Source Markup(String, String) Declaration public virtual string Markup(string markdown, string file) Parameters Type Name Description String markdown String file Returns Type Description String Implements IMarkdownEngine.Markup(String, String) | Improve this Doc View Source Normalize(String) Declaration public static string Normalize(string markdown) Parameters Type Name Description String markdown Returns Type Description String | Improve this Doc View Source Preprocess(String) Declaration protected virtual string Preprocess(string src) Parameters Type Name Description String src Returns Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngineBuilder.html",
    "title": "Class MarkdownEngineBuilder | DocFX website",
    "keywords": "Class MarkdownEngineBuilder A builder for create an instance of IMarkdownEngine Inheritance Object MarkdownEngineBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEngineBuilder Constructors | Improve this Doc View Source MarkdownEngineBuilder(Options) Declaration public MarkdownEngineBuilder(Options options) Parameters Type Name Description Options options Properties | Improve this Doc View Source BlockRules The block rules. Declaration public ImmutableList<IMarkdownRule> BlockRules { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableList < IMarkdownRule > | Improve this Doc View Source InlineRules The inline rules. Declaration public ImmutableList<IMarkdownRule> InlineRules { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableList < IMarkdownRule > | Improve this Doc View Source Options The options. Declaration public Options Options { get; } Property Value Type Description Options | Improve this Doc View Source Rewriter The markdown token rewriter. Declaration public IMarkdownTokenRewriter Rewriter { get; set; } Property Value Type Description IMarkdownTokenRewriter | Improve this Doc View Source TokenTreeValidator The markdown token tree validator. Declaration public IMarkdownTokenTreeValidator TokenTreeValidator { get; set; } Property Value Type Description IMarkdownTokenTreeValidator Methods | Improve this Doc View Source CreateEngine(Object) Create an instance of IMarkdownEngine Declaration public virtual IMarkdownEngine CreateEngine(object renderer) Parameters Type Name Description Object renderer the renderer. Returns Type Description IMarkdownEngine an instance of IMarkdownEngine | Improve this Doc View Source CreateParseContext() Create markdown paring context. Declaration protected virtual IMarkdownContext CreateParseContext() Returns Type Description IMarkdownContext a instance of IMarkdownContext Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngineByOptionsBuilder.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEngineByOptionsBuilder.html",
    "title": "Class MarkdownEngineByOptionsBuilder | DocFX website",
    "keywords": "Class MarkdownEngineByOptionsBuilder Inheritance Object MarkdownEngineBuilder MarkdownEngineByOptionsBuilder Inherited Members MarkdownEngineBuilder.Options MarkdownEngineBuilder.BlockRules MarkdownEngineBuilder.InlineRules MarkdownEngineBuilder.Rewriter MarkdownEngineBuilder.TokenTreeValidator MarkdownEngineBuilder.CreateParseContext() MarkdownEngineBuilder.CreateEngine(Object) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEngineByOptionsBuilder : MarkdownEngineBuilder Constructors | Improve this Doc View Source MarkdownEngineByOptionsBuilder(Options) Declaration public MarkdownEngineByOptionsBuilder(Options options) Parameters Type Name Description Options options Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapedTextInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapedTextInlineRule.html",
    "title": "Class MarkdownEscapedTextInlineRule | DocFX website",
    "keywords": "Class MarkdownEscapedTextInlineRule Inheritance Object MarkdownEscapedTextInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEscapedTextInlineRule : IMarkdownRule Properties | Improve this Doc View Source EscapedText Declaration public virtual Regex EscapedText { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapeInlineRule.html",
    "title": "Class MarkdownEscapeInlineRule | DocFX website",
    "keywords": "Class MarkdownEscapeInlineRule Inheritance Object MarkdownEscapeInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEscapeInlineRule : IMarkdownRule Properties | Improve this Doc View Source Escape Declaration public virtual Regex Escape { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownEscapeInlineToken.html",
    "title": "Class MarkdownEscapeInlineToken | DocFX website",
    "keywords": "Class MarkdownEscapeInlineToken Inheritance Object MarkdownEscapeInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownEscapeInlineToken : IMarkdownToken Constructors | Improve this Doc View Source MarkdownEscapeInlineToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public MarkdownEscapeInlineToken(IMarkdownRule rule, IMarkdownContext context, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHeadingBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHeadingBlockRule.html",
    "title": "Class MarkdownHeadingBlockRule | DocFX website",
    "keywords": "Class MarkdownHeadingBlockRule Inheritance Object MarkdownHeadingBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHeadingBlockRule : IMarkdownRule Properties | Improve this Doc View Source Heading Declaration public virtual Regex Heading { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHeadingBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHeadingBlockToken.html",
    "title": "Class MarkdownHeadingBlockToken | DocFX website",
    "keywords": "Class MarkdownHeadingBlockToken Inheritance Object MarkdownHeadingBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHeadingBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownHeadingBlockToken> Constructors | Improve this Doc View Source MarkdownHeadingBlockToken(IMarkdownRule, IMarkdownContext, InlineContent, String, Int32, SourceInfo) Declaration public MarkdownHeadingBlockToken(IMarkdownRule rule, IMarkdownContext context, InlineContent content, string id, int depth, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context InlineContent content String id Int32 depth SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public InlineContent Content { get; } Property Value Type Description InlineContent | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Depth Declaration public int Depth { get; } Property Value Type Description Int32 | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownHeadingBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownHeadingBlockToken Implements IMarkdownRewritable<MarkdownHeadingBlockToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHrBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHrBlockRule.html",
    "title": "Class MarkdownHrBlockRule | DocFX website",
    "keywords": "Class MarkdownHrBlockRule Inheritance Object MarkdownHrBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHrBlockRule : IMarkdownRule Properties | Improve this Doc View Source Hr Declaration public virtual Regex Hr { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHrBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHrBlockToken.html",
    "title": "Class MarkdownHrBlockToken | DocFX website",
    "keywords": "Class MarkdownHrBlockToken Inheritance Object MarkdownHrBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHrBlockToken : IMarkdownToken Constructors | Improve this Doc View Source MarkdownHrBlockToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownHrBlockToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHtmlBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHtmlBlockRule.html",
    "title": "Class MarkdownHtmlBlockRule | DocFX website",
    "keywords": "Class MarkdownHtmlBlockRule Inheritance Object MarkdownHtmlBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHtmlBlockRule : IMarkdownRule Properties | Improve this Doc View Source Html Declaration public virtual Regex Html { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHtmlBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownHtmlBlockToken.html",
    "title": "Class MarkdownHtmlBlockToken | DocFX website",
    "keywords": "Class MarkdownHtmlBlockToken Inheritance Object MarkdownHtmlBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownHtmlBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownHtmlBlockToken> Constructors | Improve this Doc View Source MarkdownHtmlBlockToken(IMarkdownRule, IMarkdownContext, InlineContent, SourceInfo) Declaration public MarkdownHtmlBlockToken(IMarkdownRule rule, IMarkdownContext context, InlineContent content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context InlineContent content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public InlineContent Content { get; } Property Value Type Description InlineContent | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownHtmlBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownHtmlBlockToken Implements IMarkdownRewritable<MarkdownHtmlBlockToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownIgnoreToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownIgnoreToken.html",
    "title": "Class MarkdownIgnoreToken | DocFX website",
    "keywords": "Class MarkdownIgnoreToken Inheritance Object MarkdownIgnoreToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public sealed class MarkdownIgnoreToken : IMarkdownToken Constructors | Improve this Doc View Source MarkdownIgnoreToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownIgnoreToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownImageInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownImageInlineToken.html",
    "title": "Class MarkdownImageInlineToken | DocFX website",
    "keywords": "Class MarkdownImageInlineToken Inheritance Object MarkdownImageInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownImageInlineToken : IMarkdownToken Constructors | Improve this Doc View Source MarkdownImageInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo, MarkdownLinkType, String) Declaration public MarkdownImageInlineToken(IMarkdownRule rule, IMarkdownContext context, string href, string title, string text, SourceInfo sourceInfo, MarkdownLinkType linkType, string refId) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String href String title String text SourceInfo sourceInfo MarkdownLinkType linkType String refId Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Href Declaration public string Href { get; } Property Value Type Description String | Improve this Doc View Source LinkType Declaration public MarkdownLinkType LinkType { get; } Property Value Type Description MarkdownLinkType | Improve this Doc View Source RefId Declaration public string RefId { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source Text Declaration public string Text { get; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownInlineContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownInlineContext.html",
    "title": "Class MarkdownInlineContext | DocFX website",
    "keywords": "Class MarkdownInlineContext Inheritance Object MarkdownInlineContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownInlineContext : IMarkdownContext Constructors | Improve this Doc View Source MarkdownInlineContext(ImmutableList<IMarkdownRule>) Declaration public MarkdownInlineContext(ImmutableList<IMarkdownRule> rules) Parameters Type Name Description System.Collections.Immutable.ImmutableList < IMarkdownRule > rules | Improve this Doc View Source MarkdownInlineContext(ImmutableList<IMarkdownRule>, ImmutableDictionary<String, Object>) Declaration protected MarkdownInlineContext(ImmutableList<IMarkdownRule> rules, ImmutableDictionary<string, object> variables) Parameters Type Name Description System.Collections.Immutable.ImmutableList < IMarkdownRule > rules System.Collections.Immutable.ImmutableDictionary < String , Object > variables Fields | Improve this Doc View Source IsInLink Declaration public const string IsInLink = \"IsInLink\" Field Value Type Description String Properties | Improve this Doc View Source Rules Declaration public ImmutableList<IMarkdownRule> Rules { get; } Property Value Type Description System.Collections.Immutable.ImmutableList < IMarkdownRule > Implements IMarkdownContext.Rules | Improve this Doc View Source Variables Declaration public ImmutableDictionary<string, object> Variables { get; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , Object > Implements IMarkdownContext.Variables Methods | Improve this Doc View Source CreateContext(ImmutableDictionary<String, Object>) Declaration public virtual IMarkdownContext CreateContext(ImmutableDictionary<string, object> variables) Parameters Type Name Description System.Collections.Immutable.ImmutableDictionary < String , Object > variables Returns Type Description IMarkdownContext Implements IMarkdownContext.CreateContext(ImmutableDictionary<String, Object>) Extension Methods DfmContextExtensions.GetFilePathStack() DfmContextExtensions.SetFilePathStack(ImmutableStack<String>) DfmContextExtensions.GetBaseFolder() DfmContextExtensions.SetBaseFolder(String) DfmContextExtensions.SetDependency(HashSet<String>) DfmContextExtensions.ReportDependency(String) DfmContextExtensions.ReportDependency(IEnumerable<String>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLHeadingBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLHeadingBlockRule.html",
    "title": "Class MarkdownLHeadingBlockRule | DocFX website",
    "keywords": "Class MarkdownLHeadingBlockRule Inheritance Object MarkdownLHeadingBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownLHeadingBlockRule : IMarkdownRule Properties | Improve this Doc View Source LHeading Declaration public virtual Regex LHeading { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkBaseInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkBaseInlineRule.html",
    "title": "Class MarkdownLinkBaseInlineRule | DocFX website",
    "keywords": "Class MarkdownLinkBaseInlineRule Inheritance Object MarkdownLinkBaseInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public abstract class MarkdownLinkBaseInlineRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source GenerateToken(IMarkdownParser, String, String, String, Boolean, SourceInfo, MarkdownLinkType, String) Declaration protected virtual IMarkdownToken GenerateToken(IMarkdownParser parser, string href, string title, string text, bool isImage, SourceInfo sourceInfo, MarkdownLinkType linkType, string refId) Parameters Type Name Description IMarkdownParser parser String href String title String text Boolean isImage SourceInfo sourceInfo MarkdownLinkType linkType String refId Returns Type Description IMarkdownToken | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public abstract IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkInlineRule.html",
    "title": "Class MarkdownLinkInlineRule | DocFX website",
    "keywords": "Class MarkdownLinkInlineRule Inheritance Object MarkdownLinkBaseInlineRule MarkdownLinkInlineRule Inherited Members MarkdownLinkBaseInlineRule.GenerateToken(IMarkdownParser, String, String, String, Boolean, SourceInfo, MarkdownLinkType, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownLinkInlineRule : MarkdownLinkBaseInlineRule, IMarkdownRule Properties | Improve this Doc View Source Link Declaration public virtual Regex Link { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownLinkBaseInlineRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides MarkdownLinkBaseInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkInlineToken.html",
    "title": "Class MarkdownLinkInlineToken | DocFX website",
    "keywords": "Class MarkdownLinkInlineToken Inheritance Object MarkdownLinkInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownLinkInlineToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownLinkInlineToken> Constructors | Improve this Doc View Source MarkdownLinkInlineToken(IMarkdownRule, IMarkdownContext, String, String, ImmutableArray<IMarkdownToken>, SourceInfo, MarkdownLinkType, String) Declaration public MarkdownLinkInlineToken(IMarkdownRule rule, IMarkdownContext context, string href, string title, ImmutableArray<IMarkdownToken> content, SourceInfo sourceInfo, MarkdownLinkType linkType, string refId) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String href String title System.Collections.Immutable.ImmutableArray < IMarkdownToken > content SourceInfo sourceInfo MarkdownLinkType linkType String refId Properties | Improve this Doc View Source Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Href Declaration public string Href { get; } Property Value Type Description String | Improve this Doc View Source LinkType Declaration public MarkdownLinkType LinkType { get; } Property Value Type Description MarkdownLinkType | Improve this Doc View Source RefId Declaration public string RefId { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownLinkInlineToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownLinkInlineToken Implements IMarkdownRewritable<MarkdownLinkInlineToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkType.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownLinkType.html",
    "title": "Enum MarkdownLinkType | DocFX website",
    "keywords": "Enum MarkdownLinkType Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public enum MarkdownLinkType Fields Name Description AutoLink NormalLink NumberLink RefLink UrlLink Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListBlockRule.html",
    "title": "Class MarkdownListBlockRule | DocFX website",
    "keywords": "Class MarkdownListBlockRule Inheritance Object MarkdownListBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownListBlockRule : IMarkdownRule Properties | Improve this Doc View Source Bullet Declaration public virtual Regex Bullet { get; } Property Value Type Description Regex | Improve this Doc View Source Item Declaration public virtual Regex Item { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source OrderList Declaration public virtual Regex OrderList { get; } Property Value Type Description Regex | Improve this Doc View Source UnorderList Declaration public virtual Regex UnorderList { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListBlockToken.html",
    "title": "Class MarkdownListBlockToken | DocFX website",
    "keywords": "Class MarkdownListBlockToken Inheritance Object MarkdownListBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownListBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownListBlockToken> Constructors | Improve this Doc View Source MarkdownListBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, Boolean, SourceInfo) Declaration public MarkdownListBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> tokens, bool ordered, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Boolean ordered SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Ordered Declaration public bool Ordered { get; } Property Value Type Description Boolean | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source Tokens Declaration public ImmutableArray<IMarkdownToken> Tokens { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownListBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownListBlockToken Implements IMarkdownRewritable<MarkdownListBlockToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListItemBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownListItemBlockToken.html",
    "title": "Class MarkdownListItemBlockToken | DocFX website",
    "keywords": "Class MarkdownListItemBlockToken Inheritance Object MarkdownListItemBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownListItemBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownListItemBlockToken> Constructors | Improve this Doc View Source MarkdownListItemBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, Boolean, SourceInfo) Declaration public MarkdownListItemBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> tokens, bool loose, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Boolean loose SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Loose Declaration public bool Loose { get; } Property Value Type Description Boolean | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source Tokens Declaration public ImmutableArray<IMarkdownToken> Tokens { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownListItemBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownListItemBlockToken Implements IMarkdownRewritable<MarkdownListItemBlockToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNewLineBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNewLineBlockRule.html",
    "title": "Class MarkdownNewLineBlockRule | DocFX website",
    "keywords": "Class MarkdownNewLineBlockRule Inheritance Object MarkdownNewLineBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownNewLineBlockRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source Newline Declaration public virtual Regex Newline { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNewLineBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNewLineBlockToken.html",
    "title": "Class MarkdownNewLineBlockToken | DocFX website",
    "keywords": "Class MarkdownNewLineBlockToken Inheritance Object MarkdownNewLineBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownNewLineBlockToken : IMarkdownToken Constructors | Improve this Doc View Source MarkdownNewLineBlockToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownNewLineBlockToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNoLinkInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNoLinkInlineRule.html",
    "title": "Class MarkdownNoLinkInlineRule | DocFX website",
    "keywords": "Class MarkdownNoLinkInlineRule Inheritance Object MarkdownLinkBaseInlineRule MarkdownNoLinkInlineRule Inherited Members MarkdownLinkBaseInlineRule.GenerateToken(IMarkdownParser, String, String, String, Boolean, SourceInfo, MarkdownLinkType, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownNoLinkInlineRule : MarkdownLinkBaseInlineRule, IMarkdownRule Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownLinkBaseInlineRule.Name | Improve this Doc View Source NoLink Declaration public virtual Regex NoLink { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides MarkdownLinkBaseInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNonParagraphBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNonParagraphBlockToken.html",
    "title": "Class MarkdownNonParagraphBlockToken | DocFX website",
    "keywords": "Class MarkdownNonParagraphBlockToken Inheritance Object MarkdownNonParagraphBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownNonParagraphBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownNonParagraphBlockToken> Constructors | Improve this Doc View Source MarkdownNonParagraphBlockToken(IMarkdownRule, IMarkdownContext, InlineContent, SourceInfo) Declaration public MarkdownNonParagraphBlockToken(IMarkdownRule rule, IMarkdownContext context, InlineContent content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context InlineContent content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public InlineContent Content { get; } Property Value Type Description InlineContent | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownNonParagraphBlockToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description MarkdownNonParagraphBlockToken Implements IMarkdownRewritable<MarkdownNonParagraphBlockToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNpTableBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownNpTableBlockRule.html",
    "title": "Class MarkdownNpTableBlockRule | DocFX website",
    "keywords": "Class MarkdownNpTableBlockRule Inheritance Object MarkdownNpTableBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownNpTableBlockRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source NpTable Declaration public virtual Regex NpTable { get; } Property Value Type Description Regex Methods | Improve this Doc View Source ParseAligns(String[]) Declaration protected virtual Align[] ParseAligns(string[] aligns) Parameters Type Name Description String [] aligns Returns Type Description Align [] | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParagraphBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParagraphBlockRule.html",
    "title": "Class MarkdownParagraphBlockRule | DocFX website",
    "keywords": "Class MarkdownParagraphBlockRule Inheritance Object MarkdownParagraphBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownParagraphBlockRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source Paragraph Declaration public virtual Regex Paragraph { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParagraphBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParagraphBlockToken.html",
    "title": "Class MarkdownParagraphBlockToken | DocFX website",
    "keywords": "Class MarkdownParagraphBlockToken Inheritance Object MarkdownParagraphBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownParagraphBlockToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownParagraphBlockToken> Constructors | Improve this Doc View Source MarkdownParagraphBlockToken(IMarkdownRule, IMarkdownContext, InlineContent, SourceInfo) Declaration public MarkdownParagraphBlockToken(IMarkdownRule rule, IMarkdownContext context, InlineContent inlineTokens, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context InlineContent inlineTokens SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source InlineTokens Declaration public InlineContent InlineTokens { get; } Property Value Type Description InlineContent | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods | Improve this Doc View Source Create(IMarkdownRule, MarkdownParser, String, SourceInfo) Declaration public static MarkdownParagraphBlockToken Create(IMarkdownRule rule, MarkdownParser engine, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule MarkdownParser engine String content SourceInfo sourceInfo Returns Type Description MarkdownParagraphBlockToken | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownParagraphBlockToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownParagraphBlockToken Implements IMarkdownRewritable<MarkdownParagraphBlockToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParser.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParser.html",
    "title": "Class MarkdownParser | DocFX website",
    "keywords": "Class MarkdownParser Inheritance Object MarkdownParser Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownParser : IMarkdownParser Constructors | Improve this Doc View Source MarkdownParser(IMarkdownContext, Options, Dictionary<String, LinkObj>) Declaration public MarkdownParser(IMarkdownContext context, Options options, Dictionary<string, LinkObj> links) Parameters Type Name Description IMarkdownContext context Options options Dictionary < String , LinkObj > links Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownParser.Context | Improve this Doc View Source Links Declaration public Dictionary<string, LinkObj> Links { get; } Property Value Type Description Dictionary < String , LinkObj > Implements IMarkdownParser.Links | Improve this Doc View Source Options Declaration public Options Options { get; } Property Value Type Description Options Implements IMarkdownParser.Options Methods | Improve this Doc View Source Preprocess(String) Declaration protected virtual string Preprocess(string src) Parameters Type Name Description String src Returns Type Description String | Improve this Doc View Source SwitchContext(IMarkdownContext) Declaration public IMarkdownContext SwitchContext(IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description IMarkdownContext Implements IMarkdownParser.SwitchContext(IMarkdownContext) | Improve this Doc View Source Tokenize(SourceInfo) Declaration public ImmutableArray<IMarkdownToken> Tokenize(SourceInfo sourceInfo) Parameters Type Name Description SourceInfo sourceInfo Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Implements IMarkdownParser.Tokenize(SourceInfo) Extension Methods MarkdownParserExtensions.SwitchContext(String, Object) MarkdownParserExtensions.SwitchContext(IReadOnlyDictionary<String, Object>) MarkdownParserExtensions.TokenizeInline(SourceInfo) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParserExtensions.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParserExtensions.html",
    "title": "Class MarkdownParserExtensions | DocFX website",
    "keywords": "Class MarkdownParserExtensions Inheritance Object MarkdownParserExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public static class MarkdownParserExtensions Methods | Improve this Doc View Source SwitchContext(IMarkdownParser, IReadOnlyDictionary<String, Object>) Declaration public static IMarkdownContext SwitchContext(this IMarkdownParser parser, IReadOnlyDictionary<string, object> variables) Parameters Type Name Description IMarkdownParser parser IReadOnlyDictionary < String , Object > variables Returns Type Description IMarkdownContext | Improve this Doc View Source SwitchContext(IMarkdownParser, String, Object) Declaration public static IMarkdownContext SwitchContext(this IMarkdownParser parser, string variableKey, object value) Parameters Type Name Description IMarkdownParser parser String variableKey Object value Returns Type Description IMarkdownContext | Improve this Doc View Source TokenizeInline(IMarkdownParser, SourceInfo) Declaration public static InlineContent TokenizeInline(this IMarkdownParser parser, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownParser parser SourceInfo sourceInfo Returns Type Description InlineContent"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParsingContext.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownParsingContext.html",
    "title": "Class MarkdownParsingContext | DocFX website",
    "keywords": "Class MarkdownParsingContext Inheritance Object MarkdownParsingContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownParsingContext : IMarkdownParsingContext Constructors | Improve this Doc View Source MarkdownParsingContext(SourceInfo) Declaration public MarkdownParsingContext(SourceInfo sourceInfo) Parameters Type Name Description SourceInfo sourceInfo Properties | Improve this Doc View Source CurrentMarkdown Declaration public string CurrentMarkdown { get; } Property Value Type Description String Implements IMarkdownParsingContext.CurrentMarkdown | Improve this Doc View Source File Declaration public string File { get; } Property Value Type Description String | Improve this Doc View Source LineNumber Declaration public int LineNumber { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Consume(Int32) Declaration public SourceInfo Consume(int charCount) Parameters Type Name Description Int32 charCount Returns Type Description SourceInfo Implements IMarkdownParsingContext.Consume(Int32) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRawToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRawToken.html",
    "title": "Class MarkdownRawToken | DocFX website",
    "keywords": "Class MarkdownRawToken Inheritance Object MarkdownRawToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownRawToken : IMarkdownToken Constructors | Improve this Doc View Source MarkdownRawToken(IMarkdownRule, IMarkdownContext, SourceInfo) Declaration public MarkdownRawToken(IMarkdownRule rule, IMarkdownContext context, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRefLinkInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRefLinkInlineRule.html",
    "title": "Class MarkdownRefLinkInlineRule | DocFX website",
    "keywords": "Class MarkdownRefLinkInlineRule Inheritance Object MarkdownLinkBaseInlineRule MarkdownRefLinkInlineRule Inherited Members MarkdownLinkBaseInlineRule.GenerateToken(IMarkdownParser, String, String, String, Boolean, SourceInfo, MarkdownLinkType, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownRefLinkInlineRule : MarkdownLinkBaseInlineRule, IMarkdownRule Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownLinkBaseInlineRule.Name | Improve this Doc View Source RefLink Declaration public virtual Regex RefLink { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides MarkdownLinkBaseInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRenderer.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRenderer.html",
    "title": "Class MarkdownRenderer | DocFX website",
    "keywords": "Class MarkdownRenderer Inheritance Object MarkdownRenderer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownRenderer Methods | Improve this Doc View Source Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, GfmDelInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render GfmDelInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer render IMarkdownToken token IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownEmInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownEmInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownHeadingBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownHeadingBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownHrBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownHrBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownHtmlBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownHtmlBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownImageInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownImageInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownLinkInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownLinkInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownListBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownListBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownListItemBlockToken, String) Declaration protected virtual StringBuffer Render(IMarkdownRenderer render, MarkdownListItemBlockToken token, string indent) Parameters Type Name Description IMarkdownRenderer render MarkdownListItemBlockToken token String indent Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownNonParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownNonParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownParagraphBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownParagraphBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownStrongInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownStrongInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, MarkdownTableBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownTableBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRendererAdapter.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRendererAdapter.html",
    "title": "Class MarkdownRendererAdapter | DocFX website",
    "keywords": "Class MarkdownRendererAdapter The adapter for markdown renderer, use dynamic dispatch. Inheritance Object MarkdownRendererAdapter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownRendererAdapter : IMarkdownRenderer Constructors | Improve this Doc View Source MarkdownRendererAdapter(IMarkdownEngine, Object, Options, Dictionary<String, LinkObj>) Declaration public MarkdownRendererAdapter(IMarkdownEngine engine, object renderer, Options options, Dictionary<string, LinkObj> links) Parameters Type Name Description IMarkdownEngine engine Object renderer Options options Dictionary < String , LinkObj > links Properties | Improve this Doc View Source Engine Declaration public IMarkdownEngine Engine { get; } Property Value Type Description IMarkdownEngine Implements IMarkdownRenderer.Engine | Improve this Doc View Source Links Declaration public Dictionary<string, LinkObj> Links { get; } Property Value Type Description Dictionary < String , LinkObj > Implements IMarkdownRenderer.Links | Improve this Doc View Source Options Declaration public Options Options { get; } Property Value Type Description Options Implements IMarkdownRenderer.Options | Improve this Doc View Source Renderer Declaration public object Renderer { get; } Property Value Type Description Object Methods | Improve this Doc View Source Render(IMarkdownToken) Declaration public StringBuffer Render(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Returns Type Description StringBuffer Implements IMarkdownRenderer.Render(IMarkdownToken) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRewriteEngine.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownRewriteEngine.html",
    "title": "Class MarkdownRewriteEngine | DocFX website",
    "keywords": "Class MarkdownRewriteEngine Inheritance Object MarkdownRewriteEngine Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownRewriteEngine : IMarkdownRewriteEngine Constructors | Improve this Doc View Source MarkdownRewriteEngine(IMarkdownEngine, IMarkdownTokenRewriter) Declaration public MarkdownRewriteEngine(IMarkdownEngine engine, IMarkdownTokenRewriter rewriter) Parameters Type Name Description IMarkdownEngine engine IMarkdownTokenRewriter rewriter Properties | Improve this Doc View Source Engine Declaration public IMarkdownEngine Engine { get; } Property Value Type Description IMarkdownEngine Implements IMarkdownRewriteEngine.Engine Methods | Improve this Doc View Source Complete() Declaration public virtual void Complete() Implements IMarkdownRewriteEngine.Complete() | Improve this Doc View Source GetParents() Declaration public virtual ImmutableArray<IMarkdownToken> GetParents() Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Implements IMarkdownRewriteEngine.GetParents() | Improve this Doc View Source GetVariable(String) Declaration public virtual object GetVariable(string name) Parameters Type Name Description String name Returns Type Description Object Implements IMarkdownRewriteEngine.GetVariable(String) | Improve this Doc View Source HasPostProcess(String) Declaration public virtual bool HasPostProcess(string name) Parameters Type Name Description String name Returns Type Description Boolean Implements IMarkdownRewriteEngine.HasPostProcess(String) | Improve this Doc View Source HasVariable(String) Declaration public virtual bool HasVariable(string name) Parameters Type Name Description String name Returns Type Description Boolean Implements IMarkdownRewriteEngine.HasVariable(String) | Improve this Doc View Source Initialize() Declaration public void Initialize() Implements IMarkdownRewriteEngine.Initialize() | Improve this Doc View Source RemovePostProcess(String) Declaration public virtual void RemovePostProcess(string name) Parameters Type Name Description String name Implements IMarkdownRewriteEngine.RemovePostProcess(String) | Improve this Doc View Source RemoveVariable(String) Declaration public virtual void RemoveVariable(string name) Parameters Type Name Description String name Implements IMarkdownRewriteEngine.RemoveVariable(String) | Improve this Doc View Source Rewrite(ImmutableArray<IMarkdownToken>) Declaration public virtual ImmutableArray<IMarkdownToken> Rewrite(ImmutableArray<IMarkdownToken> tokens) Parameters Type Name Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens Returns Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Implements IMarkdownRewriteEngine.Rewrite(ImmutableArray<IMarkdownToken>) | Improve this Doc View Source SetPostProcess(String, Action<IMarkdownRewriteEngine>) Declaration public virtual void SetPostProcess(string name, Action<IMarkdownRewriteEngine> action) Parameters Type Name Description String name Action < IMarkdownRewriteEngine > action Implements IMarkdownRewriteEngine.SetPostProcess(String, Action<IMarkdownRewriteEngine>) | Improve this Doc View Source SetVariable(String, Object) Declaration public virtual void SetVariable(string name, object value) Parameters Type Name Description String name Object value Implements IMarkdownRewriteEngine.SetVariable(String, Object) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownStrongInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownStrongInlineRule.html",
    "title": "Class MarkdownStrongInlineRule | DocFX website",
    "keywords": "Class MarkdownStrongInlineRule Inheritance Object MarkdownStrongInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownStrongInlineRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source Strong Declaration public virtual Regex Strong { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MarkdownLite.MarkdownStrongInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.MarkdownLite.MarkdownStrongInlineToken.html",
    "title": "Class MarkdownStrongInlineToken | DocFX website",
    "keywords": "Class MarkdownStrongInlineToken Inheritance Object MarkdownStrongInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.MarkdownLite Assembly :Microsoft.DocAsCode.MarkdownLite.dll Syntax public class MarkdownStrongInlineToken : IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownStrongInlineToken> Constructors | Improve this Doc View Source MarkdownStrongInlineToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public MarkdownStrongInlineToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > Implements IMarkdownExpression.GetChildren() | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public MarkdownStrongInlineToken Rewrite(IMarkdownRewriteEngine rewriterEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriterEngine Returns Type Description MarkdownStrongInlineToken Implements IMarkdownRewritable<MarkdownStrongInlineToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods MarkdownTokenExtensions.Children() MarkdownTokenExtensions.Children<T>() MarkdownTokenExtensions.Descendants() MarkdownTokenExtensions.Descendants<T>() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.IExtensibleTypeInspector.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.IExtensibleTypeInspector.html",
    "title": "Interface IExtensibleTypeInspector | DocFX website",
    "keywords": "Interface IExtensibleTypeInspector Inherited Members YamlDotNet.Serialization.ITypeInspector.GetProperties(System.Type, System.Object) YamlDotNet.Serialization.ITypeInspector.GetProperty(System.Type, System.Object, System.String, System.Boolean) Namespace :Microsoft.DocAsCode.YamlSerialization.TypeInspectors Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public interface IExtensibleTypeInspector : ITypeInspector Methods | Improve this Doc View Source GetProperty(Type, Object, String) Declaration IPropertyDescriptor GetProperty(Type type, object container, string name) Parameters Type Name Description Type type Object container String name Returns Type Description YamlDotNet.Serialization.IPropertyDescriptor Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.TypeInspectors.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization.TypeInspectors | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization.TypeInspectors Classes EmitTypeInspector ExtensibleNamingConventionTypeInspector ExtensibleReadableAndWritablePropertiesTypeInspector ExtensibleTypeInspectorSkeleton ExtensibleYamlAttributesTypeInspector Applies the YamlMemberAttribute to another ITypeInspector . Interfaces IExtensibleTypeInspector"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.YamlDeserializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.YamlDeserializer.html",
    "title": "Class YamlDeserializer | DocFX website",
    "keywords": "Class YamlDeserializer A faÃ§ade for the YAML library with the standard configuration. Inheritance Object YamlDeserializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public sealed class YamlDeserializer Constructors | Improve this Doc View Source YamlDeserializer(IObjectFactory, INamingConvention, Boolean, Boolean) Declaration public YamlDeserializer(IObjectFactory objectFactory = null, INamingConvention namingConvention = null, bool ignoreUnmatched = false, bool ignoreNotFoundAnchor = true) Parameters Type Name Description YamlDotNet.Serialization.IObjectFactory objectFactory YamlDotNet.Serialization.INamingConvention namingConvention Boolean ignoreUnmatched Boolean ignoreNotFoundAnchor Properties | Improve this Doc View Source NodeDeserializers Declaration public IList<INodeDeserializer> NodeDeserializers { get; } Property Value Type Description IList < YamlDotNet.Serialization.INodeDeserializer > | Improve this Doc View Source TypeResolvers Declaration public IList<INodeTypeResolver> TypeResolvers { get; } Property Value Type Description IList < YamlDotNet.Serialization.INodeTypeResolver > | Improve this Doc View Source ValueDeserializer Declaration public IValueDeserializer ValueDeserializer { get; } Property Value Type Description YamlDotNet.Serialization.IValueDeserializer Methods | Improve this Doc View Source Deserialize(TextReader, Type, IValueDeserializer) Declaration public object Deserialize(TextReader input, Type type, IValueDeserializer deserializer = null) Parameters Type Name Description TextReader input Type type YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description Object | Improve this Doc View Source Deserialize(TextReader, IValueDeserializer) Declaration public object Deserialize(TextReader input, IValueDeserializer deserializer = null) Parameters Type Name Description TextReader input YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description Object | Improve this Doc View Source Deserialize(EventReader, Type, IValueDeserializer) Deserializes an object of the specified type. Declaration public object Deserialize(EventReader reader, Type type, IValueDeserializer deserializer = null) Parameters Type Name Description YamlDotNet.Core.EventReader reader The EventReader where to deserialize the object. Type type The static type of the object to deserialize. YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description Object Returns the deserialized object. | Improve this Doc View Source Deserialize(EventReader, IValueDeserializer) Declaration public object Deserialize(EventReader reader, IValueDeserializer deserializer = null) Parameters Type Name Description YamlDotNet.Core.EventReader reader YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description Object | Improve this Doc View Source Deserialize<T>(TextReader, IValueDeserializer) Declaration public T Deserialize<T>(TextReader input, IValueDeserializer deserializer = null) Parameters Type Name Description TextReader input YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Deserialize<T>(EventReader, IValueDeserializer) Declaration public T Deserialize<T>(EventReader reader, IValueDeserializer deserializer = null) Parameters Type Name Description YamlDotNet.Core.EventReader reader YamlDotNet.Serialization.IValueDeserializer deserializer Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source RegisterTagMapping(String, Type) Declaration public void RegisterTagMapping(string tag, Type type) Parameters Type Name Description String tag Type type | Improve this Doc View Source RegisterTypeConverter(IYamlTypeConverter) Declaration public void RegisterTypeConverter(IYamlTypeConverter typeConverter) Parameters Type Name Description YamlDotNet.Serialization.IYamlTypeConverter typeConverter Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.YamlSerializer.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.YamlSerializer.html",
    "title": "Class YamlSerializer | DocFX website",
    "keywords": "Class YamlSerializer Inheritance Object YamlSerializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.YamlSerialization Assembly :Microsoft.DocAsCode.YamlSerialization.dll Syntax public class YamlSerializer Constructors | Improve this Doc View Source YamlSerializer(SerializationOptions, INamingConvention) Declaration public YamlSerializer(SerializationOptions options = SerializationOptions.None, INamingConvention namingConvention = null) Parameters Type Name Description YamlDotNet.Serialization.SerializationOptions options YamlDotNet.Serialization.INamingConvention namingConvention Methods | Improve this Doc View Source Serialize(TextWriter, Object) Declaration public void Serialize(TextWriter writer, object graph) Parameters Type Name Description TextWriter writer Object graph | Improve this Doc View Source Serialize(IEmitter, Object) Declaration public void Serialize(IEmitter emitter, object graph) Parameters Type Name Description YamlDotNet.Core.IEmitter emitter Object graph Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.YamlSerialization.html": {
    "href": "api/Microsoft.DocAsCode.YamlSerialization.html",
    "title": "Namespace Microsoft.DocAsCode.YamlSerialization | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.YamlSerialization Classes ExtensibleMemberAttribute YamlDeserializer A faÃ§ade for the YAML library with the standard configuration. YamlSerializer"
  },
  "api/Microsoft.DocAsCode.html": {
    "href": "api/Microsoft.DocAsCode.html",
    "title": "Namespace Microsoft.DocAsCode | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode Classes AssemblyLicenseAttribute AssemblyUsageAttribute BuildJsonConfig CascadableOptions CustomAssemblyTextAttribute FileItems FileMapping FileMapping supports two forms: Array form This form supports multiple file mappings, and also allows additional properties per mapping. e.g. \"key\": [ {\"files\": [\"file1\", \"file2\"], \"dest\": \"dest1\"}, {\"files\": \"file3\", \"dest\": \"dest2\"}, {\"files\": [\"file4\", \"file5\"], \"exclude\": [\"file5\"], \"src\": \"folder1\"}, {\"files\": \"Example.yml\", \"src\": \"v1.0\", \"dest\":\"v1.0/api\", \"version\": \"v1.0\"}, {\"files\": \"Example.yml\", \"src\": \"v2.0\", \"dest\":\"v2.0/api\", \"version\": \"v2.0\"} ] Compact form This form supports multiple file patterns in an array e.g. projects: [\"file1\", \"file2\"] FileMappingConverter FileMappingItem Data model for a file-mapping item FileMetadataPairs FileMetadataPairsConverter FileMetadataPairsItem ListWithStringFallback ListWithStringFallbackConverter MergeJsonConfig MetadataJsonConfig MetadataJsonItemConfig OptionUsageAttribute"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefRedirectionReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefRedirectionReader.html",
    "title": "Class XRefRedirectionReader | DocFX website",
    "keywords": "Class XRefRedirectionReader Inheritance Object XRefRedirectionReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public abstract class XRefRedirectionReader : IXRefContainerReader Constructors | Improve this Doc View Source XRefRedirectionReader(String, HashSet<String>) Declaration protected XRefRedirectionReader(string majorName, HashSet<string> mapNames) Parameters Type Name Description String majorName HashSet < String > mapNames Methods | Improve this Doc View Source Find(String) Declaration public XRefSpec Find(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec Implements IXRefContainerReader.Find(String) | Improve this Doc View Source GetMap(String) Declaration protected abstract IXRefContainer GetMap(string name) Parameters Type Name Description String name Returns Type Description IXRefContainer Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefSpecUidComparer.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefSpecUidComparer.html",
    "title": "Class XRefSpecUidComparer | DocFX website",
    "keywords": "Class XRefSpecUidComparer Inheritance Object Comparer < XRefSpec > XRefSpecUidComparer Inherited Members Comparer<XRefSpec>.Create(Comparison<XRefSpec>) System.Collections.Generic.Comparer<Microsoft.DocAsCode.Plugins.XRefSpec>.System.Collections.IComparer.Compare(System.Object, System.Object) Comparer<XRefSpec>.Default Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class XRefSpecUidComparer : Comparer<XRefSpec>, IComparer, IComparer<XRefSpec> Fields | Improve this Doc View Source Instance Declaration public static readonly XRefSpecUidComparer Instance Field Value Type Description XRefSpecUidComparer Methods | Improve this Doc View Source Compare(XRefSpec, XRefSpec) Declaration public override int Compare(XRefSpec x, XRefSpec y) Parameters Type Name Description XRefSpec x XRefSpec y Returns Type Description Int32 Overrides System.Collections.Generic.Comparer<Microsoft.DocAsCode.Plugins.XRefSpec>.Compare(Microsoft.DocAsCode.Plugins.XRefSpec, Microsoft.DocAsCode.Plugins.XRefSpec) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.html",
    "title": "Namespace Microsoft.DocAsCode.Build.Engine | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.Engine Classes ApplyTemplateSettings ArchiveResourceCollection BasicXRefMapReader CompositeResourceCollectionWithOverridden CrossReferenceNotResolvedException DfmServiceProvider DocumentBuildContext DocumentBuilder DocumentBuildParameters EmptyResourceCollection ExportSettings FileCollection FileMetadata FileMetadataItem FileResourceCollection GfmServiceProvider InvalidPreprocessorException JintProcessorHelper JsonTokenTreeServiceProvider ResourceCollection ResourceFileExceedsMaxDepthException ResourceFinder SingleDocumentBuilder Template TemplateBundle TemplateCollection TemplateJintPreprocessor TemplateManager TemplateModelTransformer TemplatePreprocessorResource TemplateProcessor TemplateRendererResource TemplateResourceInfo TemplateUtility TransformModelOptions XRefArchive XRefArchiveBuilder XRefArchiveReader XRefMap XRefMapDownloader XRefMapReader XRefMapRedirection XRefRedirectionReader XRefSpecUidComparer Interfaces ITemplatePreprocessor IXRefContainer IXRefContainerReader Enums ApplyTemplateOptions TemplateRendererType TemplateType XRefArchiveMode"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.BuildInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.BuildInfo.html",
    "title": "Class BuildInfo | DocFX website",
    "keywords": "Class BuildInfo Inheritance Object BuildInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public class BuildInfo Fields | Improve this Doc View Source FileName Declaration public const string FileName = \"build.info\" Field Value Type Description String Properties | Improve this Doc View Source BuildStartTime The build start time for this build. Declaration public DateTime BuildStartTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DocfxVersion The version of docfx. Declaration public string DocfxVersion { get; set; } Property Value Type Description String | Improve this Doc View Source PluginHash The hash info for all plugins. Declaration public string PluginHash { get; set; } Property Value Type Description String | Improve this Doc View Source TemplateHash The hash info for templates. Declaration public string TemplateHash { get; set; } Property Value Type Description String | Improve this Doc View Source Versions The file info for each version. Declaration public List<BuildVersionInfo> Versions { get; } Property Value Type Description List < BuildVersionInfo > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.BuildOutputItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.BuildOutputItem.html",
    "title": "Class BuildOutputItem | DocFX website",
    "keywords": "Class BuildOutputItem Inheritance Object BuildOutputItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public class BuildOutputItem Properties | Improve this Doc View Source DestinationFile The destination file without extension Declaration public string DestinationFile { get; set; } Property Value Type Description String | Improve this Doc View Source Files The output files, key is extension name (e.g. \".html\"), the value is file path (can be random name). Declaration public Dictionary<string, string> Files { get; set; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source ManifestMetadata The metadata in manifest for this item. Declaration public Dictionary<string, object> ManifestMetadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source SourceFile The source file, always from working folder, i.e. start with \"~/\" Declaration public string SourceFile { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.BuildOutputs.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.BuildOutputs.html",
    "title": "Class BuildOutputs | DocFX website",
    "keywords": "Class BuildOutputs Inheritance Object BuildOutputs Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public class BuildOutputs Properties | Improve this Doc View Source Items The items of output. Declaration public List<BuildOutputItem> Items { get; set; } Property Value Type Description List < BuildOutputItem > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.BuildVersionInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.BuildVersionInfo.html",
    "title": "Class BuildVersionInfo | DocFX website",
    "keywords": "Class BuildVersionInfo Inheritance Object BuildVersionInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public class BuildVersionInfo Properties | Improve this Doc View Source Attributes The file link for file attributes.(type is FileAttributes ). e.g. last modified time, md5. Declaration public string Attributes { get; set; } Property Value Type Description String | Improve this Doc View Source ConfigHash The hash info for configs. Include global metadata, file metadata. Declaration public string ConfigHash { get; set; } Property Value Type Description String | Improve this Doc View Source Dependency The file link for dependency (type is Load(TextReader) ). Declaration public string Dependency { get; set; } Property Value Type Description String | Improve this Doc View Source Manifest The file link for the manifest file(type is Manifest ). Declaration public string Manifest { get; set; } Property Value Type Description String | Improve this Doc View Source Output The file link for build outputs (type is BuildOutputs ). Declaration public string Output { get; set; } Property Value Type Description String | Improve this Doc View Source Processors The information for processors. Declaration public List<ProcessorInfo> Processors { get; } Property Value Type Description List < ProcessorInfo > | Improve this Doc View Source VersionName The version name of documents. Declaration public string VersionName { get; set; } Property Value Type Description String | Improve this Doc View Source XRefSpecMap The file link for the XRefMap file(type is XRefMap ). Declaration public string XRefSpecMap { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.ChangeItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.ChangeItem.html",
    "title": "Class ChangeItem | DocFX website",
    "keywords": "Class ChangeItem Inheritance Object ChangeItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public sealed class ChangeItem Properties | Improve this Doc View Source FilePath Declaration public string FilePath { get; set; } Property Value Type Description String | Improve this Doc View Source Kind Declaration public ChangeKindWithDependency Kind { get; set; } Property Value Type Description ChangeKindWithDependency Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.ChangeKind.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.ChangeKind.html",
    "title": "Enum ChangeKind | DocFX website",
    "keywords": "Enum ChangeKind Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public enum ChangeKind Fields Name Description Created Deleted None Updated Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.ChangeKindWithDependency.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.ChangeKindWithDependency.html",
    "title": "Enum ChangeKindWithDependency | DocFX website",
    "keywords": "Enum ChangeKindWithDependency Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public enum ChangeKindWithDependency Fields Name Description Created Deleted DependencyUpdated None Updated Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.ChangeList.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.ChangeList.html",
    "title": "Class ChangeList | DocFX website",
    "keywords": "Class ChangeList Inheritance Object ChangeList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public sealed class ChangeList : IEnumerable<ChangeItem>, IEnumerable Methods | Improve this Doc View Source Add(String, ChangeKind) Declaration public void Add(string filePath, ChangeKind kind) Parameters Type Name Description String filePath ChangeKind kind | Improve this Doc View Source GetCreatedFiles() Declaration public IEnumerable<string> GetCreatedFiles() Returns Type Description IEnumerable < String > | Improve this Doc View Source GetDeletedFiles() Declaration public IEnumerable<string> GetDeletedFiles() Returns Type Description IEnumerable < String > | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator Implements IEnumerable.GetEnumerator() | Improve this Doc View Source GetUpdatedFiles() Declaration public IEnumerable<string> GetUpdatedFiles() Returns Type Description IEnumerable < String > | Improve this Doc View Source Parse(String, String) Declaration public static ChangeList Parse(string tsvFile, string baseDir) Parameters Type Name Description String tsvFile String baseDir Returns Type Description ChangeList Explicit Interface Implementations | Improve this Doc View Source IEnumerable<ChangeItem>.GetEnumerator() Declaration IEnumerator<ChangeItem> IEnumerable<ChangeItem>.GetEnumerator() Returns Type Description IEnumerator < ChangeItem > Implements IEnumerable<ChangeItem>.GetEnumerator() Extension Methods TaskHelper.ForEachInParallelAsync<ChangeItem>(Func<ChangeItem, Task>, Int32) TaskHelper.ForEachInParallelAsync<ChangeItem>(Func<ChangeItem, Task>) TaskHelper.SelectInParallelAsync<ChangeItem, TResult>(Func<ChangeItem, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<ChangeItem, TResult>(Func<ChangeItem, Task<TResult>>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.DependencyGraph.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.DependencyGraph.html",
    "title": "Class DependencyGraph | DocFX website",
    "keywords": "Class DependencyGraph Inheritance Object DependencyGraph Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public class DependencyGraph Constructors | Improve this Doc View Source DependencyGraph() Declaration public DependencyGraph() Properties | Improve this Doc View Source Keys Declaration public IEnumerable<string> Keys { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source GetAllDependency(String) Declaration public SortedSet<string> GetAllDependency(string key) Parameters Type Name Description String key Returns Type Description SortedSet < String > | Improve this Doc View Source GetDirectDependency(String) Declaration public SortedSet<string> GetDirectDependency(string key) Parameters Type Name Description String key Returns Type Description SortedSet < String > | Improve this Doc View Source HasDependency(String) Declaration public bool HasDependency(string key) Parameters Type Name Description String key Returns Type Description Boolean | Improve this Doc View Source Load(TextReader) Declaration public static DependencyGraph Load(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description DependencyGraph | Improve this Doc View Source ReportDependency(String, IEnumerable<String>) Declaration public void ReportDependency(string key, IEnumerable<string> values) Parameters Type Name Description String key IEnumerable < String > values | Improve this Doc View Source ReportDependency(String, String) Declaration public void ReportDependency(string key, string value) Parameters Type Name Description String key String value | Improve this Doc View Source Save(TextWriter) Declaration public void Save(TextWriter writer) Parameters Type Name Description TextWriter writer Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem.html",
    "title": "Class FileAttributeItem | DocFX website",
    "keywords": "Class FileAttributeItem Inheritance Object FileAttributeItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public class FileAttributeItem Properties | Improve this Doc View Source File The file path Declaration public string File { get; set; } Property Value Type Description String | Improve this Doc View Source LastModifiedTime Last modified time Declaration public DateTime LastModifiedTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source MD5 MD5 string of the file content Declaration public string MD5 { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.FileAttributes.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.FileAttributes.html",
    "title": "Class FileAttributes | DocFX website",
    "keywords": "Class FileAttributes Inheritance Object Dictionary < String , FileAttributeItem > FileAttributes Inherited Members Dictionary<String, FileAttributeItem>.Add(String, FileAttributeItem) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>) Dictionary<String, FileAttributeItem>.Clear() Dictionary<String, FileAttributeItem>.ContainsKey(String) Dictionary<String, FileAttributeItem>.ContainsValue(FileAttributeItem) Dictionary<String, FileAttributeItem>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>>.GetEnumerator() Dictionary<String, FileAttributeItem>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, FileAttributeItem>.OnDeserialization(Object) Dictionary<String, FileAttributeItem>.Remove(String) Dictionary<String, FileAttributeItem>.TryGetValue(String, FileAttributeItem) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>[], System.Int32) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IDictionary.set_Item(System.Object, System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IDictionary.Add(System.Object, System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IDictionary.Contains(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IDictionary.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IDictionary.Remove(System.Object) Dictionary<String, FileAttributeItem>.Comparer Dictionary<String, FileAttributeItem>.Count Dictionary<String, FileAttributeItem>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.Keys Dictionary<String, FileAttributeItem>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.Values Dictionary<String, FileAttributeItem>.Item[String] System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>>.IsReadOnly System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.ICollection.SyncRoot System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IDictionary.IsFixedSize System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IDictionary.IsReadOnly System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IDictionary.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IDictionary.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Incrementals.FileAttributeItem>.System.Collections.IDictionary.Item[System.Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax public class FileAttributes : Dictionary<string, FileAttributeItem>, IDictionary<string, FileAttributeItem>, ICollection<KeyValuePair<string, FileAttributeItem>>, IDictionary, ICollection, IReadOnlyDictionary<string, FileAttributeItem>, IReadOnlyCollection<KeyValuePair<string, FileAttributeItem>>, IEnumerable<KeyValuePair<string, FileAttributeItem>>, IEnumerable, ISerializable, IDeserializationCallback Extension Methods TaskHelper.ForEachInParallelAsync<KeyValuePair<String, FileAttributeItem>>(Func<KeyValuePair<String, FileAttributeItem>, Task>, Int32) TaskHelper.ForEachInParallelAsync<KeyValuePair<String, FileAttributeItem>>(Func<KeyValuePair<String, FileAttributeItem>, Task>) TaskHelper.SelectInParallelAsync<KeyValuePair<String, FileAttributeItem>, TResult>(Func<KeyValuePair<String, FileAttributeItem>, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<KeyValuePair<String, FileAttributeItem>, TResult>(Func<KeyValuePair<String, FileAttributeItem>, Task<TResult>>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Incrementals.IncrementalCheckAttribute.html": {
    "href": "api/Microsoft.DocAsCode.Build.Incrementals.IncrementalCheckAttribute.html",
    "title": "Class IncrementalCheckAttribute | DocFX website",
    "keywords": "Class IncrementalCheckAttribute Inheritance Object Attribute IncrementalCheckAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Incrementals Assembly :Microsoft.DocAsCode.Build.Incrementals.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field, AllowMultiple = true, Inherited = true)] public class IncrementalCheckAttribute : Attribute, _Attribute Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutCheckAndCleanup.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutCheckAndCleanup.html",
    "title": "Class LayoutCheckAndCleanup | DocFX website",
    "keywords": "Class LayoutCheckAndCleanup Inheritance Object LayoutCheckAndCleanup Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class LayoutCheckAndCleanup : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) The yaml layout should be namespace -- class level -- method level Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutItem.html",
    "title": "Enum LayoutItem | DocFX website",
    "keywords": "Enum LayoutItem Defines the layout for an API page Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public enum LayoutItem Fields Name Description Exception ExternalComments Hierarchy InlineComments MemberTable SeeAlso Syntax Title Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.LinkItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.LinkItem.html",
    "title": "Class LinkItem | DocFX website",
    "keywords": "Class LinkItem Inheritance Object LinkItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class LinkItem Properties | Improve this Doc View Source DisplayName Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string DisplayName { get; set; } Property Value Type Description String | Improve this Doc View Source DisplayNamesWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string DisplayNamesWithType { get; set; } Property Value Type Description String | Improve this Doc View Source DisplayQualifiedNames Declaration [YamlMember(Alias = \"qualifiedName\")] [JsonProperty(\"qualifiedName\")] public string DisplayQualifiedNames { get; set; } Property Value Type Description String | Improve this Doc View Source Href The url path for current source, should be resolved at some late stage Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source IsExternalPath The external path for current source if it is not locally available Declaration [YamlMember(Alias = \"isExternal\")] [JsonProperty(\"isExternal\")] public bool IsExternalPath { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public LinkItem Clone() Returns Type Description LinkItem Extension Methods YamlViewModelExtensions.ToSpecViewModel() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem.html",
    "title": "Class MetadataItem | DocFX website",
    "keywords": "Class MetadataItem Inheritance Object MetadataItem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class MetadataItem : ICloneable Properties | Improve this Doc View Source AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] [MergeOption(MergeOption.Ignore)] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source CommentModel Declaration [YamlIgnore] [JsonIgnore] public TripleSlashCommentModel CommentModel { get; set; } Property Value Type Description TripleSlashCommentModel | Improve this Doc View Source DisplayNames Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public SortedList<SyntaxLanguage, string> DisplayNames { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > | Improve this Doc View Source DisplayNamesWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public SortedList<SyntaxLanguage, string> DisplayNamesWithType { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > | Improve this Doc View Source DisplayQualifiedNames Declaration [YamlMember(Alias = \"qualifiedName\")] [JsonProperty(\"qualifiedName\")] public SortedList<SyntaxLanguage, string> DisplayQualifiedNames { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ExceptionInfo> Exceptions { get; set; } Property Value Type Description List < ExceptionInfo > | Improve this Doc View Source ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<string> ExtensionMethods { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<string> Implements { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<string> Inheritance { get; set; } Property Value Type Description List < String > | Improve this Doc View Source InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<string> InheritedMembers { get; set; } Property Value Type Description List < String > | Improve this Doc View Source IsExplicitInterfaceImplementation Declaration [YamlMember(Alias = \"isEii\")] [JsonProperty(\"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsInvalid Declaration [YamlIgnore] [JsonIgnore] public bool IsInvalid { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Items Declaration [YamlMember(Alias = \"items\")] [JsonProperty(\"items\")] public List<MetadataItem> Items { get; set; } Property Value Type Description List < MetadataItem > | Improve this Doc View Source Language Declaration [YamlMember(Alias = \"language\")] [JsonProperty(\"language\")] public SyntaxLanguage Language { get; set; } Property Value Type Description SyntaxLanguage | Improve this Doc View Source Layout Declaration public List<LayoutItem> Layout { get; set; } Property Value Type Description List < LayoutItem > | Improve this Doc View Source Modifiers Declaration [YamlMember(Alias = \"modifiers\")] [JsonProperty(\"modifiers\")] public SortedList<SyntaxLanguage, List<string>> Modifiers { get; set; } Property Value Type Description SortedList < SyntaxLanguage , List < String >> | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public string NamespaceName { get; set; } Property Value Type Description String | Improve this Doc View Source Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public string Overridden { get; set; } Property Value Type Description String | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public MetadataItem Parent { get; set; } Property Value Type Description MetadataItem | Improve this Doc View Source RawComment Declaration [YamlIgnore] [JsonIgnore] public string RawComment { get; set; } Property Value Type Description String | Improve this Doc View Source References Declaration [YamlMember(Alias = \"references\")] [JsonProperty(\"references\")] public Dictionary<string, ReferenceItem> References { get; set; } Property Value Type Description Dictionary < String , ReferenceItem > | Improve this Doc View Source Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<LinkInfo> SeeAlsos { get; set; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<LinkInfo> Sees { get; set; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public SyntaxDetail Syntax { get; set; } Property Value Type Description SyntaxDetail | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public MemberType Type { get; set; } Property Value Type Description MemberType Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object Implements ICloneable.Clone() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Extension Methods YamlViewModelExtensions.ShrinkToSimpleToc() YamlViewModelExtensions.ShrinkToSimpleTocWithNamespaceNotEmpty() YamlViewModelExtensions.ToTocViewModel() YamlViewModelExtensions.ToTocItemViewModel() YamlViewModelExtensions.ToPageViewModel() YamlViewModelExtensions.ToItemViewModel() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataModel.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataModel.html",
    "title": "Class MetadataModel | DocFX website",
    "keywords": "Class MetadataModel Inheritance Object MetadataModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class MetadataModel Properties | Improve this Doc View Source Members Declaration public List<MetadataItem> Members { get; set; } Property Value Type Description List < MetadataItem > | Improve this Doc View Source TocYamlViewModel Declaration public MetadataItem TocYamlViewModel { get; set; } Property Value Type Description MetadataItem Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameOptions.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameOptions.html",
    "title": "Enum NameOptions | DocFX website",
    "keywords": "Enum NameOptions Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Flags] public enum NameOptions Fields Name Description All None Qualified UseAlias WithGenericParameter WithParameter WithType Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitor.html",
    "title": "Class NameVisitor | DocFX website",
    "keywords": "Class NameVisitor Inheritance Object Microsoft.CodeAnalysis.SymbolVisitor NameVisitor Inherited Members Microsoft.CodeAnalysis.SymbolVisitor.Visit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.DefaultVisit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitField(Microsoft.CodeAnalysis.IFieldSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitNamedType(Microsoft.CodeAnalysis.INamedTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class NameVisitor : SymbolVisitor Constructors | Improve this Doc View Source NameVisitor() Declaration protected NameVisitor() Methods | Improve this Doc View Source Append(String) Declaration protected void Append(string text) Parameters Type Name Description String text Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitorCreator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitorCreator.html",
    "title": "Class NameVisitorCreator | DocFX website",
    "keywords": "Class NameVisitorCreator Inheritance Object NameVisitorCreator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class NameVisitorCreator Constructors | Improve this Doc View Source NameVisitorCreator() Declaration protected NameVisitorCreator() Methods | Improve this Doc View Source Create() Declaration protected abstract NameVisitor Create() Returns Type Description NameVisitor | Improve this Doc View Source GetCSharp(NameOptions) Declaration public static NameVisitorCreator GetCSharp(NameOptions option) Parameters Type Name Description NameOptions option Returns Type Description NameVisitorCreator | Improve this Doc View Source GetName(ISymbol) Declaration public string GetName(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description String | Improve this Doc View Source GetVB(NameOptions) Declaration public static NameVisitorCreator GetVB(NameOptions option) Parameters Type Name Description NameOptions option Returns Type Description NameVisitorCreator Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NormalizeSyntax.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NormalizeSyntax.html",
    "title": "Class NormalizeSyntax | DocFX website",
    "keywords": "Class NormalizeSyntax Inheritance Object NormalizeSyntax Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class NormalizeSyntax : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItem.html",
    "title": "Class ReferenceItem | DocFX website",
    "keywords": "Class ReferenceItem Inheritance Object ReferenceItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ReferenceItem Properties | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String | Improve this Doc View Source IsDefinition Declaration [YamlMember(Alias = \"isDefinition\")] [JsonProperty(\"isDefinition\")] public bool ? IsDefinition { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String | Improve this Doc View Source Parts Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public SortedList<SyntaxLanguage, List<LinkItem>> Parts { get; set; } Property Value Type Description SortedList < SyntaxLanguage , List < LinkItem >> Methods | Improve this Doc View Source Clone() Declaration public ReferenceItem Clone() Returns Type Description ReferenceItem | Improve this Doc View Source Merge(ReferenceItem) Declaration public void Merge(ReferenceItem other) Parameters Type Name Description ReferenceItem other Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItemVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItemVisitor.html",
    "title": "Class ReferenceItemVisitor | DocFX website",
    "keywords": "Class ReferenceItemVisitor Inheritance Object Microsoft.CodeAnalysis.SymbolVisitor ReferenceItemVisitor Inherited Members Microsoft.CodeAnalysis.SymbolVisitor.Visit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.DefaultVisit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitField(Microsoft.CodeAnalysis.IFieldSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class ReferenceItemVisitor : SymbolVisitor Constructors | Improve this Doc View Source ReferenceItemVisitor(ReferenceItem) Declaration protected ReferenceItemVisitor(ReferenceItem referenceItem) Parameters Type Name Description ReferenceItem referenceItem Fields | Improve this Doc View Source QualifiedFormat Declaration public static readonly SymbolDisplayFormat QualifiedFormat Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat | Improve this Doc View Source QualifiedFormatWithoutGenericeParameter Declaration public static readonly SymbolDisplayFormat QualifiedFormatWithoutGenericeParameter Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat | Improve this Doc View Source ShortFormat Declaration public static readonly SymbolDisplayFormat ShortFormat Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat | Improve this Doc View Source ShortFormatWithoutGenericeParameter Declaration public static readonly SymbolDisplayFormat ShortFormatWithoutGenericeParameter Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat Properties | Improve this Doc View Source ReferenceItem Declaration protected ReferenceItem ReferenceItem { get; } Property Value Type Description ReferenceItem Methods | Improve this Doc View Source AddBeginGenericParameter() Declaration protected abstract void AddBeginGenericParameter() | Improve this Doc View Source AddEndGenericParameter() Declaration protected abstract void AddEndGenericParameter() | Improve this Doc View Source AddGenericParameterSeparator() Declaration protected abstract void AddGenericParameterSeparator() | Improve this Doc View Source AddLinkItems(INamedTypeSymbol, Boolean) Declaration protected abstract void AddLinkItems(INamedTypeSymbol symbol, bool withGenericeParameter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol Boolean withGenericeParameter | Improve this Doc View Source VisitNamedType(INamedTypeSymbol) Declaration public override void VisitNamedType(INamedTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitNamedType(Microsoft.CodeAnalysis.INamedTypeSymbol) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolverContext.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolverContext.html",
    "title": "Class ResolverContext | DocFX website",
    "keywords": "Class ResolverContext Inheritance Object ResolverContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ResolverContext Properties | Improve this Doc View Source ApiFolder Declaration public string ApiFolder { get; set; } Property Value Type Description String | Improve this Doc View Source PreserveRawInlineComments Declaration public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source References Declaration public Dictionary<string, ReferenceItem> References { get; set; } Property Value Type Description Dictionary < String , ReferenceItem > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolveReference.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolveReference.html",
    "title": "Class ResolveReference | DocFX website",
    "keywords": "Class ResolveReference Inheritance Object ResolveReference Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ResolveReference : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SetParent.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SetParent.html",
    "title": "Class SetParent | DocFX website",
    "keywords": "Class SetParent Inheritance Object SetParent Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class SetParent : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline.Run(MetadataModel, ResolverContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SimpleYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SimpleYamlModelGenerator.html",
    "title": "Class SimpleYamlModelGenerator | DocFX website",
    "keywords": "Class SimpleYamlModelGenerator Inheritance Object YamlModelGenerator SimpleYamlModelGenerator Inherited Members YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class SimpleYamlModelGenerator : YamlModelGenerator Constructors | Improve this Doc View Source SimpleYamlModelGenerator(SyntaxLanguage) Declaration protected SimpleYamlModelGenerator(SyntaxLanguage language) Parameters Type Name Description SyntaxLanguage language Fields | Improve this Doc View Source QualifiedFormat Declaration public static readonly SymbolDisplayFormat QualifiedFormat Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat | Improve this Doc View Source ShortFormat Declaration public static readonly SymbolDisplayFormat ShortFormat Field Value Type Description Microsoft.CodeAnalysis.SymbolDisplayFormat Properties | Improve this Doc View Source Language Declaration public SyntaxLanguage Language { get; } Property Value Type Description SyntaxLanguage Methods | Improve this Doc View Source GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter) Declaration protected abstract void GenerateReference(ISymbol symbol, ReferenceItem reference, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol ReferenceItem reference SymbolVisitorAdapter adapter | Improve this Doc View Source GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Declaration protected abstract string GetSyntaxContent(MemberType typeKind, ISymbol symbol, SymbolVisitorAdapter adapter) Parameters Type Name Description MemberType typeKind Microsoft.CodeAnalysis.ISymbol symbol SymbolVisitorAdapter adapter Returns Type Description String Operators | Improve this Doc View Source Addition(SimpleYamlModelGenerator, SimpleYamlModelGenerator) Declaration public static CompositeYamlModelGenerator operator +(SimpleYamlModelGenerator left, SimpleYamlModelGenerator right) Parameters Type Name Description SimpleYamlModelGenerator left SimpleYamlModelGenerator right Returns Type Description CompositeYamlModelGenerator Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SymbolVisitorAdapter.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SymbolVisitorAdapter.html",
    "title": "Class SymbolVisitorAdapter | DocFX website",
    "keywords": "Class SymbolVisitorAdapter Inheritance Object Microsoft.CodeAnalysis.SymbolVisitor < MetadataItem > SymbolVisitorAdapter Inherited Members Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.Visit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol) Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class SymbolVisitorAdapter : SymbolVisitor<MetadataItem> Constructors | Improve this Doc View Source SymbolVisitorAdapter(YamlModelGenerator, SyntaxLanguage, Compilation, Boolean, String, IReadOnlyDictionary<Compilation, IEnumerable<IMethodSymbol>>) Declaration public SymbolVisitorAdapter(YamlModelGenerator generator, SyntaxLanguage language, Compilation compilation, bool preserveRawInlineComments = false, string filterConfigFile = null, IReadOnlyDictionary<Compilation, IEnumerable<IMethodSymbol>> extensionMethods = null) Parameters Type Name Description YamlModelGenerator generator SyntaxLanguage language Microsoft.CodeAnalysis.Compilation compilation Boolean preserveRawInlineComments String filterConfigFile IReadOnlyDictionary < Microsoft.CodeAnalysis.Compilation , IEnumerable < Microsoft.CodeAnalysis.IMethodSymbol >> extensionMethods Properties | Improve this Doc View Source FilterVisitor Declaration public IFilterVisitor FilterVisitor { get; } Property Value Type Description IFilterVisitor | Improve this Doc View Source Language Declaration public SyntaxLanguage Language { get; } Property Value Type Description SyntaxLanguage Methods | Improve this Doc View Source AddReference(ISymbol) Declaration public string AddReference(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description String | Improve this Doc View Source AddReference(String, String) Declaration public string AddReference(string id, string commentId) Parameters Type Name Description String id String commentId Returns Type Description String | Improve this Doc View Source AddSpecReference(ISymbol, IReadOnlyList<String>, IReadOnlyList<String>) Declaration public string AddSpecReference(ISymbol symbol, IReadOnlyList<string> typeGenericParameters = null, IReadOnlyList<string> methodGenericParameters = null) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol IReadOnlyList < String > typeGenericParameters IReadOnlyList < String > methodGenericParameters Returns Type Description String | Improve this Doc View Source DefaultVisit(ISymbol) Declaration public override MetadataItem DefaultVisit(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.DefaultVisit(Microsoft.CodeAnalysis.ISymbol) | Improve this Doc View Source VisitAssembly(IAssemblySymbol) Declaration public override MetadataItem VisitAssembly(IAssemblySymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IAssemblySymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol) | Improve this Doc View Source VisitEvent(IEventSymbol) Declaration public override MetadataItem VisitEvent(IEventSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol) | Improve this Doc View Source VisitField(IFieldSymbol) Declaration public override MetadataItem VisitField(IFieldSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitField(Microsoft.CodeAnalysis.IFieldSymbol) | Improve this Doc View Source VisitMethod(IMethodSymbol) Declaration public override MetadataItem VisitMethod(IMethodSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol) | Improve this Doc View Source VisitNamedType(INamedTypeSymbol) Declaration public override MetadataItem VisitNamedType(INamedTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitNamedType(Microsoft.CodeAnalysis.INamedTypeSymbol) | Improve this Doc View Source VisitNamespace(INamespaceSymbol) Declaration public override MetadataItem VisitNamespace(INamespaceSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.INamespaceSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol) | Improve this Doc View Source VisitProperty(IPropertySymbol) Declaration public override MetadataItem VisitProperty(IPropertySymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SyntaxDetail.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SyntaxDetail.html",
    "title": "Class SyntaxDetail | DocFX website",
    "keywords": "Class SyntaxDetail Inheritance Object SyntaxDetail Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class SyntaxDetail Properties | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public SortedList<SyntaxLanguage, string> Content { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ApiParameter> Parameters { get; set; } Property Value Type Description List < ApiParameter > | Improve this Doc View Source Return Declaration [YamlMember(Alias = \"return\")] [JsonProperty(\"return\")] public ApiParameter Return { get; set; } Property Value Type Description ApiParameter | Improve this Doc View Source TypeParameters Declaration [YamlMember(Alias = \"typeParameters\")] [JsonProperty(\"typeParameters\")] public List<ApiParameter> TypeParameters { get; set; } Property Value Type Description List < ApiParameter > Extension Methods YamlViewModelExtensions.ToSyntaxDetailViewModel() JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentModel.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentModel.html",
    "title": "Class TripleSlashCommentModel | DocFX website",
    "keywords": "Class TripleSlashCommentModel Inheritance Object TripleSlashCommentModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class TripleSlashCommentModel Properties | Improve this Doc View Source Examples Declaration public List<string> Examples { get; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration public List<ExceptionInfo> Exceptions { get; } Property Value Type Description List < ExceptionInfo > | Improve this Doc View Source Parameters Declaration public Dictionary<string, string> Parameters { get; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source Remarks Declaration public string Remarks { get; } Property Value Type Description String | Improve this Doc View Source Returns Declaration public string Returns { get; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration public List<LinkInfo> SeeAlsos { get; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source Sees Declaration public List<LinkInfo> Sees { get; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source Summary Declaration public string Summary { get; } Property Value Type Description String | Improve this Doc View Source TypeParameters Declaration public Dictionary<string, string> TypeParameters { get; } Property Value Type Description Dictionary < String , String > Methods | Improve this Doc View Source CreateModel(String, SyntaxLanguage, ITripleSlashCommentParserContext) Declaration public static TripleSlashCommentModel CreateModel(string xml, SyntaxLanguage language, ITripleSlashCommentParserContext context) Parameters Type Name Description String xml SyntaxLanguage language ITripleSlashCommentParserContext context Returns Type Description TripleSlashCommentModel | Improve this Doc View Source GetParameter(String) Declaration public string GetParameter(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source GetTypeParameter(String) Declaration public string GetTypeParameter(string name) Parameters Type Name Description String name Returns Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentParserContext.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentParserContext.html",
    "title": "Class TripleSlashCommentParserContext | DocFX website",
    "keywords": "Class TripleSlashCommentParserContext Inheritance Object TripleSlashCommentParserContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class TripleSlashCommentParserContext : ITripleSlashCommentParserContext Properties | Improve this Doc View Source AddReferenceDelegate Declaration public Action<string, string> AddReferenceDelegate { get; set; } Property Value Type Description Action < String , String > Implements ITripleSlashCommentParserContext.AddReferenceDelegate | Improve this Doc View Source Normalize Declaration public bool Normalize { get; set; } Property Value Type Description Boolean | Improve this Doc View Source PreserveRawInlineComments Declaration public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean Implements ITripleSlashCommentParserContext.PreserveRawInlineComments | Improve this Doc View Source Source Declaration public SourceDetail Source { get; set; } Property Value Type Description SourceDetail Implements ITripleSlashCommentParserContext.Source Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentTransformer.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentTransformer.html",
    "title": "Class TripleSlashCommentTransformer | DocFX website",
    "keywords": "Class TripleSlashCommentTransformer Inheritance Object TripleSlashCommentTransformer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class TripleSlashCommentTransformer Constructors | Improve this Doc View Source TripleSlashCommentTransformer() Declaration public TripleSlashCommentTransformer() Methods | Improve this Doc View Source Transform(String, SyntaxLanguage) Declaration public XDocument Transform(string xml, SyntaxLanguage language) Parameters Type Name Description String xml SyntaxLanguage language Returns Type Description XDocument Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBNameVisitorCreator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBNameVisitorCreator.html",
    "title": "Class VBNameVisitorCreator | DocFX website",
    "keywords": "Class VBNameVisitorCreator Inheritance Object NameVisitorCreator VBNameVisitorCreator Inherited Members NameVisitorCreator.GetName(ISymbol) NameVisitorCreator.GetCSharp(NameOptions) NameVisitorCreator.GetVB(NameOptions) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class VBNameVisitorCreator : NameVisitorCreator Constructors | Improve this Doc View Source VBNameVisitorCreator(NameOptions) Declaration public VBNameVisitorCreator(NameOptions options) Parameters Type Name Description NameOptions options Methods | Improve this Doc View Source Create() Declaration protected override NameVisitor Create() Returns Type Description NameVisitor Overrides NameVisitorCreator.Create() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBReferenceItemVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBReferenceItemVisitor.html",
    "title": "Class VBReferenceItemVisitor | DocFX website",
    "keywords": "Class VBReferenceItemVisitor Inheritance Object Microsoft.CodeAnalysis.SymbolVisitor ReferenceItemVisitor VBReferenceItemVisitor Inherited Members ReferenceItemVisitor.ShortFormat ReferenceItemVisitor.QualifiedFormat ReferenceItemVisitor.ShortFormatWithoutGenericeParameter ReferenceItemVisitor.QualifiedFormatWithoutGenericeParameter ReferenceItemVisitor.ReferenceItem ReferenceItemVisitor.VisitNamedType(INamedTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.Visit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.DefaultVisit(Microsoft.CodeAnalysis.ISymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol) Microsoft.CodeAnalysis.SymbolVisitor.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class VBReferenceItemVisitor : ReferenceItemVisitor Constructors | Improve this Doc View Source VBReferenceItemVisitor(ReferenceItem) Declaration public VBReferenceItemVisitor(ReferenceItem referenceItem) Parameters Type Name Description ReferenceItem referenceItem Methods | Improve this Doc View Source AddBeginGenericParameter() Declaration protected override void AddBeginGenericParameter() Overrides ReferenceItemVisitor.AddBeginGenericParameter() | Improve this Doc View Source AddEndGenericParameter() Declaration protected override void AddEndGenericParameter() Overrides ReferenceItemVisitor.AddEndGenericParameter() | Improve this Doc View Source AddGenericParameterSeparator() Declaration protected override void AddGenericParameterSeparator() Overrides ReferenceItemVisitor.AddGenericParameterSeparator() | Improve this Doc View Source AddLinkItems(INamedTypeSymbol, Boolean) Declaration protected override void AddLinkItems(INamedTypeSymbol symbol, bool withGenericeParameter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol Boolean withGenericeParameter Overrides ReferenceItemVisitor.AddLinkItems(INamedTypeSymbol, Boolean) | Improve this Doc View Source VisitArrayType(IArrayTypeSymbol) Declaration public override void VisitArrayType(IArrayTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IArrayTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol) | Improve this Doc View Source VisitEvent(IEventSymbol) Declaration public override void VisitEvent(IEventSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol) | Improve this Doc View Source VisitField(IFieldSymbol) Declaration public override void VisitField(IFieldSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitField(Microsoft.CodeAnalysis.IFieldSymbol) | Improve this Doc View Source VisitMethod(IMethodSymbol) Declaration public override void VisitMethod(IMethodSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol) | Improve this Doc View Source VisitNamespace(INamespaceSymbol) Declaration public override void VisitNamespace(INamespaceSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.INamespaceSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol) | Improve this Doc View Source VisitPointerType(IPointerTypeSymbol) Declaration public override void VisitPointerType(IPointerTypeSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IPointerTypeSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol) | Improve this Doc View Source VisitProperty(IPropertySymbol) Declaration public override void VisitProperty(IPropertySymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol) | Improve this Doc View Source VisitTypeParameter(ITypeParameterSymbol) Declaration public override void VisitTypeParameter(ITypeParameterSymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ITypeParameterSymbol symbol Overrides Microsoft.CodeAnalysis.SymbolVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBYamlModelGenerator.html",
    "title": "Class VBYamlModelGenerator | DocFX website",
    "keywords": "Class VBYamlModelGenerator Inheritance Object YamlModelGenerator SimpleYamlModelGenerator VBYamlModelGenerator Inherited Members SimpleYamlModelGenerator.ShortFormat SimpleYamlModelGenerator.QualifiedFormat SimpleYamlModelGenerator.Language Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class VBYamlModelGenerator : SimpleYamlModelGenerator Constructors | Improve this Doc View Source VBYamlModelGenerator() Declaration public VBYamlModelGenerator() Methods | Improve this Doc View Source DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter) Declaration protected override void GenerateReference(ISymbol symbol, ReferenceItem reference, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol ReferenceItem reference SymbolVisitorAdapter adapter Overrides SimpleYamlModelGenerator.GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter) | Improve this Doc View Source GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Declaration protected override string GetSyntaxContent(MemberType typeKind, ISymbol symbol, SymbolVisitorAdapter adapter) Parameters Type Name Description MemberType typeKind Microsoft.CodeAnalysis.ISymbol symbol SymbolVisitorAdapter adapter Returns Type Description String Overrides SimpleYamlModelGenerator.GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VisitorHelper.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VisitorHelper.html",
    "title": "Class VisitorHelper | DocFX website",
    "keywords": "Class VisitorHelper Inheritance Object VisitorHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class VisitorHelper Methods | Improve this Doc View Source FeedComments(MetadataItem, ITripleSlashCommentParserContext) Declaration public static void FeedComments(MetadataItem item, ITripleSlashCommentParserContext context) Parameters Type Name Description MetadataItem item ITripleSlashCommentParserContext context | Improve this Doc View Source GetCommentId(ISymbol) Declaration public static string GetCommentId(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description String | Improve this Doc View Source GetId(ISymbol) Declaration public static string GetId(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description String | Improve this Doc View Source GetMemberTypeFromTypeKind(TypeKind) Declaration public static MemberType GetMemberTypeFromTypeKind(TypeKind typeKind) Parameters Type Name Description Microsoft.CodeAnalysis.TypeKind typeKind Returns Type Description MemberType | Improve this Doc View Source GetParameterDescription(ISymbol, MetadataItem, String, Boolean, ITripleSlashCommentParserContext) Declaration public static ApiParameter GetParameterDescription(ISymbol symbol, MetadataItem item, string id, bool isReturn, ITripleSlashCommentParserContext context) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol MetadataItem item String id Boolean isReturn ITripleSlashCommentParserContext context Returns Type Description ApiParameter | Improve this Doc View Source GetSourceDetail(ISymbol) Declaration public static SourceDetail GetSourceDetail(ISymbol symbol) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol Returns Type Description SourceDetail | Improve this Doc View Source GetTypeParameterDescription(ITypeParameterSymbol, MetadataItem, ITripleSlashCommentParserContext) Declaration public static ApiParameter GetTypeParameterDescription(ITypeParameterSymbol symbol, MetadataItem item, ITripleSlashCommentParserContext context) Parameters Type Name Description Microsoft.CodeAnalysis.ITypeParameterSymbol symbol MetadataItem item ITripleSlashCommentParserContext context Returns Type Description ApiParameter"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlMetadataResolver.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlMetadataResolver.html",
    "title": "Class YamlMetadataResolver | DocFX website",
    "keywords": "Class YamlMetadataResolver Inheritance Object YamlMetadataResolver Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class YamlMetadataResolver Methods | Improve this Doc View Source ExecutePipeline(MetadataModel, ResolverContext) Declaration public static void ExecutePipeline(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context | Improve this Doc View Source ResolveMetadata(Dictionary<String, MetadataItem>, Dictionary<String, ReferenceItem>, String, Boolean, IEnumerable<String>) TODO: input Namespace list instead; TODO: Save to ...yml.map Declaration public static MetadataModel ResolveMetadata(Dictionary<string, MetadataItem> allMembers, Dictionary<string, ReferenceItem> allReferences, string apiFolder, bool preserveRawInlineComments, IEnumerable<string> externalReferencePackages) Parameters Type Name Description Dictionary < String , MetadataItem > allMembers Dictionary < String , ReferenceItem > allReferences String apiFolder Boolean preserveRawInlineComments IEnumerable < String > externalReferencePackages Returns Type Description MetadataModel"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlModelGenerator.html",
    "title": "Class YamlModelGenerator | DocFX website",
    "keywords": "Class YamlModelGenerator Inheritance Object YamlModelGenerator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public abstract class YamlModelGenerator Methods | Improve this Doc View Source DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter | Improve this Doc View Source GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter | Improve this Doc View Source GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter | Improve this Doc View Source GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter | Improve this Doc View Source GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter | Improve this Doc View Source GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description Microsoft.CodeAnalysis.IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlViewModelExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlViewModelExtensions.html",
    "title": "Class YamlViewModelExtensions | DocFX website",
    "keywords": "Class YamlViewModelExtensions Inheritance Object YamlViewModelExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Metadata.ManagedReference Assembly :Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class YamlViewModelExtensions Methods | Improve this Doc View Source AllowMultipleItems(MemberType) Allow multiple items in one yml file Declaration public static bool AllowMultipleItems(this MemberType type) Parameters Type Name Description MemberType type Returns Type Description Boolean | Improve this Doc View Source GetLanguageProperty<TValue>(SortedList<SyntaxLanguage, TValue>, SyntaxLanguage, TValue) Declaration public static TValue GetLanguageProperty<TValue>(this SortedList<SyntaxLanguage, TValue> dict, SyntaxLanguage language, TValue defaultValue = null)where TValue : class Parameters Type Name Description SortedList < SyntaxLanguage , TValue> dict SyntaxLanguage language TValue defaultValue Returns Type Description TValue Type Parameters Name Description TValue | Improve this Doc View Source IsPageLevel(MemberType) Declaration public static bool IsPageLevel(this MemberType type) Parameters Type Name Description MemberType type Returns Type Description Boolean | Improve this Doc View Source ShrinkToSimpleToc(MetadataItem) Declaration public static MetadataItem ShrinkToSimpleToc(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description MetadataItem | Improve this Doc View Source ShrinkToSimpleTocWithNamespaceNotEmpty(MetadataItem) Only when Namespace is not empty, return it Declaration public static MetadataItem ShrinkToSimpleTocWithNamespaceNotEmpty(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description MetadataItem | Improve this Doc View Source ToItemViewModel(MetadataItem) Declaration public static ItemViewModel ToItemViewModel(this MetadataItem model) Parameters Type Name Description MetadataItem model Returns Type Description ItemViewModel | Improve this Doc View Source ToPageViewModel(MetadataItem) Declaration public static PageViewModel ToPageViewModel(this MetadataItem model) Parameters Type Name Description MetadataItem model Returns Type Description PageViewModel | Improve this Doc View Source ToReferenceViewModel(KeyValuePair<String, ReferenceItem>) Declaration public static ReferenceViewModel ToReferenceViewModel(this KeyValuePair<string, ReferenceItem> model) Parameters Type Name Description KeyValuePair < String , ReferenceItem > model Returns Type Description ReferenceViewModel | Improve this Doc View Source ToSpecViewModel(LinkItem) Declaration public static SpecViewModel ToSpecViewModel(this LinkItem model) Parameters Type Name Description LinkItem model Returns Type Description SpecViewModel | Improve this Doc View Source ToSyntaxDetailViewModel(SyntaxDetail) Declaration public static SyntaxDetailViewModel ToSyntaxDetailViewModel(this SyntaxDetail model) Parameters Type Name Description SyntaxDetail model Returns Type Description SyntaxDetailViewModel | Improve this Doc View Source ToTocItemViewModel(MetadataItem) Declaration public static TocItemViewModel ToTocItemViewModel(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description TocItemViewModel | Improve this Doc View Source ToTocViewModel(MetadataItem) Declaration public static TocViewModel ToTocViewModel(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description TocViewModel"
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.html",
    "title": "Namespace Microsoft.DocAsCode.Metadata.ManagedReference | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Metadata.ManagedReference Classes AttributeFilterInfo BuildMembers BuildToc CachedFilterVisitor CompositeYamlModelGenerator ConfigFilterRule ConfigFilterRuleExcludeItem ConfigFilterRuleIncludeItem ConfigFilterRuleItem ConfigFilterRuleItemUnion ConfigFilterVisitor CSharpNameVisitorCreator CSReferenceItemVisitor CSYamlModelGenerator DefaultFilterVisitor DelegatingFilterVisitor ExtendedSymbolKindHelper ExtractMetadataInputModel ExtractMetadataWorker FilterVisitorExtensions LayoutCheckAndCleanup LinkItem MetadataItem MetadataModel NameVisitor NameVisitorCreator NormalizeSyntax ReferenceItem ReferenceItemVisitor ResolverContext ResolveReference SetParent SimpleYamlModelGenerator SymbolVisitorAdapter SyntaxDetail TripleSlashCommentModel TripleSlashCommentParserContext TripleSlashCommentTransformer VBNameVisitorCreator VBReferenceItemVisitor VBYamlModelGenerator VisitorHelper YamlMetadataResolver YamlModelGenerator YamlViewModelExtensions Interfaces IFilterVisitor IResolverPipeline ITripleSlashCommentParserContext Enums ExtendedSymbolKind LayoutItem Defines the layout for an API page NameOptions"
  },
  "api/Microsoft.DocAsCode.MetadataJsonConfig.html": {
    "href": "api/Microsoft.DocAsCode.MetadataJsonConfig.html",
    "title": "Class MetadataJsonConfig | DocFX website",
    "keywords": "Class MetadataJsonConfig Inheritance Object List < MetadataJsonItemConfig > MetadataJsonConfig Inherited Members System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.set_Item(System.Int32, System.Object) List<MetadataJsonItemConfig>.Add(MetadataJsonItemConfig) System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.Add(System.Object) List<MetadataJsonItemConfig>.AddRange(IEnumerable<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.AsReadOnly() List<MetadataJsonItemConfig>.BinarySearch(Int32, Int32, MetadataJsonItemConfig, IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.BinarySearch(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.BinarySearch(MetadataJsonItemConfig, IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Clear() List<MetadataJsonItemConfig>.Contains(MetadataJsonItemConfig) System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.Contains(System.Object) List<MetadataJsonItemConfig>.ConvertAll<TOutput>(Converter<MetadataJsonItemConfig, TOutput>) List<MetadataJsonItemConfig>.CopyTo(MetadataJsonItemConfig[]) System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) List<MetadataJsonItemConfig>.CopyTo(Int32, MetadataJsonItemConfig[], Int32, Int32) List<MetadataJsonItemConfig>.CopyTo(MetadataJsonItemConfig[], Int32) List<MetadataJsonItemConfig>.Exists(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Find(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindAll(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindIndex(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindIndex(Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindIndex(Int32, Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLast(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLastIndex(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLastIndex(Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLastIndex(Int32, Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.ForEach(Action<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.GetEnumerator() System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.Generic.IEnumerable<Microsoft.DocAsCode.MetadataJsonItemConfig>.GetEnumerator() System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IEnumerable.GetEnumerator() List<MetadataJsonItemConfig>.GetRange(Int32, Int32) List<MetadataJsonItemConfig>.IndexOf(MetadataJsonItemConfig) System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.IndexOf(System.Object) List<MetadataJsonItemConfig>.IndexOf(MetadataJsonItemConfig, Int32) List<MetadataJsonItemConfig>.IndexOf(MetadataJsonItemConfig, Int32, Int32) List<MetadataJsonItemConfig>.Insert(Int32, MetadataJsonItemConfig) System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.Insert(System.Int32, System.Object) List<MetadataJsonItemConfig>.InsertRange(Int32, IEnumerable<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.LastIndexOf(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.LastIndexOf(MetadataJsonItemConfig, Int32) List<MetadataJsonItemConfig>.LastIndexOf(MetadataJsonItemConfig, Int32, Int32) List<MetadataJsonItemConfig>.Remove(MetadataJsonItemConfig) System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.Remove(System.Object) List<MetadataJsonItemConfig>.RemoveAll(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.RemoveAt(Int32) List<MetadataJsonItemConfig>.RemoveRange(Int32, Int32) List<MetadataJsonItemConfig>.Reverse() List<MetadataJsonItemConfig>.Reverse(Int32, Int32) List<MetadataJsonItemConfig>.Sort() List<MetadataJsonItemConfig>.Sort(IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Sort(Int32, Int32, IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Sort(Comparison<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.ToArray() List<MetadataJsonItemConfig>.TrimExcess() List<MetadataJsonItemConfig>.TrueForAll(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Capacity List<MetadataJsonItemConfig>.Count System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.Generic.ICollection<Microsoft.DocAsCode.MetadataJsonItemConfig>.IsReadOnly System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.ICollection.SyncRoot List<MetadataJsonItemConfig>.Item[Int32] System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.Item[System.Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class MetadataJsonConfig : List<MetadataJsonItemConfig>, IList<MetadataJsonItemConfig>, ICollection<MetadataJsonItemConfig>, IList, ICollection, IReadOnlyList<MetadataJsonItemConfig>, IReadOnlyCollection<MetadataJsonItemConfig>, IEnumerable<MetadataJsonItemConfig>, IEnumerable Constructors | Improve this Doc View Source MetadataJsonConfig(MetadataJsonItemConfig[]) Declaration public MetadataJsonConfig(params MetadataJsonItemConfig[] configs) Parameters Type Name Description MetadataJsonItemConfig [] configs | Improve this Doc View Source MetadataJsonConfig(IEnumerable<MetadataJsonItemConfig>) Declaration public MetadataJsonConfig(IEnumerable<MetadataJsonItemConfig> configs) Parameters Type Name Description IEnumerable < MetadataJsonItemConfig > configs Properties | Improve this Doc View Source BaseDirectory Declaration [JsonIgnore] public string BaseDirectory { get; set; } Property Value Type Description String | Improve this Doc View Source Force Declaration [JsonIgnore] public bool Force { get; set; } Property Value Type Description Boolean | Improve this Doc View Source OutputFolder Declaration [JsonIgnore] public string OutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source Raw Declaration [JsonIgnore] public bool Raw { get; set; } Property Value Type Description Boolean Extension Methods DocumentExceptionExtensions.RunAll<MetadataJsonItemConfig, TResult>(Func<MetadataJsonItemConfig, TResult>) DocumentExceptionExtensions.RunAll<MetadataJsonItemConfig>(Action<MetadataJsonItemConfig>) DocumentExceptionExtensions.RunAll<MetadataJsonItemConfig>(Action<MetadataJsonItemConfig>, Int32) TaskHelper.ForEachInParallelAsync<MetadataJsonItemConfig>(Func<MetadataJsonItemConfig, Task>, Int32) TaskHelper.ForEachInParallelAsync<MetadataJsonItemConfig>(Func<MetadataJsonItemConfig, Task>) TaskHelper.SelectInParallelAsync<MetadataJsonItemConfig, TResult>(Func<MetadataJsonItemConfig, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<MetadataJsonItemConfig, TResult>(Func<MetadataJsonItemConfig, Task<TResult>>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.MetadataJsonItemConfig.html": {
    "href": "api/Microsoft.DocAsCode.MetadataJsonItemConfig.html",
    "title": "Class MetadataJsonItemConfig | DocFX website",
    "keywords": "Class MetadataJsonItemConfig Inheritance Object MetadataJsonItemConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class MetadataJsonItemConfig Properties | Improve this Doc View Source Destination Declaration [JsonProperty(\"dest\")] public string Destination { get; set; } Property Value Type Description String | Improve this Doc View Source FilterConfigFile Declaration [JsonProperty(\"filter\")] public string FilterConfigFile { get; set; } Property Value Type Description String | Improve this Doc View Source Force Declaration [JsonProperty(\"force\")] public bool ? Force { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Raw Declaration [JsonProperty(\"raw\")] public bool ? Raw { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Source Declaration [JsonProperty(\"src\")] public FileMapping Source { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source UseCompatibilityFileName Declaration [JsonProperty(\"useCompatibilityFileName\")] public bool ? UseCompatibilityFileName { get; set; } Property Value Type Description Nullable < Boolean > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.OptionUsageAttribute.html": {
    "href": "api/Microsoft.DocAsCode.OptionUsageAttribute.html",
    "title": "Class OptionUsageAttribute | DocFX website",
    "keywords": "Class OptionUsageAttribute Inheritance Object Attribute OptionUsageAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)] public class OptionUsageAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source OptionUsageAttribute(String) Declaration public OptionUsageAttribute(string name) Parameters Type Name Description String name Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Plugins.DocumentException.html": {
    "href": "api/Microsoft.DocAsCode.Plugins.DocumentException.html",
    "title": "Class DocumentException | DocFX website",
    "keywords": "Class DocumentException Inheritance Object Exception DocumentException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Plugins Assembly :Microsoft.DocAsCode.Plugins.dll Syntax [Serializable] public class DocumentException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DocumentException() Declaration public DocumentException() | Improve this Doc View Source DocumentException(SerializationInfo, StreamingContext) Declaration protected DocumentException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source DocumentException(String) Declaration public DocumentException(string message) Parameters Type Name Description String message | Improve this Doc View Source DocumentException(String, Exception) Declaration public DocumentException(string message, Exception inner) Parameters Type Name Description String message Exception inner Properties | Improve this Doc View Source Column Declaration public int Column { get; set; } Property Value Type Description Int32 | Improve this Doc View Source File Declaration public string File { get; set; } Property Value Type Description String | Improve this Doc View Source Line Declaration public int Line { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Overrides Exception.GetObjectData(SerializationInfo, StreamingContext) | Improve this Doc View Source RunAll(Action[]) Declaration public static void RunAll(params Action[] actions) Parameters Type Name Description Action [] actions Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/toc.html": {
    "href": "api/toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "toc.html": {
    "href": "toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "guideline/toc.html": {
    "href": "guideline/toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "spec/toc.html": {
    "href": "spec/toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "tutorial/toc.html": {
    "href": "tutorial/toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "RELEASENOTE.html": {
    "href": "RELEASENOTE.html",
    "title": "Version Notes (Current Version: v2.4) | DocFX website",
    "keywords": "Version Notes (Current Version: v2.4) v2.4(Pre-Release) v2.3 Support emoji in markdown content. Upgrade yamldotnet to 3.9. Refine markdown validation. Support separated meta json file. Change hightlight.js theme to github-gist . Support '.json' as supported swagger file extension. Support topicHref and tocHref to specify homepage toc. Support customized contribute repository and branch for \"Improve this Doc\" button. ( https://github.com/dotnet/docfx/issues/482 ) Improve message for docfx.exe template command. v2.2.2 Fix bug in .manifest file. v2.2.1 Fix bug when metadata incremental check. Move post process out of DocumentBuilder. v2.2 Support multi-version site. ( https://github.com/dotnet/docfx/issues/396 ) Support loop reference for Swagger Rest API. ( https://github.com/dotnet/docfx/issues/223 ) Support plug-in for post processor. Support href for see/seealso tags. Improve API reference documentation of namespace and enum. Update prerequisite to build docfx. Update manifest schema. Add chocolatey support in CI script. Provide with options in build.cmd. Bug fixes: syntax for static class is incorrect. improve warning message about global namespace class. ( https://github.com/dotnet/docfx/issues/417 ) fix normalizexml bug for empty <code></code> in tripleslashcomment. v2.1 Support for xref zip file in relative path. Support anchor in toc file. Support plug-in for validating markdown input metadata. Add output file md5 hashes. Breaking Url Rename generic type file name in metadata step E.g. System.Func<T> will generate System.Func-1.yml instead of System.Func`1.yml , and after build the url will be System.Func-1.html instead of System.Func%601.html . To keep old behavior, please add following option in metadata part in docfx.json: \"useCompatibilityFileName\": true Display extension methods in API reference documentation Provide with option _displayLangs in docfx.json to choose which language version you want to show. Support more Swagger syntax: Support allOf . ( https://github.com/dotnet/docfx/issues/360 ) Support $ref with [ and ] in json pointer. ( https://github.com/dotnet/docfx/issues/359 ) Support parameters applicable for all the operations under path . ( https://github.com/dotnet/docfx/issues/358 ) v2.0.2 Support localization tokens in DFM. v2.0.1 Fix bug that file links can't be resolved in overwrite file v2.0 Breaking Change Add line info for markdown parser. Allow Markdown reference at the end of overwrite file. Provide more information for API reference documentation display inherited members display overridden members display implemented interface separate category for Explicit Interface Implementation Rest api - Enable Tag in Swagger file to organize the API s. v1.9 Breaking Change Refactor template system: The input data model now contains all the properties including system generated metadata starting with underscore _ and globally shared variables stored in __global . You can use docfx build --exportRawModel to view the data model. Preprocessor 's transform function signature changes to: exports.transform = function (model){ // transform the model return model; } Provide a new embedded template statictoc with TOC generated in build time. Webpages generated by this template is PURE static and you can simply open the generated webpage file to take a preview, no local server is needed. Allow switch markdown engine. Allow export metadata to manifest file. Improve exclude logic to help avoid PathTooLongException . ( https://github.com/dotnet/docfx/issues/156 ) Provide with a config file named search-stopwords.json to customise full-text search stop-words. ( https://github.com/dotnet/docfx/issues/279 ) Bug fixes: Fix bug when cref contains loop. ( https://github.com/dotnet/docfx/issues/289 ) Make sure id is unique for each HTML in markdown transforming. ( https://github.com/dotnet/docfx/issues/224 ) Fix index range bugs in YamlHeaderParser . ( https://github.com/dotnet/docfx/issues/265 ) v1.8.4 Fix bug when outputFolder, basedirectory and destination are all not set fix <a> tag when href has invalid value with anchor v1.8.3 Fix bug for [!include()[]] when multiple articles in different subfolder including one file that v1.8.2 not resolved v1.8.2 Fix bug for [!include()[]] when multiple articles in different subfolder including one file v1.8.1 Fix bug when serialize attribute argument for type array. ( https://github.com/dotnet/docfx/issues/280 ) Fix bug when include file link to an anchor. Don't modify link when target file not existed. v1.8 Support multiple regions selection, code lines highlight and dedent length setting in Code Snippet . ( https://github.com/dotnet/docfx/issues/189 ) Support more tags in triple-slash-comments, e.g. lang , list , code , paramref and typeparamref . Add Example section to default template. Bug fixes: Fix bug when parsing triple-slash-comments. ( https://github.com/dotnet/docfx/issues/221 ) Fix syntax generation for VB module. ( https://github.com/dotnet/docfx/issues/260 ) v1.7 Behavior change For articles not in TOC, it's TOC file is the nearest TOC File in its output folder. Previously we only search the TOC File under the same input folder of the Not-In-Toc article. Provide more information for API reference documentation Type of events ( https://github.com/dotnet/docfx/issues/217 ) Parameters/returns for delegates ( https://github.com/dotnet/docfx/issues/218 ) Type parameter description ( https://github.com/dotnet/docfx/issues/204 ) Cross-reference is now supporting anchor # ( https://github.com/dotnet/docfx/issues/190 ) C# Code snippet now supports referencing source code using a region #engion ( https://github.com/dotnet/docfx/issues/160 ) Support TOC reference . With this syntax, we can combine multiple TOC files into a single TOC. ( https://github.com/dotnet/docfx/issues/161 ) Improve user experience when using docfx.msbuild in VS IDE Code refactor: We improved DocFX project structure in this release. Microsoft.DocAsCode.EntityModel namespace is no longer in use. Assemblies are separated into Microsoft.DocAsCode.Build , Microsoft.DocAsCode.DataContracts , and Microsoft.DocAsCode.Metadata namespace. All assemblies can be separately referenced through NuGet. In this way, it is much convenient for plugin writers to reference existing data models and utilities. v1.6 Add attribute in c# and vb syntax. Support full text search, with pure client side implementation: The feature is disabled by default. You can enable it by adding \"_enableSearch\": true to the globalMetadata property of docfx.json . The search engine is powered by lunr.js v1.5 Add 3 options to build subcommand: --rawModelOutputFolder : to specify the output folder for raw model if --exportRawModel . If the value is not set, raw model will be in the same folder as the output documenation. --viewModelOutputFolder : to specify the output folder for view model if --exportViewModel . If the value is not set, view model will be in the same folder as the output documenation. --dryRun : if this option is set, docfx will go through all the build processes for all the documents, however, no documentation will generated. Improve markdown: Allow paired parentheses in link target, e.g. [text](paired(parentheses(are)supported)now \"title\") . Improve performance for document build. Breaking changes: modify interface IDocumentBuildStep . v1.4.2 Fix bug for encoded link file. Fix bug for directory not found. v1.4.1 Remove newFileRepository from output metadata v1.4 Cross-reference related: Make @uid rule more strict: if @ is not followed by ' or \" , it must be followed by word character ( [a-zA-Z] ) Introduce new syntax for cross-reference: similar to autolink: <xref:uid> similar to link: [title](xref:uid) or [title](@uid) support uid in toc.yml : - uid: getting-started - uid: manual support cross reference in toc.md # <xref:getting-started> # [Override title](@getting-started) Update yaml serializion: Add ExtensibleMemberAttribute Improve docfx init , now with docfx init , a docfx_project seed project will will generated. Several improvements for default template: Provide properties to customize layout: _disableNavbar , _disableBreadcrumb , _disableToc , _disableAffix , _disableContribution , _disableFooter Include empty main.css and main.js to head.tmpl.partial partial template so that there is no need to customize head.tmpl.partial when you want to customize website style. v1.3.8 Fix no link and ref link cannot work issue in table v1.3.7 Fix no link and ref link cannot work issue in markdownlite. Fix link issue (allow space in link) in markdownlite. Fix para for list in markdownlite. Fix tokenize bug in dfm. Add markdown token validator in dfm. v1.3.6 Fix cross domain issue: timeout exception throws when document build takes longer than 15 minutes Fix docfx IOException when calling docfx -l report.txt v1.3.5 FIX Github pages compatibility issue( Github pages now disallow iframe , however the default template of docfx uses iframe to load side toc): Update default template to use AJAX to load side toc, the original one is renamed to iframe.html . So now we have 2 embedded template, one is default and another is iframe.html . v1.3 docfx improvements Add subcommand docfx template . You can now docfx template list and docfx template export -A to list and export all the embeded templates! Add subcommand docfx merge . You can use this subcommand to merge platform from multiple APIs with the same uid Add two options to build subcommand, --exportRawModel and --exportViewModel . --exportRawModel exports the data model to apply templates, --exportViewModel exports the view model after running template's pre-process scripts. Add --globalMetadata , and --globalMetadataFile options to build subcommand. These options allow globalMetadata to be loaded from command line in json format or from a JSON file. Add --fileMetadataFile option to build subcommand. This option allows fileMeatdata to be read from an external JSON file. Support plugins. You can create your own template with a plugins folder, inside which, you create your own build steps. Refer to @Microsoft.DocAsCode.EntityModel.Plugins.BaseDocumentBuildStep for a sample plugin implementation. DFM syntax improvements Support note&div syntax Support query format in code snippet [!code-<language>[<name>](<codepath><queryoption><queryoptionvalue> \"<title>\")] Change xref logic: If content after @ is wrapped by ' or \" , it contains any character including white space If content after @ is not wrapped by ' or \" , it ends when: line ends meets whitespaces line ends with . , , , ; , : , ! , ? and ~ meets 2 times or more . , , , ; , : , ! , ? and ~ Code improvements Add Microsoft.DocAsCode.YamlSerialization This project is based on YamlDotNet . It overrides classes like type converters to improve performance and fix bug existed in YamlDotNet Refactor markdown engine Microsoft.DocAsCode.MarkdownLite Add IMarkdownRewritable<T> . It provides a way to operate markdown tokens. Other improvements Add a new property _path into _attrs , it stands for the relative path from docfx.json to current file Improve missing xref warning message to include containing files. Add data-uid as attribute to generated html from default template, so that you can now find uid for API much more easily. v1.2 Support Liquid template, templates ending with .liquid are considered as using liquid templating language. Liquid contains include tag to support partials, we follow the ruby partials naming convention to have _<partialName>.liquid as partial template. A custom tag ref , e.g. {% ref file1 %} is introduced to specify the resource files that current template depends on. DFM include syntax is updated to use [!include[<title>](<filepath>)] syntax Disable glob pattern in docfx metadata command line option as it is to some extent confusing, consider using a -g option later to re-enable it. v1.1 Rewrite Glob The syntax of glob is: ** is called globstar, it matches any number of characters, including / , as long as it's the only thing in a path part. If ** is right behind / , it is a shortcut for **/* . * matches any number of characters, but not / ? matches 1 characters, but not / {} allows for a comma-separated list of \"or\" expressions, e.g. {a,b} => a and b ! at the beginning of a pattern will negate the match [...] matches a range of characters, similar to a RegExp range / is considered as path separator, while \\ is considered as escape character Support fileMetadata . You can specify different metadata value using glob pattern Improve overwrite functionality. Now you can overwrite not only summary/remarks, but also descriptions for parameters. You can even add exceptions. Now the latest project.json projects are also supported in DNX version. Simple code snippet is now supported, syntax is [!code-REST-i[title](path \"optionalTitle\")] Url is now encoded in markdown link. v1.0 Add section syntax in DFM Fix several bugs in DFM Update default template: rename css/js file Fix several display issue in default template v0.3 Support Static Website Templates Schema change to docfx.json"
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to DocFX website! | DocFX website",
    "keywords": ""
  },
  "install.html": {
    "href": "install.html",
    "title": "Thanks for installing DocFX! | DocFX website",
    "keywords": ""
  },
  "README.html": {
    "href": "README.html",
    "title": "| DocFX website",
    "keywords": "Documentation project uses docfx.msbuild nuget package to generate documentation for docfx project, along with conceputal files, with docfx.json to provide configuration for docfx ."
  },
  "guideline/csharp_coding_standards.html": {
    "href": "guideline/csharp_coding_standards.html",
    "title": "C# Coding Standards | DocFX website",
    "keywords": "C# Coding Standards Introduction The C# Coding Standards will be used in conjunction with customized versions of StyleCop and FxCop [ TODO ] during both development and build process. This will help ensure that all developers on the team are in a consistent manner. \"Any fool can write code that a computer can understand. Good programmers write code that humans understand\". Martin Fowler. Refactoring: Improving the design of existing code. Purpose This section defines a set of C# coding standards to be used by the DocFX build team to guarantee maximum legibility, reliability, re-usability and homogeneity of our code. Each section is marked Mandatory or Recommended . Mandatory sections will be enforced during code reviews as well as tools like StyleCop and FxCop , and code will not be considered complete until it is compliant. Scope This section contains general C# coding standards that can be applied to any type of application developed in C#, based upon Framework Design Guidelines . This section is not intended to be a tutorial on C#. Instead, it includes a set of limitations and recommendations focused on clarifying the development. Tools ReSharper is a useful third-party code cleanup and style tool. StyleCop analyzes C# source code to enforce a set of style and consistency rules and has been integrated into many third-party development tools such as ReSharper. FxCop is an application that analyzes managed code assemblies (code that targets the .NET Framework common language runtime) and reports information about the assemblies, such as possible design, localization, performance, and security improvements. Highlights of Coding Standards This section is not intended to give a summary of all the coding standards enabled by our customized StyleCop, but to give a highlight of some rules one will possibly meet in daily coding life. It also provides some coding standards that are recommended but not mandatory (that is, not enabled by StyleCop). File Layout (Recommended) Only one public class is allowed per file. The file name derives from the class name. Class : Observer Filename: Observer.cs Class Definition Order (Mandatory) The class definition contains class members in the following order, from less restricted scope (public) to more restrictive (private): ~ Nested types, e.g. classes, enum, struct, etc. ~ Non-private nested types are not allowed. Field members (for example, member variables, const, etc.) Member functions Constructors Finalizer (Do not use unless absolutely necessary) Methods (Properties, Events, Operations, Overridables and Static) Private nested types Naming (Mandatory) DO use plural form for namespaces DO use PascalCasing for all public member, type, and namespace names consisting of multiple words. PropertyDescriptor HtmlTag IOStream Note A special case is made for two-letter acronyms in which both letters are capitalized, e.g. IOStream DO use camelCasing for parameter names. propertyDescriptor htmlTag ioStream DO start with underscore for private fields: private readonly Guid _userId = Guid.NewGuid(); DO start static readonly field and constant names with capitalized case private static readonly IEntityAccessor EntityAccessor = null; private const string MetadataName = \"MetadataName\"; DO NOT capitalize each word in so-called closed-form compound words . DO use Async suffix in the asynchronous method names to notice people how to use it properly public async Task<string> LoadContentAsync() { ... } Formatting (Mandatory) DO use spaces over tabs, and always show all spaces/tabs in IDE Tips Visual Studio > Tools > Options... > Text Editor > C# > Tabs > Insert spaces (Tab size: 4) Visual Studio > Edit > Advanced > View White Space (Ctrl+R, Ctrl+W) DO add using inside namespace declaration namespace Microsoft.Content.Build.BuildWorker.UnitTest { using System; } DO add a space when: for (var i = 0; i < 1; i++) if (a == b) Performace Consideration DO use sealed for private classes if they are not to be inherited. DO add readonly to fields if they do not tend to be changed. DO use static methods if it is not instance relevant. DO use RegexOptions.Compiled for readonly Regex . Cross-platform coding Our code can and should support multiple operating systems in addition to Windows. Code should be sensitvie to the differences between Operating Systems. Here are some specifics to consider: DO use Enviroment.NewLine instead of hard-coding the line break, as Windows uses \\r\\n and OSX/Linux uses \\n . Note Be aware that these line-endings may cause problems in code when using @\"\" text blocks with line breaks, e.g.: var x = @\"line1 line2\"; DO use Path.Combine() or Path.DirectorySeparatorChar to separate directories. If this is not possible (such as in scripting), use a forward slash / . Windows is more forgiving than Linux in this regard. Unit tests and functional tests Assembly naming The unit tests for the Microsoft.Foo assembly live in the Microsoft.Foo.Tests assembly. The functional tests for the Microsoft.Foo assembly live in the Microsoft.Foo.FunctionalTests assembly. In general there should be exactly one unit tests assembly for each product runtime assembly. In general there should be one functional tests assembly per repo. Exceptions can be made for both. Unit test class naming Test class names end with Test suffix and live in the same namespace as the class being tested. For example, the unit tests for the Microsoft.Foo.Boo class would be in a Microsoft.Foo.BooTest class in the unit tests assembly Microsoft.Foo.Tests . Unit test method naming Unit test method names must be descriptive about what developers are testing, under what conditions, and what the expectations are . Pascal casing and underscores can be used to improve readability. The following test names are correct: PublicApiArgumentsShouldHaveNotNullAnnotation Public_api_arguments_should_have_not_null_annotation The following test names are incorrect: Test1 Constructor FormatString GetData Unit test structure The contents of every unit test should be split into three distinct stages (arrange, act and assert), optionally separated by these comments: // Arrange // Act // Assert The crucial thing here is the Act stage is exactly one statement. That one statement calls only the one method that you are trying to test. Keeping that one statement as simple as possible is also very important. For example, this is not ideal: int result = myObj.CallSomeMethod(GetComplexParam1(), GetComplexParam2(), GetComplexParam3()); This style is not recommended because too much can go wrong in this one statement. All the GetComplexParamN() calls can throw exceptions for a variety of reasons unrelated to the test itself. It is thus unclear to someone running into a problem why the failure occurred. The ideal pattern is to move the complex parameter building into the Arrange section: // Arrange P1 p1 = GetComplexParam1(); P2 p2 = GetComplexParam2(); P3 p3 = GetComplexParam3(); // Act int result = myObj.CallSomeMethod(p1, p2, p3); // Assert Assert.AreEqual(1234, result); Now the only reason the line with CallSomeMethod() can fail is if the method itself throws an error. Testing exception messages Testing the specific exception message in a unit test is important. This ensures that the desired exception is being tested rather than a different exception of the same type. In order to verify the exact exception, it is important to verify the message. // Act var ex = Assert.Throws<InvalidOperationException>(() => fruitBasket.GetBananaById(-1)); // Assert Assert.Equal(\"Cannot load banana with negative identifier.\", ex.Message); Use xUnit.net's plethora of built-in assertions xUnit.net includes many kinds of assertions â€“ please use the most appropriate one for your test. This makes the tests much more readable and also allows the test runner to report the best possible errors (whether it's local or the CI machine). For example, these are bad: Assert.Equal(true, someBool); Assert.True(\"abc123\" == someString); Assert.True(list1.Length == list2.Length); for (int i = 0; i < list1.Length; i++) { Assert.True( String.Equals( list1[i], list2[i], StringComparison.OrdinalIgnoreCase)); } These are good: Assert.True(someBool); Assert.Equal(\"abc123\", someString); // built-in collection assertions! Assert.Equal(list1, list2, StringComparer.OrdinalIgnoreCase); Parallel tests By default all unit test assemblies should run in parallel mode, which is the default. Unit tests shouldn't depend on any shared state, and so should generally be runnable in parallel. If tests fail in parallel, the first thing to do is to figure out why; do not just disable parallel testing! For functional tests, you can disable parallel tests."
  },
  "guideline/engineering_guidelines.html": {
    "href": "guideline/engineering_guidelines.html",
    "title": "Engineering Guidelines | DocFX website",
    "keywords": "Engineering Guidelines Basics Copyright header and license notice All source code files require the following exact header according to its language (please do not make any changes to it). extension: .cs // Copyright (c) Microsoft. All rights reserved. // Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .js // Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .css /* Copyright (c) Microsoft Corporation. All Rights Reserved. Licensed under the MIT License. See License.txt in the project root for license information. */ extension: .tmpl , .tmpl.partial {{!Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information.}} External dependencies This refers to dependencies on projects (that is, NuGet packages) outside of the docfx repo, and especially outside of Microsoft. Adding new dependencies requires additional approval. Current approved dependencies are: Newtonsoft.Json Jint HtmlAgilityPack Nustache YamlDotNet Code reviews and checkins To help ensure that only the highest quality code makes its way into the project, please submit all your code changes to GitHub as PRs. This includes runtime code changes, unit test updates, and deployment scripts. For example, sending a PR for just an update to a unit test might seem like a waste of time but the unit tests are just as important as the product code. As such, reviewing changes to unit tests is just as important. The advantages are numerous: Improving code quality; increasing visibility on changes and their potential impact; avoiding duplication of effort; and creating general awareness of progress being made in various areas. In general a PR should be signed off(using the ðŸ‘ emoticon) by the owner of that code. To commit the PR to the repo, do not use the Big Green Button . Instead, do a typical push that you would use with Git (for example, local pull, rebase, merge or push). Source Code Management Branch strategy In general: master has the code for the latest release on NuGet.org. (e.g. 1.0.0 , 1.1.0 ) dev has the code that is being worked on but that we have not yet released. This is the branch into which developers normally submit pull requests and merge changes into. We run daily CI towards dev branch and generate pre-release nuget package, e.g. 1.0.1-alpha-9-abcdefsd . Solution and project folder structure and naming Solution files go in the repo root. The default entry point is All.sln . Every project also needs a project.json and a matching .xproj file. This project.json is the source of truth for a project's dependencies and configuration options. The solution needs to contain solution folders that match the physical folder ( src , test , tools , etc.). Assembly naming pattern The general naming pattern is Microsoft.DocAsCode.<area>.<subarea> . Unit tests We use xUnit.net for all unit testing. Coding Standards Please refer to C# Coding standards for detailed guideline for C# coding standards. TODO Template Coding standards TODO Template Preprocess JS Coding standards"
  },
  "spec/docfx_build_manifest_file.html": {
    "href": "spec/docfx_build_manifest_file.html",
    "title": "Data structure for manifest file generated by docfx build | DocFX website",
    "keywords": "Data structure for manifest file generated by docfx build After docfx build , docfx generates a manifest file in JSON format in the root output folder, listing some basic information about the set of files that docfx build handles. Before DocFX version 1.7, the manifest file is an Array of items. Then DocFX realizes that there are also global properties manifest file consumers care about, for example, the list of TOC files that DocFX processed. However, it is hard to add properties to an Array model. So since version 1.8, DocFX introduces a new Object model for the manifest file. For backward compatibility, in version 1.8, DocFX generates both Array model to-be-obsoleted and the new Object model. In version 1.9, manifest file in Array model will be removed . Below table shows the difference between manifest file in Array model and manifest file in Object model. ---- File Name Data Model Old Array Model .manifest Array model New Object Model .manifest.json Object model The obsoleted Array model Array model contains a list of Manifest Item s. The new Object model Current supported properties for the Object model is listed as below: Property Name Type Description files Array of Manifest Item Array of Manifest Item model homepages Array of Homepage Array of Homepage model Manifest Item model Property Name Type Description type string The documentType is generated by plugins or specified to each file using Yaml Header . Currently by default DocFX generates following document type s: ManagedReference , Conceptual , RestApi , Resource , toc . original string Specifies the input file path to the root folder of the Git repository. It is the absolute file path if the file is not inside a Git repository. outputFiles Dictionary<string,string> For each output file, the key is the extension of the transformed file, the extension is determined by the template it applies to. And the value is the output file path relative to the manifest file. Homepage model Property Name Type Description tocPath string Specifies the output TOC file path relative to the manifest file. homepage string Specifies the homepage for current TOC with file path relative to the manifest file."
  },
  "spec/docfx_design_spec.html": {
    "href": "spec/docfx_design_spec.html",
    "title": "docfx Design Spec | DocFX website",
    "keywords": "docfx Design Spec 0. Terms Term Description DFM DocFX Flavored Markdown API The API generated from source code Overwrite Files The files with YAML header used to override YAML files when uid matches. 1. Scenarios docfx should support the following scenarios: Source Code => Website Conceptual => Website YAML files => Website 2. Architecture 3. Feature List Support for DocFX Flavored Markdown Ability to parse TOC.json/TOC.yml/TOC.md Custom template naming: {type}.{extension}.tmpl under folder {templateName} 4. Open Issues Should we support other conceptual file format, for example, RST? ==> How to parse? How do you know which link to replace to html, and which not? ==>"
  },
  "spec/docfx_flavored_markdown.html": {
    "href": "spec/docfx_flavored_markdown.html",
    "title": "DocFX Flavored Markdown | DocFX website",
    "keywords": "DocFX Flavored Markdown DocFX supports \"DocFX Flavored Markdown,\" or DFM. It is 100% compatible with GitHub Flavored Markdown , and adds some additional functionality, including cross reference and file inclusion. Yaml Header Yaml header in DFM is considered as the metadata for the Markdown file. It will transform to yamlheader tag when processed. Yaml header MUST be the first thing in the file and MUST take the form of valid YAML set between triple-dashed lines. Here is a basic example: --- uid: A.md title: A --- Cross Reference Cross reference allows you to link to another topic by using its unique identifier (called UID) instead of using its file path. For conceptual Markdown files UID can be defined by adding a uid metadata in YAML header: --- uid: uid_of_the_file --- This is a conceptual topic with `uid` specified. For reference topics, UIDs are auto generated from source code and can be found in generated YAML files. You can use one of the following syntax to cross reference a topic with UID defined: Markdown link: [link_text](xref:uid_of_the_topic) Auto link: <xref:uid_of_the_topic> Shorthand form: @uid_of_the_topic All will render to: <a href=\"url_of_the_topic\">link_text</a> If link_text is not specified, DocFX will extract the title from the target topic and use it as the link text. For more information, see cross reference . File Inclusion DFM adds syntax to include other file parts into current file, the included file will also be considered as in DFM syntax. NOTE that YAML header is NOT supported when the file is an inclusion. There are two types of file inclusion: Inline and block, as similar to inline code span and block code. Inline Inline file inclusion is in the following syntax, in which <title> stands for the title of the included file, and <filepath> stands for the file path of the included file. The file path can be either absolute or relative. <filepath> can be wrapped by ' or \" . NOTE that for inline file inclusion, the file included will be considered as containing only inline tags, for example, ###header inside the file will not transfer since <h3> is a block tag, while [a](b) will transform to <a href='b'>a</a> since <a> is an inline tag. ...Other inline contents... [!include[<title>](<filepath>)] Block Block file inclusion must be in a single line and with no prefix characters before the start [ . Content inside the included file will transform using DFM syntax. [!include[<title>](<filepath>)] Section definition User may need to define section. Mostly used for code table. Give an example below. > [!div class=\"tabbedCodeSnippets\" data-resources=\"OutlookServices.Calendar\"] > ```cs > <cs code text> > ``` > ```javascript > <js code text> > ``` The above blockquote Markdown text will transform to section html as in the following: <div class=\"tabbedCodeSnippets\" data-resources=\"OutlookServices.Calendar\"> <pre><code>cs code text</code></pre> <pre><code>js code text</code></pre> </div> Code Snippet Allows you to insert code with code language specified. The content of specified code path will expand. [!code-<language>[<name>](<codepath><queryoption><queryoptionvalue> \"<title>\")] <language> can be made up of any number of character and '-'. However, the recommended value should follow Highlight.js language names and aliases . <codepath> is the relative path in file system which indicates the code snippet file that you want to expand. <queryoption> and <queryoptionvalue> are used together to retrieve part of the code snippet file in the line range or tag name way. We have 2 query string options to represent these two ways: query string using # query string using ? 1. line range #L{startlinenumber}-L{endlinenumber} ?start={startlinenumber}&end={endlinenumber} 2. tagname #{tagname} ?name={tagname} 3. multiple region range Unsupported ?range={rangequerystring} 4. highlight lines Unsupported ?highlight={rangequerystring} 5. dedent Unsupported ?dedent={dedentlength} In ? query string, the whole file will be included if none of the first three option is specified. If dedent isn't specified, the maximum common indent will be trimmed automatically. <title> can be omitted. Code Snippet Sample [!code-csharp[Main](Program.cs)] [!code[Main](Program.cs#L12-L16 \"This is source file\")] [!code-vb[Main](../Application/Program.vb#testsnippet \"This is source file\")] [!code[Main](index.xml?start=5&end=9)] [!code-javascript[Main](../jquery.js?name=testsnippet)] [!code[Main](index.xml?range=2,5-7,9-) \"This includes the lines 2, 5, 6, 7 and lines 9 to the last line\"] [!code[Main](index.xml?highlight=2,5-7,9-) \"This includes the whole file with lines 2,5-7,9- highlighted\"] Tag Name Representation in Code Snippet Source File DFM currently only supports the following <language> values to be able to retrieve by tag name: C#: cs, csharp VB: vb, vbnet C++: cpp, c++ F#: fsharp XML: xml Html: html SQL: sql Javascript: javascript Note (Warning/Tip/Important) Using specific syntax inside block quote to indicate the following content is Note. > [!NOTE] > <note content> > [!WARNING] > <warning content> The above content will be transformed to the following html: <div class=\"NOTE\"> <h5>NOTE</h5> <p>note content</p> </div> <div class=\"WARNING\"> <h5>WARNING</h5> <p>WARNING content</p> </div>"
  },
  "spec/docfx_incremental.html": {
    "href": "spec/docfx_incremental.html",
    "title": "Doc-as-code: DocFx.exe Incremental Build Specification | DocFX website",
    "keywords": "Doc-as-code: DocFx.exe Incremental Build Specification This documentation describes the implementation of incrementally extracting metadata from source. Currently we are using Roslyn to compile and analyse source code on the fly. When input sources are large, it may take minutes to load and process the files. To speed up the extraction, previous extracted details are saved to cache for further reference. There are two level caches in current implementation. First one is called Application Level cache, and the other one is Project level cache. Application level cache is saved in file %LocalAppData%/xdoc/cache . For Project level cache, a. If input sources are supported project files, e.g. .csproj or .vbproj files, Project level cache is located in file obj/xdoc/.cache under the same folder of the project file. b. If input sources are supported source code files, e.g. .cs or .vb files, Project level cache is located in file obj/xdoc/.cache under the same folder of the alphabetically first source code file. The cache file contains key-value pairs saved in JSON format. The key is the normalized input source code files, and the data structure for the value is as below: Property Description TriggeredUTCTime The UTC time when the action is triggered CompletedUTCTime The UTC time when the action is completed OutputFolder The output folder for the extracted result RelativeOutputFiles The paths of the extracted results related to the OutputFolder CheckSum The MD5 checksum calculated for all the extracted results Detailed Steps are described below: For each input solution/project/source files, get most latest LastModifiedTime . a. For solution, get LastModifiedTime for the solution file, and containing projects b. For project, get LastModifiedTime for the project file, project references, assembly references and containing documents. c. For source files, get LastModifiedTime for the files Normalize project list, check if Application level cache for these project list exists. Compare TriggeredUTCTime with the LastModifiedTime fetched in #1, and check if checksum remains unchanged for output files. If is, copy result files to output folder. Otherwise, continue to #3. For each supported solution/project/source code files, Step 1 . Check if Project level cache exists. If not, go to Step 4 . Step 2 . Compare TriggeredUTCTime with the LastModifiedTime fetched in #1, and check if checksum remains unchanged for output files. If not, go to Step 3 . Step 3 . Generate YAML metadata for current project and save to Project level cache. Read YAML metadata for each project, and merge with others following rules below: Rule 1 . For namespace , if uid equals, append . Rule 2 . For other type, if uid equals, override . Save result, and update *Application level cache."
  },
  "spec/metadata_dotnet_spec.html": {
    "href": "spec/metadata_dotnet_spec.html",
    "title": "DocFx: Metadata Format for .NET Languages | DocFX website",
    "keywords": "DocFx: Metadata Format for .NET Languages 0. Introduction 0.1 Goal and Non-goals 0.2 Terminology 1. Items The following .NET elements are defined as items in metadata: Namespaces Types, including class, struct, interface, enum, delegate Type members, including field, property, method, event Other elements such as parameters and generic parameters are not standalone items , they're part of other items . 2. Identifiers 2.1 Unique Identifiers For any item in .NET languages, its UID is defined by concatenating its parent 's UID and its own ID with a dot. The ID for each kind of item is defined in following sections. The basic principle here is to make ID format close to source code and easy for human reading. UID is similar to the document comment id, which is started with type prefix, for example, T: , or M: , but UID do not. There MUST NOT be any whitespace between method name, parentheses, parameters, and commas. 2.2 Spec Identifiers Spec identifier is another form of UID . It can spec a generic type with type arguments (for example, for parameters, return types or inheritances) and these UID s are unique in one yaml file. It is a simple modified Unique Identifiers, when it contains generic type arguments, it will use {Name} instead `N . For type parameter, it will be {Name} . And it also supports array and pointer. Example 2.2 Spec Identifier C#: namespace Foo { public class Bar { public unsafe List<String> FooBar<TArg>(int[] arg1, byte* arg2, TArg arg3, List<TArg[]> arg4) { return null; } } } YAML: references: - uid: System.Collections.Generic.List{System.String} - uid: System.Int32[] - uid: System.Byte* - uid: {TArg} - uid: System.Collections.Generic.List{{TArg}[]} 3. Namespaces For all namespaces, they are flat, e.i. namespaces do not have the parent namespace. So for any namespace, ID is always same with its UID . Example 3 Namespace C#: namespace System.IO { } YAML: uid: System.IO id: System.IO name: System.IO fullName: System.IO The children of namespace are all the visible types in the namespace. 4. Types Types include classes, structs, interfaces, enums, and delegates. They have following properties: summary, remarks, syntax, namespace, assemblies, inheritance. The parents of types are namespaces. The children of types are members. ID ID for a type is also its name . Example 4 Type C#: namespace System { public class String {} public struct Boolean {} public interface IComparable {} public enum ConsoleColor {} public delegate void Action(); } YAML: - uid: System.String id: String name.csharp: String fullName.csharp: System.String - uid: System.Boolean id: Boolean name.csharp: Boolean fullName.csharp: System.String - uid: System.IComparable id: IComparable name.csharp: IComparable fullName.csharp: System.IComparable - uid: System.ConsoleColor id: ConsoleColor name.csharp: ConsoleColor fullName.csharp: System.ConsoleColor - uid: System.Action id: Action name.csharp: Action fullName.csharp: System.Action 4.1 ID for Nested Types For nested types, ID is defined by concatenating the ID of all its containing types and the ID of itself, separated by a dot. The parent type of a nested type is its containing namespace, rather than its containing type. Example 4.1 Nested type C#: namespace System { public class Environment { public enum SpecialFolder {} } } YAML: uid: System.Environment.SpecialFolder id: Environment.SpecialFolder name.csharp: Environment.SpecialFolder fullName.csharp: System.Environment.SpecialFolder 4.2 Inheritance Only class contains inheritance, and the inheritance is a list of spec id. Example 4.2 Inheritance C#: namespace System.Collections.Generic { public class KeyedByTypeCollection<TItem> : KeyedCollection<Type, TItem> { } } YAML: uid : System.Collections.Generic.KeyedByTypeCollection`1 inheritance: - System.Collections.ObjectModel.KeyedCollection{System.Type,{TItem}} - System.Collections.ObjectModel.Collection{{TItem}} - System.Object 4.3 Syntax The syntax part for type contains declaration, and descriptions of type parameters for different languages. For delegates, it also contains descriptions of parameters and a return type. 5. Members Members include fields, properties, methods, and events. They have the following properties: summary, remarks, exceptions, and syntax. The parents of members are types. Members never have children, and all parameter types or return types are spec id. 5.1 Constructors The ID of a constructor is defined by #ctor , followed by the list of the UIDs of its parameter types: When a constructor does not have parameter, its ID MUST NOT end with parentheses. The syntax part for constructors contains a special language declaration, and descriptions of parameters. Example 5.1 Constructor C#: namespace System { public sealed class String { public String(); public String(char[] chars); } } YAML: - uid: System.String.#ctor id: #ctor name.csharp: String() fullName.csharp: System.String.String() - uid: System.String.#ctor(System.Char[]) id: #ctor(System.Char[]) name.csharp: String(Char[]) fullName.csharp: System.String.String(System.Char[]) 5.2 Methods The ID of a method is defined by its name, followed by the list of the UIDs of its parameter types: method_name(param1,param2,...) When a method does not have parameter, its ID MUST end with parentheses. The syntax part for method contains a special language declaration, and descriptions of type parameters for generic method, descriptions of parameters and return type. Example 5.2 Method C#: namespace System { public sealed class String { public String ToString(); public String ToString(IFormatProvider provider); } } YAML: - uid: System.String.ToString id: ToString name.csharp: ToString() fullName.csharp: System.String.ToString() - uid: System.String.ToString(System.IFormatProvider) id: ToString(System.IFormatProvider) name.csharp: ToString(IFormatProvider) fullName.csharp: System.String.ToString(System.IFormatProvider) 5.2.1 Explicit Interface Implementation The ID of an explicit interface implementation (EII) member MUST be prefixed by the UID of the interface it implements and replace . to # . Example 2.6 Explicit interface implementation (EII) C#: namespace System { using System.Collections; public sealed class String : IEnumerable { IEnumerator IEnumerable.GetEnumerator(); } } YAML: - uid: \"System.String.System#Collections#IEnumerable#GetEnumerator\" id: \"System#Collections#IEnumerable#GetEnumerator\" name.csharp: IEnumerable.GetEnumerator() fullName.csharp: System.String.System.Collections.IEnumerable.GetEnumerator() 5.4 Operator Overloads The IDs of operator overloads are same with the metadata name (for example, op_Equality ). The names of operator overloads are similar to MSDN, just remove op_ from the metadata name of the method. For instance, the name of the equals ( == ) operator is Equality . Type conversion operator can be considered a special operator whose name is the UID of the target type, with one parameter of the source type. For example, an operator that converts from string to int should be Explicit(System.String to System.Int32) . The syntax part for methods contains a special language declaration, descriptions of parameters and return type. Example 5.4 Operator overload namespace System { public struct Decimal { public static implicit operator Decimal(Char value); } public sealed class String { public static bool operator ==(String a, String b); } } YAML: - uid: System.Decimal.op_Implicit(System.Char to System.Decimal) id: op_Implicit(System.Char to System.Decimal) name.csharp: Implicit(Char to Decimal) fullName.csharp: System.Decimal.Implicit(System.Char to System.Decimal) - uid: System.String.op_Equality(System.String,System.String) id: op_Equality(System.String,System.String) name.csharp: Equality(String,String) fullName.csharp: System.String.Equality(System.String,System.String) Please check overloadable operators for all overloadable operators. 5.5 Field, Property or Event The ID of field, property or event is its name. The syntax part for field contains a special language declaration and descriptions of field type. For property, it contains a special language declaration, descriptions of parameters, and return type. For event, it contains a special language declaration and descriptions of event handler type. Example 5.5 Field, Property and Event C#: namespace System { public sealed class String { public static readonly String Empty; public int Length { get; } } public static class Console { public static event ConsoleCancelEventHandler CancelKeyPress; } } YAML: - uid: System.String.Empty id: Empty name.csharp: Empty fullName.csharp: System.String.Empty - uid: System.String.Length id: Length name.csharp: Length fullName.csharp: System.String.Length - uid: System.Console.CancelKeyPress id: CancelKeyPress name.csharp: CancelKeyPress fullName.csharp: System.Console.CancelKeyPress 5.6 Indexer Indexer operator's name is metadata name, by default, it is Item , with brackets and parameters. Example 5.6 Indexer namespace System.Collections { public interface IList { object this[int index] { get; set; } } } YAML: - uid: \"System.Collections.IList.Item[System.Int32]\" id: \"Item[System.Int32]\" name.csharp: Item[Int32] fullName.csharp: System.Collections.IList.Item[System.Int32] 6. Generics The ID of a generic type is its name with followed by `n , n and the count of generic type count, which is the same as the rule for document comment ID. For example, Dictionary`2 . The ID of a generic method uses postfix ``n , n is the count of in method parameters, for example, System.Tuple.Create``1(``0) . Example 2.7 Generic namespace System { public static class Tuple { public static Tuple<T1> Create<T1>(T1 item1); public static Tuple<T1, T2> Create<T1, T2>(T1 item1, T2 item2); } } YAML: - uid: System.Tuple.Create``1(``0) id: Create``1(``0) name.csharp: Create<T1>(T1) fullName.csharp: System.Tuple.Create<T1>(T1) - uid: System.Tuple.Create``2(``0,``1) id: Create``2(``0,``1) name.csharp: Create<T1,T2>(T1,T2) fullName.csharp: System.Tuple.Create<T1,T2>(T1,T2) 7. Reference The reference contains the following members: name, fullName, summary, isExternal, href, and more. The UID in reference can be a Spec Id , then it contains one more member: spec. The spec in reference is very like a list of lightweight references, it describes how to compose the generic type in some special language. Example 7 spec for references YAML: references: - uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Int32}} name.csharp: Dictionary<String, List<Int32>> fullName.csharp: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.Int32>> spec.csharp: - uid: System.Collections.Generic.Dictionary`2 name: Dictionary fullName: System.Collections.Generic.Dictionary isExternal: true - name: < fullName: < - uid: System.String name: String fullName: System.String isExternal: true - name: ', ' fullName: ', ' - uid: System.Collections.Generic.List`1 name: List fullName: System.Collections.Generic.List isExternal: true - name: < fullName: < - uid: System.Int32 name: Int32 fullName: System.Int32 isExternal: true - name: '>' fullName: '>' - name: '>' fullName: '>'"
  },
  "spec/metadata_format_spec.html": {
    "href": "spec/metadata_format_spec.html",
    "title": "Doc-as-Code: Metadata Format Specification | DocFX website",
    "keywords": "Doc-as-Code: Metadata Format Specification 0. Introduction 0.1 Goals and Non-goals The goal of this document is to define a general format to describe language metadata for programming languages. The language metadata is designed to be language agnostic and support multiple programming language in a single metadata file. The main user scenario for language metadata is to generate reference documentation, so this document will discuss how to optimize metadata format for documentation rendering. This document does NOT discuss details of metadata format implementation of a specific programming language. 0.2 Terminology The key words MUST , MUST NOT , REQUIRED , SHALL , SHALL NOT , SHOULD , SHOULD NOT , RECOMMENDED , MAY , and OPTIONAL in this document are to be interpreted as described in RFC 2119 . Words in italic imply they are terms defined in an earlier section of this document. 1. Items and Identifiers 1.1 Items Item is the basic unit of metadata format. From documentation perspective, each item represents a \"section\" in the reference documentation. This \"section\" is the minimum unit that you can cross reference to, or customize in layout and content. When implementing the metadata format for your own language, you can decide which elements are items . For example, usually namespaces, classes, and methods are items . However, you can also make smaller elements such as parameters be items if you want them to be referenceable and customizable. Items can be hierarchical. One item can have other items as children . For example, in C#, namespaces and classes can have classes and/or methods as children . 1.2 Identifiers Each item has an identifier (ID) which is unique under its parent. As we're targeting to support multiple languages, there is no restrictions as to which characters are not allowed in identifiers. However, to make identifiers easier to recognize and resolve in Markdown, it's not RECOMMENDED to have whitespaces in identifiers. Markdown processor MAY implement some algorithm to tolerate whitespaces in handwritten Markdown. (Leading and trailing spaces MUST be removed from identifier.) Identifier MUST be treated as case-sensitive when comparing equality. Each item has a unique identifier (UID) which is globally unique. A UID is defined as follows: If an item does not have a parent , its UID is its ID . Otherwise, its UID is the combination of the UID of its parent , a separator and the ID of the item itself. Valid separators are . , : , / and \\ . For example, for a class String under namespace System , its ID is String and UID is System.String . Given the above definition, an item 's UID MUST starts with the UID of its parent (and any of its ancestors) and ends with the ID of itself. This is useful to quickly determine whether an item is under another item . 1.3 Alias Identifier could be very long, which makes it difficult to write by hand in Markdown. For example, it's easy to create a long ID in C# like this: Format(System.IFormatProvider,System.String,System.Object,System.Object) We can create short alias for items so that they can be referenced easily. Alias is same as ID , except: It doesn't have to be unique. One item can have multiple aliases . It's not RECOMMENDED to create an alias that has nothing to do with an item's ID . Usually an item 's alias is part of its ID so it's easy to recognize and memorize. For example, for the case above, we usually create an alias Format() . We can easily get a \"global\" alias for an item by replacing the ID part of its UID with its alias. 2. File Structure 2.1 File Format You can use any file format that can represent structural data to store metadata. However, we recommend using YAML or JSON . In this document, we use YAML in examples, but all YAML can be converted to JSON easily. 2.2 File Layout A metadata file consists of two parts: An \"item\" section and a \"reference\" section. Each section is a list of objects and each object is a key-value pair (hereafter referred to as \"property\") list that represents an item . 2.3 Item Section Though items can be hierarchical, they are flat in an item section. Instead, each item has a \"children\" property indicating its children and a \"parent\" property indicating its parent. An item object has some basic properties: Property Description uid REQUIRED . The unique identifier of the item . children OPTIONAL . A list of UIDs of the item 's children. Can be omitted if there are no children . parent OPTIONAL . The UID of the item 's parent. If omitted, metadata parser will try to figure out its parent from the children information of other items within the same file. Here is an example of a YAML format metadata file for C# Object class: items: - uid: System.Object parent: System children: - System.Object.Object() - System.Object.Equals(System.Object) - System.Object.Equals(System.Object,System.Object) - System.Object.Finalize() - System.Object.GetHashCode() - System.Object.GetType() - System.Object.MemberwiseClone() - System.Object.ReferenceEquals() - System.Object.ToString() - uid: System.Object.Object() parent: System.Object - uid: System.Object.Equals(System.Object) parent: System.Object - uid: System.Object.Equals(System.Object,System.Object) parent: System.Object - uid: System.Object.Finalize() parent: System.Object - uid: System.Object.GetHashCode() parent: System.Object - uid: System.Object.GetType() parent: System.Object - uid: System.Object.MemberwiseClone() parent: System.Object - uid: System.Object.ReferenceEquals() parent: System.Object - uid: System.Object.ToString() parent: System.Object references: ... Items SHOULD be organized based upon how they will display in documentation. For example, if you want all members of a class be displayed in a single page, put all members in a single metadata file. 2.3 Item Object In additional to the properties listed in last section, item object also has some OPTIONAL properties : Property Description id The identifier of the item . alias A list of aliases of the item . name The display name of the item . fullName The full display name of the item . In programming languages, it's usually the full qualified name. type The type of the item , such as class, method, etc. url If it's a relative URL, then it's another metadata file that defines the item . If it's an absolute URL, it means the item is coming from an external library, and the URL is the documentation page of this item . If omitted, the URL is the location of the current file. source The source code information of the item . It's an object that contains following properties : 1. repo: The remote Git repository of the source code. 2. branch: the branch of the source code. 3. revision: The Git revision of the source code. 4. path: the path to the source code file where the item is defined. 5. startLine: the start line of the item definition. 6. endLine: the end line of the item definition. Here is an example of a C# Dictionary class: - uid: System.Collections.Generic.Dictionary`2 id: Dictionary`2 alias: - Dictionary parent: System.Collections.Generic name: Dictionary<TKey, TValue> fullName: System.Collections.Generic.Dictionary<TKey, TValue> type: class url: System.Collections.Generic.Dictionary`2.yml source: repo: https://github.com/dotnet/netfx.git branch: master revision: 5ed47001acfb284a301260271f7d36d2bb014432 path: src/system/collections/generic/dictionary.cs startLine: 1 endLine: 100 2.4 Custom Properties Besides the predefined properties , item can have its own properties . One restriction is property name MUST NOT contains dots, as dot in property name will have special meaning (described in later section). 2.5 Reference Section Reference section also contains a list of items . These items serve as the references by items in item section and won't show up in documentation. Also, reference item doesn't need to have full properties , it just contains necessary information needed by its referrer (for example, name or URL). In metadata file, all items MUST be referenced by UID . It's RECOMMENDED to include all referenced items in reference section. This makes the file self-contained and easy to render at runtime. Many programming languages have the concept of \"template instantiation\". For example, in C#, you can create a new type List<int> from List<T> with argument int . You can create a reference for \"template instances\". For example, for a class inherited from List<int> : items: - uid: NumberList inherits: - System.Collections.Generic.List<System.Int32> references: - uid: System.Collections.Generic.List`1<System.Int32> link: @\"System.Collections.Generic.List`1\"<@\"System.Int32\"> - uid: System.Collections.Generic.List`1 name: List url: system.collections.generic.list`1.yml - uid: System.Int32 name: int url: system.int32.yml 2.6 Multiple Language Support An item may need to support multiple languages. For example, in .NET, a class can be used in C#, VB, managed C++ and F#. Different languages may have differences in properties . For example, a list of string is displayed as List<string> in C#, while List(Of string) in VB. To support this scenario, we introduce a concept of language context to allow defining different property values in different languages. If a property name is in the form of property_name.language_name , it defines the value of property_name under language_name . For example: - uid: System.Collections.Generic.Dictionary`2 name.csharp: Dictionary<TKey, TValue> name.vb: Dictionary(Of TKey, TValue) This means the name of dictionary is Dictionary<TKey, TValue> in C# and Dictionary(Of TKey, TValue) in VB. The following properties SHALL NOT be overridden in language context: uid, id, alias, children, and parent. 3. Work with Metadata in Markdown 3.1 YAML Metadata Section In a Markdown file, you can also define items using the same metadata syntax. The metadata definition MUST be in YAML format and enclosed by triple-dash lines ( --- ). Here is an example: --- uid: System.String summary: String class --- This is a **string** class. You can have multiple YAML sections inside a single Markdown file, but in a single YAML section, there MUST be only one item . The YAML metadata section does not have to contain all properties . The only property that MUST appear is \"uid\", which is used to match the same item in metadata file. The most common scenario for using YAML section is to specify which item the markdown doc belongs to. But you can also overwrite item property by defining one with the same name in YAML section. In the above example, the property \"summary\" will overwrite the same one in metadata. As with language context, the following properties SHALL NOT be overridden: uid, id, alias, children, and parent. You SHALL NOT define new item in Markdown. 3.2 Reference Items in Markdown To cross reference an item , you can use URI with xref scheme. You can either use standard link or automatic link with the above URI. For example, to cross reference System.String : [System.String](xref:System.String) <xref:System.String> Since item reference is a URI, special characters (like # , ? ) MUST be encoded . We also introduce a shorthand markdown syntax to cross reference easily: If a string starts with @ , and followed by a string enclosed by quotes ' or double quotes \" , it will be treated as an item reference. The string inside \"\" or '' is the UID of the item . Here is one example: @\"System.String\" Markdown processor MAY implement some algorithm to allow omit curly braces if ID is simple enough. For example, For reference like @\"int\" , we may also want to allow @int . When rendering references in Markdown, they will expand into a link with the item 's name as link title. You can also customize the link title using the standard syntax of Markdown: [Dictionary](xref:System.Collections.Generic.Dictionary`2)<[String](xref:System.String), [String](xref:System.String)> Will be rendered to: Dictionary < String , String > Besides UID , we also allow referencing items using ID and alias , in the Markdown processor, the below algorithm SHOULD be implemented to resolve references. Check whether the reference matches: Any identifier of current item 's children. Any alias of current item 's children. Any identifier of current item 's silbings. Any alias of current item 's silbings. A UID . A global alias ."
  },
  "tutorial/advanced_support_hyperlink.html": {
    "href": "tutorial/advanced_support_hyperlink.html",
    "title": "🔧 Advanced: Support Hyperlink | DocFX website",
    "keywords": "ðŸ”§ Advanced: Support Hyperlink In this topic, we will support hyperlinking in rtf files. Create a hyperlink in the rtf file: Open foo.rtf by Word . Add a hyperlink in content Set the link target to an existing bar.rtf Save the document. About link An author can write any valid hyperlink in the document, and then needs to run DocFX build to update file links. What is file link: The hyperlink must be a relative path and not rooted. valid: foo\\bar.rtf , ../foobar.rtf invalid: /foo.rtf , c:\\foo\\bar.rtf , http://foo.bar/ , mailto:foo@bar.foobar The file must exist. Why update file link: The story is: In foo.rtf , it has a file link to bar.rtf . In document build, bar.rtf generates a file with the name bar.html . But in foo.rtf , the link target is still bar.rtf , thus in the output folder we cannot find this file and we will get a broken link. To resolve the broken link, we need to update the link target from bar.rtf to bar.html . File link is a relative path, but we cannot track the relative path easily. So we track the normalized file path instead. What is a normalized file path : It always starts from the working folder (the folder that contains docfx.json ), and we write it as ~/ . No ../ or ./ or // Replace \\ with / . No url encoding. The path must be same as it in the file system. No anchor. Finally, a valid normalized file path looks like: ~/foo/bar.rtf . Pros Same form in different documents when the target is the same file. When file structure is: z:\\a\\b\\foo.rtf z:\\a\\b\\c\\bar.rtf z:\\a\\b\\c\\foobar.rtf Link target c/foobar.rtf in foo.rtf and link target foobar.rtf in bar.rtf is the same file. When the working folder is z:\\a\\ , the link target is always ~/b/c/foobar.rtf . Avoids differences in style when referring to the same file. For example, the following hyperlinks target the same file: a/foo.rtf , ./a/foo.rtf , a/b/../foo.rtf , a//foo.rtf , a\\foo.rtf Cons A folder with the name ~ is not supported. Prepare Open the rtf plug-in library project in Visual Studio . Add nuget packages: for plug-in: Microsoft.DocAsCode.Utility Add framework assembly reference: System.Core , System.Web , System.Xml.Linq Update rtf document processor Following the rules for hyperlink, add a FixLink help method: private static void FixLink(XAttribute link, RelativePath filePath, HashSet<string> linkToFiles) { string linkFile; string anchor = null; if (PathUtility.IsRelativePath(link.Value)) { var index = link.Value.IndexOf('#'); if (index == -1) { linkFile = link.Value; } else if (index == 0) { return; } else { linkFile = link.Value.Remove(index); anchor = link.Value.Substring(index); } var path = filePath + (RelativePath)linkFile; var file = (string)path.GetPathFromWorkingFolder(); link.Value = file + anchor; linkToFiles.Add(HttpUtility.UrlDecode(file)); } } RelativePath helps us generate the links correctly. Then add CollectLinksAndFixDocument method: private static HashSet<string> CollectLinksAndFixDocument(FileModel model) { string content = (string)((Dictionary<string, object>)model.Content)[\"conceptual\"]; var doc = XDocument.Parse(content); var links = from attr in doc.Descendants().Attributes() where \"href\".Equals(attr.Name.LocalName, StringComparison.OrdinalIgnoreCase) || \"src\".Equals(attr.Name.LocalName, StringComparison.OrdinalIgnoreCase) select attr; var path = (RelativePath)model.File; var linkToFiles = new HashSet<string>(); foreach (var link in links) { FixLink(link, path, linkToFiles); } using (var sw = new StringWriter()) { doc.Save(sw); ((Dictionary<string, object>)model.Content)[\"conceptual\"] = sw.ToString(); } return linkToFiles; } Modify Save method with report links: public SaveResult Save(FileModel model) { HashSet<string> linkToFiles = CollectLinksAndFixDocument(model); return new SaveResult { DocumentType = \"Conceptual\", ModelFile = model.File, LinkToFiles = linkToFiles.ToImmutableArray(), }; } <!-- todo : `Update Reference` is preserved for next version of plugin. --> View final RtfDocumentProcessor.cs Test and verify Build project. Copy dll to Plugins folder. Modify rtf file, create hyperlink, link to another rtf file, and save. Build with command DocFX build . Verify output html file."
  },
  "tutorial/docfx.exe_user_manual.html": {
    "href": "tutorial/docfx.exe_user_manual.html",
    "title": "docfx.exe User Manual | DocFX website",
    "keywords": "Doc-as-code: docfx.exe User Manual 0. Introduction docfx.exe is used to generate documentation for programs. It has the ability to: Extract language metadata for programing languages as defined in Metadata Format Specification . Currently language VB and CSharp are supported. The language metadata will be saved with YAML format as described in YAML 1.2 . Look for available conceptual files as provided and link it with existing programs with syntax described in Section 3. Work with Metadata in Markdown . Supported conceptual files are plain text files, html files, and markdown files. Generate documentation to a. Visualize language metadata, with extra content provided by linked conceptual files using syntax described in Section 3. Work with Metadata in Markdown . b. Organize and render available conceptual files. It can be easily cross-referenced with language metadata pages. We support Docfx Flavored Markdown(DFM) for writing conceptual files. DFM is 100% compatible with Github Flavored Markdown(GFM) and add several new features including file inclusion , cross reference , and yaml header . For detailed description about DFM, please refer to DFM . Currently generating documentations to a client only website is supported. The generated website can be easily published to whatever platform such as Github Pages and Azure Website with no extra effort. Offline documentations such as pdf are planned to be supported in the future. 1. Syntax docfx <command> [<args>] 2. Commands 2.0 Init command docfx init docfx init helps generate an docfx.json file. 2.1 Help command docfx help docfx help -a list available subcommands. docfx help <command> to read about a specific subcommand 2.2 Extract language metadata command docfx metadata Syntax docfx metadata [<projects>] Layout |-- <metadata folder> |-- api | |-- <namespace>.yml | |-- <class>.yml |-- toc.yml |-- index.yml 2.2.1 Optional <projects> argument <projects> specifies the projects to have metadata extracted. There are several approaches to extract language metadata. From a supported project file or project file list Supported project file extensions include .csproj , .vbproj , .sln , and project.json . Note project.json ( DNX project file) is only supported in DNX version of DocFX . Please refer to Getting Started for how to use DocFX in DNX . Files can be combined using , as separator, e.g. docfx metadata a.csproj,b.sln . From a supported source code file or source code file list Supported source code file extensions include .cs and .vb . Files can be combined using , as separator and search pattern . From docfx.json file, as described in Section3 . If the argument is not specified, docfx.exe will try reading docfx.json under current directory. The default output folder is _site/ folder if it is not specified in docfx.json under current directory. 2.3 Generate documentation command docfx build Syntax docfx build [-o:<output_path>] [-t:<template folder>] docfx build generates documentation for current folder. If toc.yml or toc.md is found in current folder, it will be rendered as the top level TABLE-OF-CONTENT. As in website, it will be rendered as the top navigation bar. NOTE that homepage is not supported in toc.md . And if href is referencing to a folder , it must end with / . toc.yml syntax toc.yml is an array of items. Each item can have following properties: Property Description name Requried . The title of the navigation page. href Required . Can be a folder or a file UNDER current folder. Folder must be end with / . If is a folder, TOC.md inside the folder will be rendered as second level TABLE-OF-CONTENT. As in website, it will be rendered as sidebar. homepage The default content shown when no article is selected. TOC.yml Sample - name: Home href: articles/Home.md - name: Roslyn Wiki href: roslyn_wiki/ - name: Roslyn API href: api_roslyn/ homepage: homepages/roslyn_language_features.md TOC.md Sample ## [Home](articles/Home.md) ## [Roslyn Wiki](roslyn_wiki/) ## [Roslyn API](api_roslyn/) 2.3.1 Optional <output_path> argument The default output folder is _site/ folder 2.3.2 Optional <template folder> argument If specified, use the template from template folder Template Folder Structure |-- <template folder> |-- index.html |-- styles | |-- docascode.css | |-- docascode.js |-- template | |-- toc.html | |-- navbar.html | |-- yamlContent.html |-- favicon.ico |-- logo.ico 3. docfx.json Format Top level docfx.json structure is key-value pair. key is the name of the subcommand, current supported subcommands are metadata and build . 3.1 Properties for metadata Metadata section defines an array of source projects and their output folder. Each item has src and dest property. src defines the source projects to have metadata generated, which is in File Mapping Format . Detailed syntax is described in 4. Supported name-files File Mapping Format below. dest defines the output folder of the generated metadata files. Sample { \"metadata\": [ { \"src\": [ { \"files\": [\"**/*.csproj\"], \"exclude\": [ \"**/bin/**\", \"**/obj/**\" ], \"src\": \"../src\" } ], \"dest\": \"obj/docfx/api/dotnet\" }, { \"src\": [ { \"files\": [\"**/*.js\"], \"src\": \"../src\" } ], \"dest\": \"obj/docfx/api/js\" } ] } 3.2 Properties for build Key Description content Contains all the files to generate documentation, including metadata yml files and conceptual md files. name-files file mapping with several ways to define it, as to be described in Section4 . The files contains all the project files to have API generated. resource Contains all the resource files that conceptual and metadata files dependent on, e.g. image files. name-files file mapping with several ways to define it, as to be described in Section4 . overwrite Contains all the conceputal files which contains yaml header with uid and is intended to override the existing metadata yml files. name-files file mapping with several ways to define it, as to be described in Section4 . globalMetadata Contains metadata that will be applied to every file, in key-value pair format. For example, you can define \"_appTitle\": \"This is the title\" in this section, and when applying template default , it will be part of the page title as defined in the template. fileMetadata Contains metadata that will be applied to specific files. name-files file mapping with several ways to define it, as to be described in Section4 . globalMetadataFile Obsoleted , Specify a JSON file path containing globalMetadata settings, as similar to {\"globalMetadata\":{\"key\":\"value\"}} . globalMetadataFiles Specify a list of JSON file path containing globalMetadata settings, as similar to {\"key\":\"value\"} . Please read Section3.2.3 for detail. fileMetadataFile Obsoleted , Specify a JSON file path containing fileMetadata settings, as similar to {\"fileMetadata\":{\"key\":\"value\"}} . fileMetadataFiles Specify a list of JSON file path containing fileMetadata settings, as similar to {\"key\":\"value\"} . Please read Section3.2.3 for detail. template The templates applied to each file in the documentation. It can be a string or an array. The latter ones will override the former ones if the name of the file inside the template collides. If ommited, embedded default template will be used. theme The themes applied to the documentation. Theme is used to customize the styles generated by template . It can be a string or an array. The latter ones will override the former ones if the name of the file inside the template collides. If ommited, no theme will be applied, the default theme inside the template will be used. externalReferences Obsoleted , Contains rpk files that define the external references. name-files file mapping with several ways to define it, as to be described in Section4 . xref Specifies the urls of xrefmap used by content files. Currently, it supports following scheme: http, https, ftp, file, embedded. exportRawModel If set to true, data model to run template script will be extracted in .raw.json extension. rawModelOutputFolder Specify the output folder for the raw model. If not set, the raw model will be generated to the same folder as the output documentation. exportViewModel If set to true, data model to apply template will be extracted in .view.json extension. viewModelOutputFolder Specify the output folder for the view model. If not set, the view model will be generated to the same folder as the output documentation. dryRun If set to true, template will not be actually applied to the documents. This option is always used with --exportRawModel or --exportViewModel , so that only raw model files or view model files are generated. maxParallelism Set the max parallelism, 0 (default) is same as the count of CPU cores. markdownEngineName Set the name of markdown engine, default is dfm , and another build-in engine is gfm . markdownEngineProperties Set the parameters for markdown engine, value should be a JSON string. noLangKeyword Disable default lang keyword, it can be downloaded from here . 3.2.1 Template s and Theme s Template s are used to transform YAML files generated by docfx to human-readable page s. A page can be a markdown file, a html file or even a plain text file. Each YAML file will be transformed to ONE page and be exported to the output folder preserving its relative path to src . For example, if page s are in HTML format, a static website will be generated in the output folder. Theme is to provide general styles for all the generated page s. Files inside a theme will be generally COPIED to the output folder. A typical usage is, after YAML files are transformed to HTML pages, well-designed CSS style files in a Theme can then overwrite the default styles defined in template , e.g. main.css . There are two ways to use custom templates and themes. To use a custom template, one way is to specify template path with --template (or -t ) command option, multiple templates must be separated by , with no spaces. The other way is to set key-value mapping in docfx.json : { ... { \"build\" : { ... \"template\": \"custom\", ... } ... } { ... { \"build\" : { ... \"template\": [\"default\", \"X:/template/custom\"], ... } ... } The template path could either be a zip file called <template>.zip or a folder called <template> . To custom theme, one way is to specify theme name with --theme command option, multiple themes must be separated by , with no spaces. The other way is to set key-value mapping in docfx.json as similar to defining template. Also, both .zip file and folder are supported. Please refer to How to Create Custom Templates to create custom templates. Sample { \"build\": { \"content\": [ { \"files\": [\"**/*.yml\"], \"src\": \"obj/docfx\" }, { \"files\": [\"tutorial/**/*.md\", \"spec/**/*.md\", \"spec/**/toc.yml\"] }, { \"files\": [\"toc.yml\"] } ], \"resource\": [ { \"files\": [\"spec/images/**\"] } ], \"overwrite\": \"apispec/*.md\", \"externalReference\": [ ], \"globalMetadata\": { \"_appTitle\": \"DocFX website\" }, \"dest\": \"_site\", \"template\": \"default\" } } 3.2.2 Reserved Metadata After passing values through global metadata or file metadata, DocFX can use these metadata in templates to control the output html. Reserved metadatas: Metadata Name Type Description _appTitle string Will be appended to each output page's head title. _appFooter string The footer text. Will show DocFX's Copyright text if not specified. _enableSearch bool Indicate whether to show the search box on the top of page. _disableNavbar bool Indicate whether to show the navigation bar on the top of page. _disableBreadcrumb bool Indicate whether to show breadcrumb on the top of page. _disableToc bool Indicate whether to show table of contents on the left of page. _disableAffix bool Indicate whether to show the affix bar on the right of page. _disableContribution bool Indicate whether to show the View Source and Improve this Doc buttons. _gitContribute object Customize the Improve this Doc URL button for public contributors. Use repo to specify the contribution repository URL. Use branch to specify the contribution branch. Use path to specify the folder for new overwrite files . 3.2.3 Separated metadata files for global metadata and file metadata There're three ways to set metadata for a file in DocFX: using global metadata, it will set metadata for every file. using file metadata, it will set metadata for files that match pattern. using YAML header, it will set metadata for current file. In above ways, the later way will always overwrite the former way if the same key of metadata is set. Here we will show you how to set global metadata and file metadata using separated metadata files. Take global metadata for example, you can set globalMetadataFiles in docfx.json or --globalMetadataFiles in build command line. The usage of fileMetadataFiles is the same as globalMetadataFiles . There're some metadata file examples: globalMetadata file example { \"_appTitle\": \"DocFX website\", \"_enableSearch\": \"true\" } fileMetadata file example { \"priority\": { \"**.md\": 2.5, \"spec/**.md\": 3 }, \"keywords\": { \"obj/docfx/**\": [\"API\", \"Reference\"], \"spec/**.md\": [\"Spec\", \"Conceptual\"] } } There're some examples about how to use separated metadata files. use globalMetadataFiles in docfx.json ... \"globalMetadataFiles\": [\"global1.json\", \"global2.json\"], ... use --globalMetadataFiles in build command line docfx build --globalMetadataFiles global1.json,global2.json use fileMetadataFiles in docfx.json ... \"fileMetadataFiles\": [\"file1.json\", \"file2.json\"], ... use --fileMetadataFiles in build command line docfx build --fileMetadataFiles file1.json,file2.json Note that, metadata set in command line will merge with metadata set in docfx.json . If same key for global metadata was set, the order to be overwritten would be(the later one will overwrite the former one): global metadata from docfx config file global metadata from global metadata files global metadata from command line If same file pattern for file metadata was set, the order to be overwritten would be(the later one will overwrite the former one): file metadata from docfx config file file metadata from file metadata files Given multiple metadata files, the behavior would be undetermined , if same key is set in these files. 4. Supported File Mapping Format There are several ways to define file mapping. 4.1 Array Format This form supports multiple file mappings, and also allows additional properties per mapping. Supported properties: Property Name Description files REQUIRED . The file or file array, glob pattern is supported. name Obsoleted , please use dest . exclude The files to be excluded, glob pattern is supported. cwd Obsoleted , please use src . src Specifies the source directory. If omitted, the directory of the config file will be used. Use this option when you want to refer to files in relative folders while want to keep folder structure. e.g. set src to .. . dest The folder name for the generated files. version Version name for the current file mapping. If not set, treat the current file-mapping item as in default version. Mappings with the same version name will be built together. Cross reference doesn't support cross different versions. caseSensitive TOBEIMPLEMENTED . Default value is false . If set to true , the glob pattern is case sensitive. e.g. *.txt will not match 1.TXT . For OS Windows, file path is case insensitive while for Linux/Unix, file path is case sensitive. This option offers user the flexibility to determine how to search files. supportBackslash TOBEIMPLEMENTED . Default value is true . If set to true , \\ will be considered as file path separator. Otherwise, \\ will be considered as normal character if escape is set to true and as escape character if escape is set to false . If escape is set to true , \\\\ should be used to represent file path separator. escape TOBEIMPLEMENTED . Default value is false . If set to true , \\ character is used as escape character, e.g. \\{\\}.txt will match {}.txt . \"key\": [ {\"files\": [\"file1\", \"file2\"], \"dest\": \"dest1\"}, {\"files\": \"file3\", \"dest\": \"dest2\"}, {\"files\": [\"file4\", \"file5\"], \"exclude\": [\"file5\"], \"src\": \"folder1\"}, {\"files\": \"Example.yml\", \"src\": \"v1.0\", \"dest\":\"v1.0/api\", \"version\": \"v1.0\"}, {\"files\": \"Example.yml\", \"src\": \"v2.0\", \"dest\":\"v2.0/api\", \"version\": \"v2.0\"} ] 4.2 Compact Format \"key\": [\"file1\", \"file2\"] 4.3 Glob Pattern DocFX uses Glob to support glob pattern in file path. It offers several options to determine how to parse the Glob pattern: caseSensitive : Default value is false . If set to true , the glob pattern is case sensitive. e.g. *.txt will not match 1.TXT . For OS Windows, file path is case insensitive while for Linux/Unix, file path is case sensitive. This option offers user the flexibility to determine how to search files. supportBackslash : Default value is true . If set to true , \\ will be considered as file path separator. Otherwise, \\ will be considered as normal character if escape is set to true and as escape character if escape is set to false . If escape is set to true , \\\\ should be used to represent file path separator. escape : Default value is false . If set to true , \\ character is used as escape character, e.g. \\{\\}.txt will match {}.txt . In general, the glob pattern contains the following rules: * matches any number of characters, but not / ? matches a single character, but not / ** matches any number of characters, including / , as long as it's the only thing in a path part {} allows for a comma-separated list of OR expressions SAMPLES 5. Q & A Do we support files outside current project folder(the folder when docfx.json exists)? A: YES. DO specify src and files outside of current folder will be copied to output folder keeping the same relative path to src . Do we support output folder outside current project folder(the folder when docfx.json exists)? A: YES. Do we support referencing files outside of current project folder(the folder when docfx.json exists)? A: NO."
  },
  "tutorial/docfx_getting_started.html": {
    "href": "tutorial/docfx_getting_started.html",
    "title": "Getting Started with DocFX | DocFX website",
    "keywords": "Getting Started with DocFX 1. What is DocFX DocFX is an API documentation generator for .NET, and currently it supports C# and VB. It generates API reference documentation from triple-slash comments in your source code. It also allows you to use Markdown files to create additional topics such as tutorials and how-tos, and to customize the generated reference documentation. DocFX builds a static HTML website from your source code and Markdown files, which can be easily hosted on any web servers (for example, github.io ). Also, DocFX provides you the flexibility to customize the layout and style of your website through templates. If you are interested in creating your own website with your own styles, you can follow how to create custom template to create custom templates. DocFX also has the following cool features: Integration with your source code. You can click \"View Source\" on an API to navigate to the source code in GitHub (your source code must be pushed to GitHub). Cross-platform support. We have both exe version that runs under Windows and a DNX version that runs cross platform. Integration with Visual Studio. You can seamlessly use DocFX within Visual Studio. Markdown extensions. We introduced DocFX Flavored Markdown(DFM) to help you write API documentation. DFM is 100% compatible with GitHub Flavored Markdown(GFM) with some useful extensions, like file inclusion , code snippet , cross reference , and yaml header . For detailed description about DFM, please refer to DFM . 2. Use DocFX as a command-line tool Step1. Download and unzip docfx.zip from https://github.com/dotnet/docfx/releases , extract it to a local folder, and add it to PATH so you can run it anywhere. Step2. Create a sample project docfx init -q This command generates a default project named docfx_project . Step3. Build the website docfx docfx_project\\docfx.json --serve Now you can view the generated website on http://localhost:8080 . 3. Use DocFX in Visual Studio As a prerequisite, you need Visual Studio 2015 to use DocFX in IDE. Step1. Open Visual Studio and create a C# project as your documentation project. You can create an empty ASP.NET Web Application since it has a built-in preview feature that can be used to preview the generated website easily. Step2. Right click on the website project, and choose Manage NuGet Packages... to open the NuGet Package Manager. Search and install docfx.msbuild package. Step3. Create a .cs class in the website project, make sure the class is public , for example: namespace WebApplication1 { public class Class1 { } } Step4. Right click on the website project, and click View -> View in Browser , navigate to /_site sub URL to view your website! 4. Use DocFX under DNX As a prerequisite, you need to install DNVM and DNX . Step1. SET DNX_FEED=https://www.myget.org/F/aspnetrelease/api/v2/ as we depend upon the release version of ASP.NET 1.0.0-rc1. Step2. dnvm upgrade to get the latest dnvm. Step3. Add feed https://www.myget.org/F/aspnetrelease/api/v2/ to NuGet.config. For Windows, the NuGet config file is %AppData%\\NuGet\\NuGet.config . For Linux/OSX, the NuGet config file is ~/.config/NuGet/NuGet.config . Sample NuGet.config <?xml version=\"1.0\" encoding=\"utf-8\"?> <configuration> <packageSources> <add key=\"myget.release\" value=\"https://www.myget.org/F/aspnetrelease/api/v2/\" /> <add key=\"nuget.org\" value=\"https://www.nuget.org/api/v2/\" /> </packageSources> <disabledPackageSources /> <activePackageSource> <add key=\"nuget.org\" value=\"https://www.nuget.org/api/v2/\" /> </activePackageSource> </configuration> Step4. dnu commands install docfx to install DocFX as a command. Step5. docfx init -q to generate a sample project. Step6. docfx docfx_project\\docfx.json --serve to build your project and preview your site at http://localhost:8080 . Please refer to DocFX User Manual for detailed description of docfx.json . 5. Build from source code Build without DNX There're two options: Run build nondnx under DocFX code repo Open NonDNX.sln under DocFX code repo in Visual Studio and build it. Build with DNX As a prerequisite, you need: Microsoft Build Tools 2015 DNVM Node.js Step1. git clone https://github.com/dotnet/docfx.git to get the latest code. Step2. dnvm install 1.0.0-rc1-final Step3. Run build.cmd under root folder. Step4. Add artifacts folder to nuget source by in IDE: Tools > NuGet Package Manager > Package Manager Settings > Package Sources Step5. Follow steps in #2, #3, #4 to use DocFX in command-line, IDE or DNX. 6. A seed project to play with DocFX Here is a seed project https://github.com/docascode/docfx-seed . It contains A basic C# project under src . Several conceptual files under articles . An overwrite file to add extra content to API under specs . toc.yml under root folder. It renders as the navbar of the website. docfx.json under root folder. It is the configuration file that docfx depends upon. Tip: It is a good practice to separate files with different type into different folders. 7. Q&A Q: How do I quickly reference APIs from other APIs or conceptual files? A: Use @uid syntax. Q: What is uid and where do I find uid ? A: Refer to Cross Reference section in DFM . Q: How do I quickly find uid in the website? A: In the generated website, hit F12 to view source, and look at the title of an API. You can find uid in data-uid attribute."
  },
  "tutorial/howto_add_a_customized_post_processor.html": {
    "href": "tutorial/howto_add_a_customized_post_processor.html",
    "title": "How-to: Add a customized post-processor | DocFX website",
    "keywords": "How-to: Add a customized post-processor We provide the ability to process output files by adding a customized post-processor. In DocFX, the index file for full-text-search is generated by one post-processor named ExtractSearchIndex . In this topic, we will show how to add a customized post-processor. Step0: Preparation Create a new C# class library project in Visual Studio . Add nuget packages: System.Collections.Immutable with version 1.1.37 Microsoft.Composition with version 1.0.27 Add Microsoft.DocAsCode.Plugins If you are building DocFX from source code, add this reference to the project, otherwise add the nuget package Microsoft.DocAsCode.Plugins with the same version as DocFX. Step1: Create a new class (MyProcessor.cs) with the following code: [Export(nameof(MyProcessor), typeof(IPostProcessor))] public class MyProcessor : IPostProcessor { // TODO: implements IPostProcessor } Step2: Update global metadata public ImmutableDictionary<string, object> PrepareMetadata(ImmutableDictionary<string, object> metadata) { // TODO: add/remove/update property from global metadata return metadata; } In this method, we can update the global metadata before building all the files declared in docfx.json . Otherwise, you can just return the metadata from parameters if you don't need to change global metadata. Using ExtractSearchIndex for example, we add \"_enableSearch\": true in global metadata. The default template would then know it should load a search box in the navbar. Step3: Process all the files generated by DocFX public Manifest Process(Manifest manifest, string outputFolder) { // TODO: add/remove/update all the files included in manifest return manifest; } Input for the method manifest contains a list of all files to process, and outputFolder specifies the output folder where our static website will be placed. We can implement customized operations here to process all files generated by DocFX. Using ExtractSearchIndex for example again, we traverse all HTML files, extract key words from these HTML files and save a file named index.json under the outputFolder . Finally we return the manifest which is not modified. Step4: Build your project and copy the output dll files to: Global: the folder with name Plugins under DocFX.exe Non-global: the folder with name Plugins under a template folder, then run DocFX build command with parameter -t {template} . Hint : DocFX can merge templates, so we can specify multiple template folders as DocFX build -t {templateForRender},{templateForPlugins} . Each of the template folders should have a subfolder named Plugins with exported assemblies. Step5: Add your post processor in docfx.json In this step, we need to enable the processor by adding its name in docfx.json . Here is an example: { \"build\": { ... \"postProcessors\": [\"OutputPDF\", \"BeautifyHTML\", \"OutputPDF\"] } } As you can see, the postProcessors is an array, which means it could have multiple processors. It needs to be pointed out that the order of postProcessors written in docfx.json is also the order to process output files. In the above example, DocFX will run OutputPDF first, then BeautifyHTML , and then OutputPDF again. If you want to enable the post processors without changing docfx.json , you can use the build command option like docfx build --postProcessors=OutputPDF,BeautifyHTML,OutputPDF . One more thing need to be noted: the build command option postProcessors would override the corresponding configuration in docfx.json ."
  },
  "tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.html": {
    "href": "tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.html",
    "title": "How-to: Build your own type of documentation with a custom plug-in | DocFX website",
    "keywords": "How-to: Build your own type of documentation with a custom plug-in In this topic we will create a plug-in to convert some simple rich text format files to html documents. Goal and limitation In scope: Our input will be a set of rtf files with .rtf as the file extension name. The rtf files will be built as html document. Out of scope: Picture or other object in rtf files. Hyperlink in rtf files. (in the advanced tutorial , we will describe how to support hyperlinks in a custom plugin.) Metadata and title. Preparation Create a new C# class library project in Visual Studio . Add nuget packages: System.Collections.Immutable with version 1.1.37 Microsoft.Composition with version 1.0.27 Add Microsoft.DocAsCode.Plugins If building DocFX from source code then add a reference to the project, otherwise add the nuget package Microsoft.DocAsCode.Plugins with the same version as DocFX. Add framework assembly references: PresentationCore , PresentationFramework , WindowsBase Add a project for converting rtf to html: Clone project MarkupConverter , and reference it. Copy the code file StaTaskScheduler.cs from ParExtSamples Create a document processor Responsibility of the document processor Declare which file can be handled. Load from the file to the object model. Provide build steps. Report document type, file links and xref links in document. Update references. Create our RtfDocumentProcessor Create a new class (RtfDocumentProcessor.cs) with the following code: [Export(typeof(IDocumentProcessor))] public class RtfDocumentProcessor : IDocumentProcessor { // todo : implements IDocumentProcessor. } Declare that we can handle the .rtf file: public ProcessingPriority GetProcessingPriority(FileAndType file) { if (file.Type == DocumentType.Article && \".rtf\".Equals(Path.GetExtension(file.File), StringComparison.OrdinalIgnoreCase)) { return ProcessingPriority.Normal; } return ProcessingPriority.NotSupported; } Here we declare this processor can handle any .rtf file in the article category with normal priority. When two or more processors compete for the same file, DocFX will give it to the higher priority one. Unexpected : two or more processor declare for the same file with same priority. Load our rtf file by reading all text: public FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) { var content = new Dictionary<string, object> { [\"conceptual\"] = File.ReadAllText(Path.Combine(file.BaseDir, file.File)), [\"type\"] = \"Conceptual\", [\"path\"] = file.File, }; return new FileModel(file, content); } We use Dictionary<string, object> as the data model, similar to how ConceptualDocumentProcessor stores the content of markdown files. Implement Save method as follows: public SaveResult Save(FileModel model) { return new SaveResult { DocumentType = \"Conceptual\", ModelFile = model.File, LinkToFiles = linkToFiles.ToImmutableArray(), }; } BuildSteps property can provide several build steps for the model. We suggest implementing this in the following manner: [ImportMany(nameof(RtfDocumentProcessor))] public IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Name property is used to display in the log, so give any constant string you like. e.g.: public string Name => nameof(RtfDocumentProcessor); Since we don't support hyperlink, keep the UpdateHref method empty. public void UpdateHref(FileModel model, IDocumentBuildContext context) { } View the final RtfDocumentProcessor.cs Create a document build step Responsibility of the build step Reconstruct documents via the Prebuild method, e.g.: remove some document according to a certain rule. Transform document content via Build method, e.g.: transform rtf content to html content. Transform more content required by all document processed via the PostBuild method, e.g.: extract the link text from the title of another document. About build order: For all documents in one processor always Prebuild -> Build -> Postbuild . For all documents in one processor always invoke Prebuild by BuildOrder . For each document in one processor always invoke Build by BuildOrder . For all documents in one processor always invoke Postbuild by BuildOrder . e.g.: Document processor X has two steps: A (with BuildOrder=1), B (with BuildOrder=2). When X is handling documents [D1, D2, D3], the invoke order is as follows: A.Prebuild([D1, D2, D3]) returns [D1, D2, D3] B.Prebuild([D1, D2, D3]) returns [D1, D2, D3] Parallel( A.Build(D1) -> B.Build(D1), A.Build(D2) -> B.Build(D2), A.Build(D3) -> B.Build(D3) ) A.Postbuild([D1, D2, D3]) B.Postbuild([D1, D2, D3]) Create our RtfBuildStep: Create a new class (RtfBuildStep.cs), and declare it is a build step for RtfDocumentProcessor : [Export(nameof(RtfDocumentProcessor), typeof(IDocumentBuildStep))] public class RtfBuildStep : IDocumentBuildStep { // todo : implements IDocumentBuildStep. } In the Build method, convert rtf to html: private readonly TaskFactory _taskFactory = new TaskFactory(new StaTaskScheduler(1)); public void Build(FileModel model, IHostService host) { string content = (string)((Dictionary<string, object>)model.Content)[\"conceptual\"]; content = _taskFactory.StartNew(() => RtfToHtmlConverter.ConvertRtfToHtml(content)).Result; ((Dictionary<string, object>)model.Content)[\"conceptual\"] = content; } Implement other methods: public int BuildOrder => 0; public string Name => nameof(RtfBuildStep); public void Postbuild(ImmutableList<FileModel> models, IHostService host) { } public IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) { return models; } View the final RtfBuildStep.cs Enable plug-in Build our project. Copy the output dll files to: Global: the folder with name Plugins under DocFX.exe Non-global: the folder with name Plugins under a template folder. Then run DocFX build command with parameter -t {template} . Hint : DocFX can merge templates so create a template that only contains the Plugins folder, then run the command DocFX build with parameter -t {templateForRender},{templateForPlugins} . Build document Run command DocFX init and set the source article with **.rtf . Run command DocFX build ."
  },
  "tutorial/howto_create_custom_template.html": {
    "href": "tutorial/howto_create_custom_template.html",
    "title": "How-to: Create A Custom Template | DocFX website",
    "keywords": "How-to: Create A Custom Template Templates are organized as a zip package or a folder. The file path (without the .zip extension) of the zip package or the path of the folder is considered to be the template name. Quickstart Let's create a template to transform Markdown files into a simple html file. Step 1. Create a template folder Create a folder for the template, for example, c:/docfx_howto/simple_template . Step 2. Add Renderer file Create a file conceptual.html.primary.tmpl under the template folder with the following content: {{{conceptual}}} Now a simple custom template is created. You may notice that DocFX reports a warning message saying that: Warning: [Build Document.Apply Templates]There is no template processing document type(s): Toc . It is because our custom template only specifies how to handle document with type conceptual . To test the output of the template, create a simple documentation project following Walkthrough Part I or download the zipped documentation project directly. In the documentation project, run docfx build docfx.json -t c:/docfx_howto/simple_template --serve . The -t command option specifies the template name(s) used by the current build. Open http://localhost:8080 and you can see a simple web page as follows: Add Preprocessor file Step 3. Add Preprocessor file Sometimes the input data model is not exactly what Renderer wants, you may want to add some properties to the data model, or modify the data model a little bit before applying the Renderer file. This can be done by creating a Preprocessor file. Create a file conceptual.html.primary.js under the template folder with the following content: exports.transform = function (model) { model._extra_property = \"Hello world\"; return model; } Update the file conceptual.html.primary.tmpl with the following content: <h1>{{_extra_property}}</h1> {{{conceptual}}} In the documentation project, run docfx build docfx.json -t c:/docfx_howto/simple_template --serve . Open http://localhost:8080 and you can see _extra_property is added to the web page. Merge template with default template DocFX contains some embedded template resources that you can refer to directly. You can use docfx template list to list available templates provided by DocFX. Take default template as an example. Run docfx template export default . It exports what's inside default template into the folder _exported_templates . You can see that there are sets of Preprocessor and Renderer files to deal with different types of documents. DocFX supports specifying multiple templates for a documentation project. That allows you to leverage the default template for handling other types of documents, together with your custom template. When dealing with multiple templates, DocFX merges the files inside these templates. The principle for merging is: if a file name collides then the file in the latter template overwrites the one in the former template. For example, you can merge default template and your custom template by calling docfx build docfx.json -t default, c:/docfx_howto/simple_template . Multiple templates are split by a comma , in the command line. Or you can define it in docfx.json by: \"build\": { \"template\": [ \"default\", \"c:/docfx_howto/simple_template\" ] } In the documentation project, run docfx build docfx.json -t default,c:/docfx_howto/simple_template --serve . Now the warning message There is no template processing document type(s): Toc disappears because the default template contains Renderer to handle TOC files. Open http://localhost:8080/toc.html and you can see a toc web page. Tip: Run docfx template export default to view what's inside the default template. NOTE: It is possible that DocFX updates its embedded templates when a new version is released. So please make sure to re-export the template if you overwrite or are dependent on it in your custom template."
  },
  "tutorial/howto_filter_out_unwanted_apis.html": {
    "href": "tutorial/howto_filter_out_unwanted_apis.html",
    "title": "How-to: Filter Out Unwanted APIs | DocFX website",
    "keywords": "How-to: Filter Out Unwanted APIs A filter configuration file is in YAML format. You may filter out unwanted APIs by providing a filter configuration file and specifying its path. Specifying the filter configuration file path The path of the configuration file is specified in the following two ways. Option 1 could overwrite option 2. docfx.exe metadata command argument. docfx.exe metadata -filter <path relative to baseDir or absolutepath> docfx.json metadata section filter property. Sample { \"metadata\": [ { \"src\": [ { \"files\": [ \"src/**.csproj\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\" ] } ], \"dest\": \"obj/api\", \"filter\": \"filterConfig.yml\" } ] } The format of the filter configuration file You could specify apiRules with a list of exclude or include rules. Note The rules would be executed sequentially and the matching process would stop once one rule is matched. Namely, you need to put the most detailed rule in the top. If no rule is matched the API would be included by default. 1. exclude or include APIs by matching their uid with the Regex uidRegex . The below sample excludes all APIs whose uid start with 'Microsoft.DevDiv' except those that start with 'Microsoft.DevDiv.SpecialCase'. - include: uidRegex: ^Microsoft\\.DevDiv\\.SpecialCase - exclude: uidRegex: ^Microsoft\\.DevDiv 2. exclude or include APIs by matching its type , this is often combined with uidRegex . Supported type : Namespace Type Class Struct Enum Interface Delegate Member Event Field Method Property Note Type could be Class , Struct , Enum , Interface , or Delegate . Member could be Event , Field , Method , or Property . Namespace is flattened. Namely, excluding namespace 'A.B' has nothing to do with namespace 'A.B.C'. If a namespace is excluded, all types/members defined in the namespace would also be excluded. If a type is excluded, all members defined in the type would also be excluded. The below sample would exclude all APIs whose uid starts with 'Microsoft.DevDiv' and type is Type , namely Class , Struct , Enum , Interface , or Delegate . - exclude: uidRegex: ^Microsoft\\.DevDiv type: Type 3. exclude or include APIs by containing matched attributes. You can specify an attribute by its uid , ctorArguments and ctorNamedArguments . Note ctorArguments requires a full match of the attribute's constructor arguments, while ctorNamedArguments support a partial match. Namely, ctorArguments should contain all the arguments while ctorNamedArguments could contain a subset of the named arguments. The below sample excludes all APIs which have EditorBrowsableAttribute and its constructor argument is EditorBrowsableState.Never. - exclude: hasAttribute: uid: System.ComponentModel.EditorBrowsableAttribute ctorArguments: - System.ComponentModel.EditorBrowsableState.Never A complete Sample of the filter configuration file follows: apiRules: - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.IRowSetsNative$ - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.MetadataRowSetsNative$ - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.RowSet\\.Columns.*$ type: Member - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.RowSetColumn\\.Name.*$ type: Member - exclude: hasAttribute: uid: System.ComponentModel.EditorBrowsableAttribute ctorArguments: - System.ComponentModel.EditorBrowsableState.Never"
  },
  "tutorial/intro_markdown_lite.html": {
    "href": "tutorial/intro_markdown_lite.html",
    "title": "Markdown Lite | DocFX website",
    "keywords": "Markdown Lite Introduction Markdown lite is a simple markdown tool to markup md file. Design goal We write this tool for good extensibility, so our implementation should obey following principles: Extensibility: Support markdown syntax extension. Support validation extension. Correctness: We follow GFM syntax, but when some rules is too hard to implement, just breaking. Performance: Performance is not our major concern. Steps There are three steps when calling markup method : Parse Rewrite or validate Render Step 1: Parse In this step, it will parse markdown text to tokens . The parser is based on rules , which make up the context . For example, heading token is created by heading rule , the heading rule is belonging to block context . Step 2: Rewrite or validate In this step, it will walk through all tokens , we can change it to another, or just validate. For example, we can create a rewriter to change all heading token with depth + 1: MarkdownTokenRewriterFactory.FromLambda<IMarkdownRewriteEngine, MarkdownHeadingBlockToken>( (engine, token) => new MarkdownHeadingBlockToken(token.Rule, token.Context, token.Content, token.Id, token.Depth + 1, token.SourceInfo); Step 3: Render In this step, it renders models to text content (html format by default). To simplify extension, we created an adapter , the adapter invoke methods by following rules: Method name is Render Instance method Return type is StringBuffer The count of parameters is 3, and types are following: IMarkdownRenderer or any type implements it. IMarkdownToken or any type implements it. IMarkdownContext or any type implements it. Always invoke the best overloaded method (The best is defined by binder ). Engine and engine builder Engine is a set of parser, rewriter and renderer. It can markup a markdown file to html file (or others). But it cannot be invoked in parallel. So we create an engine builder . It defines all the rules of parser, rewriter and renderer. It can create instances when needed. How to customize markdown syntax Define markdown syntax Define markdown: : My label should be rendered as following html: <div id=\"My label\"></div> Select token kind First of all, we should select the context for this rule. And in this goal, the new line is required. So it should be a block token , all of the names for class should contain Block . Define token Create a token class like following: public class MarkdownMyLabelBlockToken : IMarkdownToken { public MarkdownMyLabelBlockToken(IMarkdownRule rule, IMarkdownContext context, string label, SourceInfo sourceInfo) { Rule = rule; Context = context; Label = label; SourceInfo = sourceInfo; } public IMarkdownRule Rule { get; } public IMarkdownContext Context { get; } public string Label { get; } public SourceInfo SourceInfo { get; } } Define rule Create a rule class as following: public class MarkdownMyLabelBlockRule : IMarkdownRule { public virtual string Name => \"My Label\"; public virtual Regex LabelRegex { get; } = new Regex(\"^\\: *([^\\n]+?) *(?:\\n+|$)\"); public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) { var match = LabelRegex.Match(context.CurrentMarkdown); if (match.Length == 0) { return null; } var sourceInfo = context.Consume(match.Length); return new MarkdownMyLabelBlockToken(this, parser.Context, match.Group[1].Value, sourceInfo); } } Define renderer Create a renderer class as following: public class MyRenderer : HtmlRenderer { public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownMyLabelBlockToken token, IMarkdownContext context) { return StringBuffer.Empty + \"<div id=\\\"\" + token.Label + \"\\\"></div>\"; } } Define engine builder Create an engine builder class as following: public class MyEngineBuilder : GfmEngineBuilder { public MyEngineBuilder(Options options) : base(options) { BlockRules = BlockRules.Insert(0, new MarkdownMyLabelBlockRule()); } } Markup it! Then use your custom markdown in your code: public string MarkupMyMarkdown(string markdown) { var builder = new MyEngineBuilder(new Options()); var engine = builder.CreateEngine(new MyRender()) return engine.Markup(markdown); }"
  },
  "tutorial/intro_overwrite_files.html": {
    "href": "tutorial/intro_overwrite_files.html",
    "title": "Overwrite Files | DocFX website",
    "keywords": "Overwrite Files Introduction DocFX supports processing Markdown files, as well as structured data model in YAML or JSON format. We call Markdown files Conceptual File s, and the structured data model files Metadata File s. Current supported Metadata File s include: YAML files presenting managed reference model following Metadata Format for .NET Languages . Swagger JSON files presenting Swagger REST API model following Swagger Specification Version 2.0 . Inside DocFX, both Conceptual File s and Metadata File s are represented as Model s with different properties. Details on Model structure for these files are described in Data model inside DocFX section. DocFX introduces the concept of Overwrite File to modify or add properties to Model s without changing the input Conceptual File s and Metadata File s. The format of Overwrite File s Overwrite File s are Markdown files with multiple Overwrite Section s starting with YAML header block. A valid YAML header for an Overwrite Section MUST take the form of valid YAML set between triple-dashed lines and start with property uid . Here is a basic example of an Overwrite Section : --- uid: microsoft.com/docfx/Contacts some_property: value --- Further description for `microsoft.com/docfx/Contacts` Each Overwrite Section is transformed to Overwrite Model inside DocFX. For the above example, the Overwrite Model represented in YAML format is: uid: microsoft.com/docfx/Contacts some_property: value conceptual: <p><b>Content</b> in Markdown</p> Anchor *content *content is the keyword invented and used specifically in Overwrite File s to represent the Markdown content following YAML header. We leverage Anchors syntax in YAML specification for *content . The value for *content is always transformed from Markdown content to HTML. When *content is not used, the Markdown content below YAML header will be set to conceptual property; When *content is used, the Markdown content below YAML header will no longer be set to conceptual property. With *content , we can easily add Markdown content to any properties. --- uid: microsoft.com/docfx/Contacts footer: *content --- Footer for `microsoft.com/docfx/Contacts` In the above example, the value for *content is <p>Footer for <code>microsoft.com/docfx/Contacts</code></p> , and the Overwrite Model represented in YAML format is: uid: microsoft.com/docfx/Contacts footer: <p>Footer for <code>microsoft.com/docfx/Contacts</code></p> uid for an Overwrite Model stands for the Unique IDentifier of the Model it will overwrite. So it is allowed to have multiple Overwrite Section s with YAML Header containing the same uid . For one Overwrite File , the latter Overwrite Section overwrites the former one with the same uid . For different Overwrite File s, the order of overwrite is Undetermined . So it is suggested to have Overwrite Sections with the same uid in the same Overwrite File . When processing Conceptual File s and Metadata File s, Overwrite Model s with the same uid are applied to the processed Model s. Different Model s have different overwrite principles, Overwrite principles section describes the them in detail. Apply Overwrite File s Inside docfx.json , overwrite is used to specify the Overwrite File s. Overwrite principles As a general principle, uid is always the key that an Overwrite Model find the Model it is going to overwrite. So a Model with no uid defined will never get overwritten. Different types of files produce different Model s. The quickest way to get an idea of what the Model looks like is to run: docfx build --exportRawModel --exportRawModel exports Model in JSON format with .raw.json extension. The basic principle of Overwrite Model is: It keeps the same data structure as the Model it is going to overwrite If the property is defined in Model , please refer Data model inside DocFX for the specific overwrite behavior for a specific property. If the property is not defined in Model , it is added to Model Data model inside DocFX Managed reference model Key Type Overwrite behavior uid uid Merge key. assemblies string[] Ignore. attributes Attribute [] Ignore. children uid[] Ignore. documentation Source Merge. example string[] Replace. exceptions Cref [] Merge keyed list. fullName string Replace. fullName. string Replace. id string Replace. implements uid[] Ignore. inheritance uid[] Ignore. inheritedMembers uid[] Ignore. isEii boolean Replace. isExtensionMethod boolean Replace. langs string[] Replace. modifiers. string[] Ignore. name string Replace. name. string Replace. namespace uid Replace. overridden uid Replace. parent uid Replace. platform string[] Replace. remarks markdown Replace. see Cref [] Merge keyed list. seealso Cref [] Merge keyed list. source Source Merge. syntax Syntax Merge. summary markdown Replace. type string Replace. Source Property Type Overwrite behavior base string Replace. content string Replace. endLine integer Replace. id string Replace. isExternal boolean Replace. href string Replace. path string Replace. remote GitSource Merge. startLine integer Replace. GitSource Property Type Overwrite behavior path string Replace. branch string Replace. repo url Replace. commit Commit Merge. key string Replace. Commit Property Type Overwrite behavior committer User Replace. author User Replace. id string Replace. message string Replace. User Property Type Overwrite behavior name string Replace. email string Replace. date datetime Replace. Cref Property Type Overwrite behavior type uid Merge key. description markdown Replace. commentId string Replace. Syntax Property Type Overwrite behavior content string Replace. content. string Replace. parameters Parameter [] Merge keyed list. typeParameters Parameter [] Merge keyed list. return Parameter Merge. Parameter Property Type Overwrite behavior id string Merge key. description markdown Replace. attributes Attribute [] Ignore. type uid Replace. Attribute Property Type Overwrite behavior arguments Argument [] Ignore. ctor uid Ignore. namedArguments NamedArgument [] Ignore. type uid Ignore. Argument Property Type Overwrite behavior type uid Ignore. value object Ignore. NamedArgument Property Type Overwrite behavior name string Ignore. type string Ignore. value object Ignore. REST API model Key Type Overwrite behavior children REST API item model Overwrite when uid of the item model matches summary string Overwrite description string Overwrite REST API item model Key Type Overwrite behavior uid string Key Conceptual model Key Type Overwrite behavior title string Overwrite rawTitle string Overwrite conceptual string Overwrite"
  },
  "tutorial/intro_rest_api_documentation.html": {
    "href": "tutorial/intro_rest_api_documentation.html",
    "title": "Introduction to REST API Documentation | DocFX website",
    "keywords": "Introduction to REST API Documentation Introduction DocFX now supports generating documentation from REST APIs following Swagger specification version 2.0. The Swagger RESTful API files MUST end with .json . One Swagger API file generates one HTML file. For example. a file contacts.swagger.json generates file naming contacts.html . Basic structure A single Swagger API file is considered as a unique REST File containing multiple API s. The UID (Unique IDentifier) for the File is defined as the combination of host , basePath , info.title and info.version with / as separator. For example, the following Swagger API file has UID equals to microsoft.com/docfx/Contacts/1.6 : { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ] } A REST API File contains multiple API s as its children. An API is an Operation Object defined in Path Item Object . The UID (Unique IDentifier) for this API is defined as the combination of the UID of the File and the operationId of the Operation Object . For example, the following get_contacts operation has UID equal to microsoft.com/docfx/Contacts/1.6/get_contacts : { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ], \"paths\": { \"/contacts\": { \"get\": { \"parameters\": [ ], \"responses\": { }, \"operationId\": \"get_contacts\" } } } } It is recommended that user provides a well-formed operationId name. We suggest that the operationId is one word in camelCase or snake_case. A REST API File could also contain multiple tags. The tag is a Tag Object , which is optional and used by Operation Object . The UID (Unique IDentifier) for this tag is defined as the combination of UID of the File , tag , and name of the Tag Object . For example, the following tag Basic has UID microsoft.com/docfx/Contacts/1.6/tag/Basic : { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ], \"tags\": [ { \"name\": \"Basic\", \"description\": \"Basic description\" }, { \"name\": \"Advanced\", \"description\": \"Advanced description\" } ] } HTML layout The generated HTML file lists all the API s inside the File in the order defined in the Swagger REST file. You can use Overwrite File s to add more information to the File and API , and use tags to organize the sections of the API s. Overwrite File s Overwrite File s are Markdown files with multiple Overwrite Section s starting with YAML header block. A valid YAML header for an Overwrite Section MUST take the form of valid YAML set between triple-dashed lines and start with property uid . Here is a basic example of an Overwrite Section : --- uid: microsoft.com/docfx/Contacts/1.6 --- Further description for `microsoft.com/docfx/Contacts/1.6` The uid value MUST match the uid of the File or API that you want to overwrite. The content following YAML header is the additional Markdown description for the File or API . By default, it is transformed to HTML and appended below the description of the File or API . Add footer You can also define the footer of an File or API using the following syntax: --- uid: microsoft.com/docfx/Contacts/1.6 footer: *content --- Footer for `microsoft.com/docfx/Contacts/1.6` *content is the keyword representing the Markdown content following YAML header. The value for *content is always transformed from Markdown content to HTML. In the above example, the value for *content is <p>Footer for <code>microsoft.com/docfx/Contacts/1.6</code></p> . In this way, the value of footer for API microsoft.com/docfx/Contacts/1.6 is set to <p>Footer for <code>microsoft.com/docfx/Contacts/1.6</code></p> . We leverage Anchors syntax in YAML specification for *content . If footer is set, the content from footer will be appended to the last section of the File or API . It is usually used to define See Also or Additional Resources for the documentation. Tags to organize the sections of APIs You can organize the sections of APIs by using tags in Swagger file, following definitions in Tag Object . Each API can be specified with one or multiple tags, or not speficied with any tag. If all APIs are not tagged, each API will not be included in any sections. If the API is specified with one tag only, it will show inside this one tag section. If the API is specified with multiple tags, it will show inside multiple tag sections. If some APIs are specified with tags while some other APIs are not, the untagged APIs will be organized into one auto generated Other apis section. Specific bookmark could be added to tag section using x-bookmark-id , which is Swagger schema extensions following Specification Extensions . If no x-bookmark-id is specified, name of the tag will be the default bookmark. For example, the following swagger file defines Basic and Advanced tags. Sections in the layout: set_contacts API is tagged with Advanced only, then it will only show inside Advanced tag section. get_contacts API is tagged with both Basic and Advanced , then it will show inside both of the tag sections. delete_contacts API is not tagged, it will show inside \"Other apis\" section. Bookmarks: Bookmark of Basic tag is BasicBookmark , which is defined by x-bookmark-id . Bookmark of Advanced tag is Advanced , which use name by default. { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ], \"tags\": [ { \"name\": \"Basic\", \"x-bookmark-id\": \"BasicBookmark\", \"description\": \"Basic description\" }, { \"name\": \"Advanced\", \"description\": \"Advanced description\" } ], \"paths\": { \"/contacts\": { \"get\": { \"operationId\": \"get_contacts\", \"tags\": [ \"Basic\", \"Advanced\" ] }, \"set\": { \"operationId\": \"set_contacts\", \"tags\": [ \"Advanced\" ] }, \"delete\": { \"operationId\": \"delete_contacts\" } } } } For the example above, the simple html layout will be: <h2 id=\"BasicBookmark\">Basic</h2> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/get_contacts\">get_contacts</h3> <h2 id=\"Advanced\">Advanced</h2> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/get_contacts\">get_contacts</h3> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/set_contacts\">set_contacts</h3> <h2 id=\"other-apis\">Other APIs</h2> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/delete_contacts\">delete_contacts</h3> Overwrite the tags More information could be added to the tag as following: --- uid: microsoft.com/docfx/Contacts/1.6/tag/Basic --- Additional comments for `microsoft.com/docfx/Contacts/1.6/tag/Basic` The description of the tag could be overwritten as following: --- uid: microsoft.com/docfx/Contacts/1.6/tag/Basic description: *content --- Overwrite description for `microsoft.com/docfx/Contacts/1.6/tag/Basic` Add other metadata You can define your own metadata with YAML header. This functionality is quite useful when your own template is used. When the key of the metadata is already preserved by DocFX, for example, summary , the value of summary will be overwritten. You can also overwrite complex types, for example, description of a parameter . Make sure the data structure of the provided metadata is consistent with the one defined in DocFX, otherwise, DocFX is unable to cast the value and fails. When the key of the metadata is not preserved by DocFX, for example, not_predefined . The metadata is kept and can be used in the template."
  },
  "tutorial/intro_template.html": {
    "href": "tutorial/intro_template.html",
    "title": "Introduction to DocFX Template System | DocFX website",
    "keywords": "Introduction to DocFX Template System DocFX Template System provides a flexible way of defining and using templates. As the following DocFX workflow shows, DocFX loads the set of files and transforms them into different data models using different types of Document Processor s. Afterwards, DocFX Template System loads these data models, and transforms them into output files based on the document type of the data model. Each file belongs to a document type . For example, the document type for Markdown files is conceptual , and the document type for toc.md files is Toc . For a specific Template , each document type can have several Renderer s. For a specific file, DocFX Template System picks the corresponding Renderer s to render the input data model into output files. Renderer Renderer s are files written in a specific templating language. It is used to transform the input data model into output files. Currently DocFX supports the following templating languages: Mustache templating language Liquid templating language Naming rule for a Renderer file The naming rule for a Renderer file is: <document_type>.<output_extension>[.primary].<template_extension> . <document_type> is the document type current Renderer responsible to. <output_extension> defines the extension of the output files going through current Renderer . For example, conceputal.html.tmpl transforms file1.md into output file file1.html , and toc.json.tmpl transforms toc.md into output file toc.json . [.primary] is optional. It is used when there are multiple Renderer s with different extension for one particular document type. The output file transformed by the .primary Renderer is used as the file to be linked. The below example describes the behavior in detail. <template_extension> is the extension of the Renderer file based on the templating language it uses. For Mustache Renderer , it is .tmpl , while for Liquid Renderer , it is .liquid . Here is an example. The following template contains two Mustache Renderer files for conceptual document type: /- some_template/ |- conceptual.html.primary.tmpl \\- concetpual.mta.json.tmpl There are two Markdown files A.md and B.md , the content for A.md is: [Link To B](B.md) DocFX Template System produces two output files for A.md : A.html and A.mta.json , and also two output files for B.md : B.html and B.mta.json . According to conceptual.html.primary.tmpl , .html is the primary output file, the link from A.md to B.md is resolved to B.html instead of B.mta.json , which is to say, the content of A.md is transformed to: <a href=\"B.html\">Link To B</a> If no primary Renderer is defined, DocFX randomly picks one Renderer as the primary one, and the result is unpredictable. Renderer in Mustache syntax Introduction to Mustache Mustache is a logic-less template syntax containing only tag s. It works by expanding tags in a template using values provided in a hash or object. Tag s are indicated by the double mustaches. {{name}} is a tag, it tries to find the name key in current context, and replace it with the value of name . mustache.5 lists the syntax of Mustache in detail. Naming rule Renderer s in Mustache syntax MUST end with .tmpl extension. Mustache Partials Mustache Partials is also supported in DocFX Template System . Partials are common sections of Renderer that can be shared by multiple Renderer files. Partials MUST end with .tmpl.partial . For example, inside a Template , there is a Partial file part.tmpl.partial with content: Inside Partial {{ name }} To reuse this Partial file, Renderer file uses the following syntax: Inside Renderer {{ >part }} It has the same effect with the following Renderer file: Inside Renderer Inside Partial {{ name }} Extended syntax for Dependencies When rendering the input data model into output files, for example, html files, the html file may rely on other files to display correctly. For example, the html file dependents on stylesheet file main.css . We call such file main.css a Dependency to the Renderer . DocFX introduces the following syntax to define the dependency for the Renderer : {{!include('<file_name>')}} docfx copies these dependencies to output folder preserving its relative path to the Renderer file. Tips: Mustache is logic-less, and for a specific {{name}} tag, Mustache searches its context and its parent context recursively. So most of the time Preprocessor File is used to re-define the data model used by the Mustache Renderer . Renderer in Liquid syntax Naming rule Renderer s in Liquid syntax MUST end with .liquid extension. Liquid contains include tag to support partials, we follow the ruby partials naming convention to have _<partialName>.liquid as partial template. Extended syntax for Dependencies DocFX introduces a custom tag ref , e.g. {% ref file1 %} , to specify the resource files that current template depends on. Preprocessor Renderer s take the input data model produced by document processor and render them into output files. Sometimes the input data model is not exactly what Renderer s want. DocFX Template System introduces the concept of Preprocessor to transform the input data model into what Renderer s exactly want. We call the data model Preprocessor returns the View Model . View Model is the data model to apply Renderer . Naming rule for Preprocessor The naming of Preprocessor follows the naming of Renderer with file extension changes to .js : <renderer_file_name_without_extension>.js . If a Preprocessor has no corresponding Renderer however it still needs to be executed, for example, to run exports.getOptions function , it should be named as <document_type>.tmpl.js . Syntax for Preprocessor Preprocessor s are JavaScript files following ECMAScript 5.1 standard. DocFX Template System uses Jint as JavaScript Engine, and provides several additional functions for easy debugging and integration. Module Preprocessor leverages the concept of Module as similar to the Module in Node.js . The syntax of Module in Preprocessor is a subset of the one in Node.js. The advantage of the Module concept is that the Preprocessor script file can also be run in Node.js. The Module syntax in Preprocessor is simple, To export function property from one Module file common.js : exports.util = function () {} To use the exported function property inside common.js : var common = require('./common.js'); // call util common.util(); Only relative path starting with ./ is supported. Log You can call the following functions to log messages with different error level: console.log , console.warn or console.warning and console.err . Function Signature A Preprocessor file is also considered as a Module. It MUST export the function property with the signature required by docfx 's prescriptive interop pattern. There are two functions defined. Function 1: exports.getOptions Function property getOptions takes the data model produced by document processor as the input argument, and the return value must be an object with the following properties: Property Name Type Description isShared bool Defines whether the input data model can be accessed by other data models when transform . By default the value is false . If it is set to true , the data model will be stored into Globally Shared Properties . A sample exports.getOptions defined in toc.tmpl.js is: exports.getOptions = function (model) { return { isShared: true; }; } <!-- TODO: add bookmarks part when it is implemented --> Function 2: exports.transform Function property transform takes the data model produced by document processor (described in further detail in The Input Data Model ) as the input argument, and returns the View Model . View Model is the exact model to apply the corresponding Renderer . A sample exports.transform for conceptual.txt.js is: exports.transform = function (model) { model._title = \"Hello World\" return model; } If conceptual.txt.tmpl is: {{{_title}}} Then Markdown file A.md is transformed to A.txt with content: Hello World Tip: For each file, the input data model can be exported to a JSON file by calling docfx build --exportRawModel . And the returned View Model can be exported to a JSON file by calling docfx build --exportViewModel . The Input Data Model The input data model used by transform not only contains properties extracted from the content of the file, but also system generated properties and globally shared properties. System Generated Properties System generated property names start with underscore _ , as listed in the following table: Name Description _rel The relative path of the root output folder from current output file. For example, if the output file is a/b/c.html from root output folder, then the value is ../../ . _path The path of current output file starting from root output folder. _navPath The relative path of the root TOC file from root output folder, if exists. The root TOC file stands for the TOC file in root output folder. For example, if the output file is html file, the value is toc.html . _navRel The relative path from current output file to the root TOC file, if exists. For example, if the root TOC file is toc.html from root output folder, the value is empty. _navKey The original file path of the root TOC file starting with ~/ . ~/ stands for the folder where docfx.json is in, for example, ~/toc.md . _tocPath The relative path of the TOC file that current output file belongs to from root output folder, if current output file is in that TOC file. If current output file is not defined in any TOC file, the nearest TOC file is picked. _tocRel The relative path from current output file to its TOC file. For example, if the TOC file is a/toc.html from root output folder, the value is ../ . _tocKey The original file path of the TOC file starting with ~/ . ~/ stands for the folder where docfx.json is in, for example, ~/a/toc.yml . Users can also override system generated properties by using YAML Header , fileMetadata or globalMetadata . Globally Shared Properties Globally shared properties are stored in __global key for every data model. Its initial value is read from global.json inside the Template if the file exists. If a data model has isShared equal to true with the above getOptions function property, it is stored in __global._shared with the original path starting with ~/ as the key."
  },
  "tutorial/intro_toc.html": {
    "href": "tutorial/intro_toc.html",
    "title": "Table-Of-Content (TOC) Files | DocFX website",
    "keywords": "Table-Of-Content (TOC) Files Introduction DocFX supports processing Markdown files, which we call Conceptual File s, as well as structured data model in YAML or JSON format, which we call Metadata File s. Besides that, DocFX introduces a way to organize these files using Table-Of-Content File s, which we also call TOC File s, so that users can navigate through Metadata File s and Conceptual File s. TOC File s must have file name toc.md or toc.yml , notice that file name is case-insensitive. Basic format Markdown format TOC toc.md toc.md leverages Markdown Atx-style headers which use 1-6 hash characters at the start of the line to represent the TOC levels 1-6. We call each line starting with hash characters a TOC Item . A TOC Item with higher level is considered as the child of the nearest upper TOC Item with less level. A sample toc.md is as below: # [Header1](href) ## [Header1.1](href) # Header2 ## [Header2.1](href) ### [Header2.1.1](href) ## [Header2.2](href) # @UidForAnArticle For a TOC Item , it can be either plain text, or a Markdown inline link , or @uid as the shortcut for cross-referenced Three kinds of links are supported: Absolute path, for example, http://example.net . Relative path, for example, ../example.md . This kind of link has several advanced usages and is described in detail below . URI with xref scheme, for example, xref:System.String , the value is the uid of the file to be cross-referenced . YAML format TOC toc.yml - name: Topic1 href: Topic1.md - name: Topic2 href: Topic2.md items: - name: Topic2_1 href: Topic2_1.md Comparing to toc.md , toc.yml represents a structured data model and conforms to the YAML standard . It supports advanced functionalities. Data model for toc.yml The data model for toc.yml is an array of TOC Item Object s. TOC Item Object TOC Item Object represents the data model for each TOC Item . Note that all the property names are case sensitive . Property Name Type Description name string Specifies the title of the TOC Item . href string Specifies the hyperlink of the TOC Item . items TOC Item Object Specifies the children TOC Items of current TOC Item . Advanced : These properties are useful when a TOC links another TOC, or links to a uid. Property Name Type Description tocHref string Specifies another TOC file, whose items are considered as the child of the currrent TOC Item . topicHref string Specifies the topic href of the TOC Item . It is useful when href is linking to a folder or tocHref is used. topicUid string Specifies the uid of the topicHref file. If the value is set, it overwrites the value of topicHref . homepage Deprecated string Specifies the homepage of the TOC Item . It is useful when href is linking to a folder. Use topicHref instead. uid Deprecated string Specifies the uid of the referenced file. If the value is set, it overwrites the value of href . Use topicUid instead. homepageUid Deprecated string Specifies the uid of the homepage. If the value is set, it overwrites the value of homepage . Use topicUid instead. Href in detail If a TOC Item is linking to some relative path, there are three cases: Linking to another TOC File , for example, href: examples/toc.md . Linking to a folder, which means, the value of the link ends with / explicitly, for example, href: examples/ Linking to some local file. Each case is described in detail below. Link to another TOC File If the TOC Item is linking to some other TOC File , it is considered as a placeholder of the referenced TOC File , and DocFX will extract content from that TOC File and insert into current TOC Item recursively . This technique is always used when you want to combine several TOC File s into one single TOC File . If homepage or topicHref is set for this TOC Item , it will be considered as the href of the expanded TOC Item . For example, one toc.yml file is like below: - name: How-to tutorials tocHref: howto/toc.yml topicHref: howto/overview.md It references to the toc.yml file under folder howto , with the following content: - name: \"How-to1\" href: howto1.md - name: \"How-to2\" href: howto2.md DocFX processes these toc.yml files and expands the uppder toc.yml file into: - name: How-to tutorials href: howto/overview.md topicHref: howto/overview.md items: - name: \"How-to1\" href: howto/howto1.md topichref: howto/howto1.md - name: \"How-to2\" href: howto/howto2.md topichref: howto/howto2.md NOTE that the referenced toc.yml file under howto folder will not be transformed to the output folder even if it is included in docfx.json . Link to a folder If the Toc Item is linking to a folder, ending with / explicitly, the link value for the Toc Item is determined in the following steps: If homepage topicHref or homepageUid topicUid is set, the link value is resolved to the relative path to homepage topicHref If homepage topicHref or homepageUid topicUid is not set, DocFX searches for Toc File under the folder, and get the first relative link to local file as the link value for current Toc Item . For example, if the Toc Item is href: article/ , and the content of article/toc.yml is as follows: - name: Topic1 href: topic1.md The link value for the Toc Item is resolved to article/topic1.md . If there is no Toc File under the folder, the link value keeps unchanged. Link to local file If the Toc Item is linking to a local file, we call this local file In-Toc File . Make sure the file is included in docfx.json . Not-In-Toc Files When a local file is not referenced by any Toc Item , we call this local file Not-In-Toc File . Its TOC File is the nearest TOC File in output folder from the same folder as the local file to the root output folder."
  },
  "tutorial/links_and_cross_references.html": {
    "href": "tutorial/links_and_cross_references.html",
    "title": "Links and Cross References | DocFX website",
    "keywords": "Links and Cross References Markdown provides a syntax to create hyperlinks. For example, the following syntax: [bing](http://www.bing.com) Will render to: <a href=\"http://www.bing.com\">bing</a> Here the url in the link could be either absolute url pointing to another website ( www.bing.com in the above example), or a relative url pointing to a local resource on the same server (for example, about.html ). When working with large documentation project that contains multiple files, it is often needed to link to another Markdown file using the relative path in the source directory. Markdown spec doesn't have a clear definition of how this should be supported. What's more, there is also a common need to link to another file using a \"semantic\" name instead of its file path. This is especially common in API reference docs, for example, you may want to use System.String to link to the topic of String class, without knowing it's actually located in api/system/string.html , which is auto generated. In this document, you'll learn the functionalities DocFX provides for resolving file links and cross reference, which will help you to reference other files in an efficient way. Link to a file using relative path In DocFX, you can link to a file using its relative path in the source directory. For example, You have a file1.md under root and a file2.md under subfolder/ : / |- subfolder/ | \\- file2.md \\- file1.md You can use relative path to reference file2.md in file1.md : [file2](subfolder/file2.md) DocFX converts it to a relative path in output folder structure: <a href=\"subfolder/file2.html\">file2</a> You can see the source file name ( .md ) is replaced with output file name ( .html ). DocFX does not simply replace the file extension here ( .md to .html ), it also tracks the mapping between input and output files to make sure source file path will resolve to correct output path. For example, if in the above case, subfolder is renamed to subfolder2 using file mapping in docfx.json , in output html, the link url will also resolve to subfolder2/file2.html . Relative path vs. absolute path It's recommended to always use relative path to reference another file in the same project. Relative path will be resolved during build and produce build warning if the target file does not exist. Tip: File must be included in docfx.json to be processed by DocFX, so if you see a build warning about broken link but the file actually exists in your file system, go and check whether this file is included in docfx.json . You can also use absolute path (path starts with / ) to link to another file, but DocFX won't check its correctness for you and will keep it as-is in the output HTML. That means you should use the output file path as absolute path. For example, in the above case, you can also write the link as follows: [file2](/subfolder/file2.html) Sometimes you may find it's complicated to calculate relative path between two files. DocFX also supports path starts with ~ to represent path relative to the root directory of your project (i.e. where docfx.json is located). This kind of path will also be validated and resolved during build. For example, in the above case, you can write the following links in file2.md : [file1](~/file1.md) [file1](../file1.md) Both will resolve to ../file1.html in output html. Automatic link doesn't support relative path. If you write something like <file.md> , it will be treated as an HTML tag rather than a link. Links in file includes If you use file include to include another file, the links in included file is relative to the included file. For example, if file1.md includes file2.md : [!include[file2](subfolder/file2.md)] All links in file2.md are relative to the file2.md itself, even when it's included by file1.md . Please note that the file path in include syntax is handled differently than Markdown link. You can only use relative path to specify location of the included file. And DocFX doesn't require included file to be included in docfx.json . Each file in docfx.json will build into an output file. But included files usually don't need to build into individual topics. So it's not recommended to include them in docfx.json . Links in inline HTML Markdown supports inline HTML . DocFX also supports to use relative path in inline HTML. Path in HTML link ( <a> ), image ( <img> ), script ( <script> ) and css ( <link> ) will also be resolved if they're relative path. Using cross reference Besides using file path to link to another file, DocFX also allows you to give a file a unique identifier so that you can reference this file using that identifier instead of its file path. This is useful in the following cases: Path to file is long and difficult to memorize or changes frequently. API reference documentation is usually auto generated so it's difficult to find its file path. You want to reference to files in another project without need to know its file structure. The basic syntax for cross referencing a file is: <xref:id_of_another_file> This is similar to automatic link syntax in Markdown but with a xref scheme. This link will build into: <a href=\"path_of_another_file\">title_of_another_file</a> As you can see, one benefit of using cross reference is that you don't need to specify the link text and DocFX will automatically resolve it for you. Title is extracted from the first heading of the Markdown file. Or you can also specify title using title metadata. Define UID The unique identifier of a file is called UID (stands for unique identifier) in DocFX. For Markdown file, you can specify its UID by adding a UID metadata in YAML header . For example, the following Markdown defined a UID \"fileA\". --- uid: fileA --- # This is fileA ... UID is supposed to be unique inside a project. If you define duplicate UID for two files, the resolve result is undetermined. For API reference files, UID is auto generated by mangling API's signature. For example, System.String class's UID is System.String . You can open the generated YAML files to lookup the value of UID. Conceptual Markdown file doesn't have UID generated by default. So it cannot be cross referenced unless you give it a UID. Different syntax of cross reference Besides the auto link, we also support some other ways to use cross references: Markdown link In Markdown link, you can also use xref in link url: [link_text](xref:uid_of_another_file) This will resolve to: <a href=\"path_of_another_file\">link_text</a> In this case, we won't resolve the link text for you because you already specified it, unless the link_text is empty. Shorthand form You can also use @uid_to_another_file to quickly reference another file. There are some rules for DocFX to determine whether a string following @ are UID: The string after @ must start with [A-Za-z] , and end with: Whitespace or line end Punctuation ( [.,;:!?`~] ) followed by whitespace or line end Two or more punctuations ( [.,;:!?`~] ) A string enclosed by a pair of quotes ( ' or \" ) The render result of @ form is same as auto link form. For example, @System.String is same as <xref:System.String> . Using hashtag in cross reference Sometimes you need to link to the middle of a file (an anchor) rather than jump to the beginning of a file. DocFX also allows you to do that. In Markdown link or auto link, you can add a hashtag ( # ) followed by the anchor name after UID. For example: <xref:uid_to_file#anchor_name> [link_text](xref:uid_to_file#anchor_name] Both urls will resolve to url_to_file#anchor_name in output HTML. The link text still resolves to the title of the whole file. If it's not what you need, you can specify your own link text. Hashtag in xref is always treated as separator between file name and anchor name. That means if you have # in UID, it has to be encoded to %23 . Hashtag is not supported in @ form. Link to overwrite files Overwrite file itself doesn't build into individual output file. It's merged with the API reference item model to build into a single file. If you want to link to the content inside an overwrite file (for example, an anchor), you cannot use the path to the overwrite file. Instead, you should either cross reference its UID, or link to the YAML file that contains the API. For example, you have String class which is generated from system.string.yml , then you have a string.md that overwrites its conceptual part which contains a compare-strings section. You can use one of the following syntax to link to this section: [compare strings](xref:System.String#compare-strings) [compare strings](system.string.yml#compare-strings) Both will render to: <a href=\"system.string.html#compare-strings\">compare strings</a> Cross reference between projects Another common need is to reference topics from an external project. For example, when you're writing the documentation for your own .NET library, you'll want to add some links that point to types in .NET base class library. DocFX gives you this functionality by exporting all UIDs in a project into a map file and you can import it in another project to use them. Cross reference map file When building a DocFX project, there will be an xrefmap.yml generated under output folder. This file contains information for all topics that have UID defined and their corresponding urls. The format of xrefmap.yml looks like this: references: - uid: uid_of_topic name: title_of_topic href: url_of_topic.html fullName: full_title_of_topic - ... It's a YAML object that contains following properties: references : a list of topic information, each item contains following properties: uid : UID to a conceptual topic or API reference name : title of the topic href : url to the topic, which is an absolute url or relative path to current file ( xrefmap.yml ) fullName : doesn't apply to conceptual, means the fully qualified name of API. For example, for String class, its name is String and fully qualified name is System.String . This property is not used in link title resolve for now but reserved for future use. Topic is not necessarily to be a file, it can also be a section inside a file. For example, a method in a class. In this case its url could be an anchor in a file. Using cross reference map You can import a cross reference map file in your DocFX then all UIDs defined that file can be cross referenced. To use a cross reference map, add a xrefMaps config to build section of docfx.json : { \"build\": { \"xrefMaps\": [ \"<path_to_xrefmap>\" ], ... } } The value of xrefMaps could be a string or a list of strings that contain the path/url to cross reference maps. DocFX supports reading cross reference map from a local file or a web location. It's recommended to deploy xrefmap.yml to the website together with topic files so that others can directly use its url in docfx.json instead of downloading it to local. Then you can use any cross reference syntax in your Markdown file, DocFX will be able to resolve it to the right target url. Cross reference .NET BCL types When creating documentation for your own .NET library, it is needed to link to the types in .NET base class library. The .NET Framework reference documentation is not generated by DocFX, so we created a cross reference map for you so that you can use it in your project to reference .NET BCL types. This can be downloaded on nuget . You can also manually create xrefmap.yml for project that is not generated by DocFX to be able to cross reference topics in it."
  },
  "tutorial/validate_your_markdown_files.html": {
    "href": "tutorial/validate_your_markdown_files.html",
    "title": "Validate Your Markdown Files | DocFX website",
    "keywords": "Validate Your Markdown Files In Markdown, we can write any document with valid syntax. For example, Markdown supports to directly write HTML tag, we can write HTML tag <h1>title</h1> instead of Markdown syntax #title . But for some purpose, some behaviors are unwanted, for example, you may not want to allow <script> tag in Markdown that can insert any javascript. In this document, you'll learn how to define markdown validation rules, which will help you to validate markdown documents in an efficient way. Markdown validation is part of DFM, if you switch Markdown engine to other engine, validation might not work. There're three kinds of validation rules provided by DocFX: HTML tag rule, which is used to validate HTML tags in Markdown. There is a common need to restrict usage of HTML tags in Markdown to only allow \"safe\" HTML tags, so we created this built-in rule for you. Markdown token rule. This can be used to validate different kinds of Markdown syntax elements, like headings, links, images, etc. Metadata rule. This can be used to validate metadata of documents. Metadata can be defined in YAML header, docfx.json , or a single JSON file. Metadata rule gives you a central place to validate metadata against certain principle. HTML tag validation rules For most cases, you may want to prohibit using certain html tags in markdown, so we built a built-in html tag rule for you. To define a HTML tag rule, simply create a md.style with following content: { \"tagRules\": [ { \"tagNames\": [ \"H1\", \"H2\" ], \"relation\": \"In\", \"behavior\": \"Warning\", \"messageFormatter\": \"Please do not use <H1> and <H2>, use '#' and '##' instead.\", \"customValidatorContractName\": null, \"openingTagOnly\": false } ] } Then when anyone write <H1> or <H2> in Markdown file, it will give a warning. You can use the following proprties to configure the HTML tag rule: tagNames is the list of HTML tag names to validate, required , case-insensitive . relation is optional for tagNames : In means when html tag is in tagNames , this is default value. NotIn means when html tag is not in tagNames . behavior defines the behavior when the HTML tag is met, required . Its value can be following: None: Do nothing. Warning: Log a warning. Error: Log an error, it will break current build. messageFormatter is the log message when the HTML tag is hit, required . It can contain following variables: {0} the name of tag. {1} the whole tag. For example, the messageFormatter is {0} is the tag name of {1}. , and the tag is <H1 class=\"heading\"> match the rule, then it will output following message: H1 is the tag name of <H1 class=\"heading\">. customValidatorContractName is an extension tag rule contract name for complex validation rule, optional . see How to create a custom html tag validator . openingTagOnly is a boolean, option , default is false if true , it will only apply to opening tag, e.g. <H1> , otherwise, it will also apply to closing tag, e.g. </H1> . Test your rule To enable your rule, put md.style in the same folder of docfx.json , then run docfx , warning will be shown if it encounters <H1> or <H2> during build. Create a custom HTML tag rule By default HTML tag rule only validates whether an HTML tag exists in Markdown. Sometimes you may want to have additional validation against the content of the tag. For example, you may not want a tag to contain onclick attribute as it can inject javascript to the page. You can create a custom HTML tag rule to achieve this. Create a project in your code editor (e.g. Visual Studio). Add nuget package Microsoft.DocAsCode.Plugins and Microsoft.Composition . Create a class and implement ICustomMarkdownTagValidator . Add ExportAttribute with contract name. For example, we require HTML link ( <a> ) should not contain onclick attribute: [Export(\"should_not_contain_onclick\", typeof(ICustomMarkdownTagValidator))] public class MyMarkdownTagValidator : ICustomMarkdownTagValidator { public bool Validate(string tag) { // use Contains for demo purpose, a complete implementation should parse the HTML tag. return tag.Contains(\"onclick\"); } } And update your md.style with following content: { \"tagRules\": [ { \"tagNames\": [ \"a\" ], \"behavior\": \"Warning\", \"messageFormatter\": \"Please do not use 'onclick' in HTML link.\", \"customValidatorContractName\": \"should_not_contain_onclick\", \"openingTagOnly\": true } ] } How to enable custom HTML tag rules Same as default HTML tag rule, config the rule in md.style . Create a folder ( rules for example) in your DocFX project folder, put all your custom rule assemblies to a plugins folder under rules folder. Now your DocFX project should look like this: / |- docfx.json |- md.style \\- rules \\- plugins \\- <your_rule>.dll Update your docfx.json with following content: { ... \"dest\": \"_site\", \"template\": [ \"default\", \"rules\" ] } Run docfx you'll see your rule being executed. The folder rules is actually a template folder. In DocFX, template is a place for you to customize build, render, validation behavior. For more information about template, please refer to our template and plugin documentation. Markdown token validation rules Besides HTML tags, you may also want to validate Markdown syntax like heading or links. For example, in Markdown, you may want to limit code snippet to only support a set of languages. To create such rule, follow the following steps: Create a project in your code editor (e.g. Visual Studio). Add nuget package Microsoft.DocAsCode.MarkdownLite and Microsoft.Composition . Create a class and implements IMarkdownTokenValidatorProvider MarkdownTokenValidatorFactory contains some helper methods to create a validator. Add ExportAttribute with rule name. For example, the following rule require all code block to be csharp : [Export(\"code_snippet_should_be_csharp\", typeof(IMarkdownTokenValidatorProvider))] public class MyMarkdownTokenValidatorProvider : IMarkdownTokenValidatorProvider { public ImmutableArray<IMarkdownTokenValidator> GetValidators() { return ImmutableArray.Create( MarkdownTokenValidatorFactory.FromLambda<MarkdownCodeBlockToken>(t => { if (t.Lang != \"csharp\") { throw new DocumentException($\"Code lang {t.Lang} is not valid, in file: {t.SourceInfo.File}, at line: {t.SourceInfo.LineNumber}\"); } })); } } To enable this rule, update your md.style to the following: { \"rules\": [ \"code_snippet_should_be_csharp\" ] } Then follow the same steps in How to enable custom HTML tag rules , run docfx you'll see your rule executed. Logging in your rules As you can see in the above example, you can throw DocumentException to raise an error, this will stop the build immediately. You can also use LogWarning(String, String, String, String) and LogError(String, String, String, String) to report a warning and an error respectively. To use these methods, you need to install nuget package Microsoft.DocAsCode.Common first. The different between ReportError and throw DocumentException is throwing exception will stop the build immediately but ReportError won't stop build but will eventually fail the build after rules are run. Advanced usage of md.style Default rules If a rule has the contract name of default , it will be enabled by default. You don't need to enable it in md.style . Enable/disable rules in md.style You can add use disable to specify whether disable a rule: { \"rules\": [ { \"contractName\": \"<contract_name>\", \"disable\": true } ] } This gives you an opportunity to disable the rules enabled by default. Validate metadata in markdown files In markdown file, we can write some metadata in conceptual or overwrite document . And we allow to add some plug-ins to validate metadata written in markdown files. Scope of metadata validation Metadata is coming from multiple sources, the following metadata will be validated during build: YAML header in markdown. Global metadata and file metaata in docfx.json . Global metadata and file metadata defined in separate .json files. For more information about global metadata and global metadata, see docfx.json format . Create validation plug-ins Create a project in your code editor (e.g. Visual Studio). Add nuget package Microsoft.DocAsCode.Plugins and Microsoft.Composition . Create a class and implement IInputMetadataValidator For example, the following validator prohibits any metadata with name hello : [Export(typeof(IInputMetadataValidator))] public class MyInputMetadataValidator : IInputMetadataValidator { public void Validate(string sourceFile, ImmutableDictionary<string, object> metadata) { if (metadata.ContainsKey(\"hello\")) { throw new DocumentException($\"Metadata 'hello' is not allowed, file: {sourceFile}\"); } } } Enable metadata rule is same as other rules, just copy the assemblies to the plugins of your template folder and run docfx . Create configurable metadata validation plug-ins There are two steps to create a metadata validator: We need to modify export attribute for metadata validator plug-in: [Export(\"hello_is_not_valid\", typeof(IInputMetadataValidator))] Note If the rule doesn't have a contract name, it will be always enabled, i.e., there is no way to disable it unless delete the assembly file. Modify md.style with following content: { \"metadataRules\": [ { \"contractName\": \"hello_is_not_valid\", \"disable\": false } ] } Advanced: Share your rules Some users have a lot of document projects, and want to share validations for all of them, and don't want to write md.style file repeatedly. Create template For this propose, we can create a template with following structure: / (root folder for plug-in) \\- md.styles |- <category-1>.md.style \\- <category-2>.md.style \\- plugins \\- <your_rule>.dll In md.styles folder, there is a set of definition files, with file extension .md.style , each file is a category. In one category, there is a set of rule definition. For example, create a file with name test.md.style , then write following content: { \"tagRules\": { \"heading\": { \"tagNames\": [ \"H1\", \"H2\" ], \"behavior\": \"Warning\", \"messageFormatter\": \"Please do not use <H1> and <H2>, use '#' and '##' instead.\", \"openingTagOnly\": true } }, \"rules\": { \"code\": \"code_snippet_should_be_csharp\" }, \"metadataRules\": { \"hello\": { \"contractName\": \"hello_is_not_valid\", \"disable\": true } } } Then test is the category name (from file name) for three rules, and apply different id for each rule, they are heading , code and hello . When you build document with this template, all rules will be active when disable property is false . Config rules Some rules need to be enabled/disabled in some special document project. For example, hello rule is not required for most project, but for a special project, we want to enable it. We need to modify md.style file in this document project with following content: { \"settings\": [ { \"category\": \"test\", \"id\": \"hello\", \"disable\": false } ] } And for some project we need to disable all rules in test category: { \"settings\": [ { \"category\": \"test\", \"disable\": true } ] } Note disable property is applied by following order: tagRules , rules and metadataRules in md.style . auto enabled rules with contract name default . settings with category and id in md.style . settings with category in md.style . disable property in definition file."
  },
  "tutorial/walkthrough/advanced_walkthrough.html": {
    "href": "tutorial/walkthrough/advanced_walkthrough.html",
    "title": "🔧 Walkthrough Advanced: Customize Your Website | DocFX website",
    "keywords": "ðŸ”§ Walkthrough Advanced: Customize Your Website Note This topic hasnâ€™t been written yet! You can track the status of this issue through our public GitHub issue tracker. Learn how you can contribute on GitHub. Add more details to an API using a Markdown file. Add cross references. Apply your own styles to the website. Write your own plugins and your own template."
  },
  "tutorial/walkthrough/walkthrough_create_a_docfx_project.html": {
    "href": "tutorial/walkthrough/walkthrough_create_a_docfx_project.html",
    "title": "Walkthrough Part I: Generate a Simple Documentation Website | DocFX website",
    "keywords": "Walkthrough Part I: Generate a Simple Documentation Website By completing this walkthrough, you'll become familiar with the workflow of docfx and the general principle of organizing documents inside docfx . You will finish this walkthrough with a static website that can be published to any host service. Download the files used in this walkthrough here . Step1. Setup DocFX Download docfx from http://dotnet.github.io/docfx/ . Getting Started with docfx describes three ways to install docfx . This walkthrough uses the first one: Use docfx.exe directly. Download docfx.zip and unzip it to D:\\docfx\\ Add D:\\docfx\\ to PATH so that command docfx and be directly called from everywhere for convenience. (for example, for Windows, setx PATH \"%PATH%;D:\\docfx\\\" Step2. Init a DocFX project Create a new folder D:\\docfx_walkthrough Start Command Line under D:\\docfx_walkthrough Call docfx init -q . This command generates a docfx_project folder with the default docfx.json file under it. docfx.json is the configuration file docfx uses to generate documentation. -q option means generating the project quietly using default value, you can also try docfx init and follow the instructions to provide your own settings. Step3. Build our website Run command docfx docfx_project/docfx.json . Note that a new subfolder _site is generated under that folder. This is where the static website is generated. Step4. Preview our website The generated static website can be published to GitHub pages, Azure websites, or your own hosting services without any further changes. You can also run command docfx serve docfx_project/_site to preview the website locally. If port 8080 is not in use, docfx will host _site under http://localhost:8080 . If 8080 is in use, you can use docfx serve _site -p <port> to change the port to be used by docfx . Congrats! You can now see a simple website similar to: Step5. Add a set of articles to the website Place more .md files to articles , e.g. details1.md , details2.md , details3.md . If the file references any resources, put those resources into the images folder. In order to organize these articles, we add these files into toc.yml under articles subfolder. The content of toc.yml is as below: - name: Introduction href: intro.md - name: Details 1 href: details1.md - name: Details 2 href: details2.md - name: Details 3 href: details3.md So now our folder layout is: |- index.md |- toc.yml |- articles | |- intro.md | |- details1.md | |- details2.md | |- details3.md | |- toc.yml |- images |- details1_image.png Run Step3 and Step4 again, and the website is now: . Notice that more items are added to the sidebar for Articles nav page. The title inside the sidebar is exactly what we set in the toc.yml inside articles subfolder. Conclusion In this walkthrough, we build a website from a set of .md files. We call these .md files Conceptual Documentation . In walkthrough part 2, we will learn to add API Documentation to our website. The API Documentation is extracted directly from .NET source code. In a series of advanced walkthroughs, we will learn advanced concepts in docfx , such as cross reference between articles, external reference to other documentations, etc. We will also learn to customize our websites, from theme to layout to metadata extraction. Read more Walkthrough Part II: Adding API Documentation to the Website Walkthrough Advanced: Customize Your Website"
  },
  "tutorial/walkthrough/walkthrough_create_a_docfx_project_2.html": {
    "href": "tutorial/walkthrough/walkthrough_create_a_docfx_project_2.html",
    "title": "Walkthrough Part II: Adding API Documentation to the Website | DocFX website",
    "keywords": "Walkthrough Part II: Adding API Documentation to the Website After completing Walkthrough Part I: Generate a Simple Documentation Website , we build a website from a set of .md files. We call it Conceptual Documentation . In this walkthrough, we will learn to build website from .NET source code, which is called API Documentation . We will also integrate Conceptual Documentation and API Documentation into one website, so that we can navigate from Conceptual to API , or API to Conceptual seamlessly. Download the files used in this walkthrough here . After completing walkthrough part I, our D:\\docfx_walkthrough\\docfx_project folder is in the following structure: |- index.md |- toc.yml |- articles | |- intro.md | |- details1.md | |- details2.md | |- details3.md | |- toc.yml |- images |- details1_image.png |- api |- index.md |- toc.yml Step1. Add a C# project Create a subfolder src under D:\\docfx_walkthrough\\docfx_project . Open Visual Studio Community 2015 (or an above version) and create a C# Class Library HelloDocfx under folder src . In the Class1.cs , add some comments and methods to this class, similar to: namespace HelloDocfx { /// <summary> /// Hello this is **Class1** from *HelloDocfx* /// </summary> public class Class1 { private InnerClass _class; public int Value { get; } /// <summary> /// This is a ctor /// </summary> /// <param name=\"value\">The value of the class</param> public Class1(int value) { Value = value; } public double ConvertToDouble() { return Value; } /// <summary> /// A method referencing a inner class /// </summary> /// <param name=\"name\">The name</param> /// <param name=\"inner\">A inner class with type <seealso cref=\"InnerClass\"/></param> public void SetInnerClass(string name, InnerClass inner) { inner.Name = name; _class = inner; } public class InnerClass { public string Name { get; set; } } } } Step2. Generate metadata for the C# project Calling docfx metadata under D:\\docfx_walkthrough\\docfx_project . docfx metadata is a sub-command registered in docfx , and it reads configuration in the metadata section from docfx.json . [ \"src/**.csproj\" ] in metadata/src/files tells docfx to search all the csproj from src subfolder to generate metadata. \"metadata\": [ { \"src\": [ { \"files\": [ \"src/**.csproj\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\", \"_site/**\" ] } ], \"dest\": \"api\" } ] This generates several YAML files in the api folder. The YAML file contains the data model extracted from C# source code file. YAML is the metadata format used in docfx . General Metadata Spec defines the general schema, and .NET Metadata Spec defines the metadata schema for .NET languages that docfx can consume. |- HelloDocfx.Class1.InnerClass.yml |- HelloDocfx.Class1.yml |- HelloDocfx.yml |- toc.yml Step3. Build and preview our website Running the command docfx . docfx reads docfx.json and execute subcommands defined in the config file one by one. Our docfx.json defines metadata and build , so by running docfx , we are actually executing docfx metadata and docfx build , and thus generating the website. Run docfx serve _site , and the website is now: . Conclusion In this walkthrough, we build a website containing both Conceptual Documentation and API Documentation . In the upcoming series of advanced walkthroughs, we will learn advanced concepts in docfx , such as cross reference between articles, external reference to other documentations, etc. We will also learn to customize our websites, from theme to layout to metadata extraction. Read more Walkthrough Part I: Generate a Simple Documentation Website Walkthrough Advanced: Customize Your Website"
  },
  "tutorial/walkthrough/walkthrough_overview.html": {
    "href": "tutorial/walkthrough/walkthrough_overview.html",
    "title": "Walkthrough Overview | DocFX website",
    "keywords": "Walkthrough Overview By completing these walkthroughs, you'll create a static website, containing both Conceptual Documentation which comes from .md files and API Documentation which comes from .NET source code. You'll also be able to customize your website with your own styles and templates! List of Articles Walkthrough Part I: Generate a Simple Documentation Website Walkthrough Part II: Adding API Documentation to the Website Walkthrough Advanced: Customize Your Website"
  },
  "api/Microsoft.CodeAnalysis.Workspaces.Dnx.ProjectJsonWorkspace.html": {
    "href": "api/Microsoft.CodeAnalysis.Workspaces.Dnx.ProjectJsonWorkspace.html",
    "title": "Class ProjectJsonWorkspace | DocFX website",
    "keywords": "Class ProjectJsonWorkspace Inheritance Object Microsoft.CodeAnalysis.Workspace ProjectJsonWorkspace Inherited Members Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionInfo) Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionId) Microsoft.CodeAnalysis.Workspace.SetCurrentSolution(Microsoft.CodeAnalysis.Solution) Microsoft.CodeAnalysis.Workspace.ScheduleTask(System.Action, System.String) Microsoft.CodeAnalysis.Workspace.ScheduleTask<T>(System.Func<T>, System.String) Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.Document) Microsoft.CodeAnalysis.Workspace.OnDocumentClosing(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.ClearSolution() Microsoft.CodeAnalysis.Workspace.ClearSolutionData() Microsoft.CodeAnalysis.Workspace.ClearProjectData(Microsoft.CodeAnalysis.ProjectId) Microsoft.CodeAnalysis.Workspace.ClearDocumentData(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.Dispose() Microsoft.CodeAnalysis.Workspace.Dispose(System.Boolean) Microsoft.CodeAnalysis.Workspace.OnSolutionAdded(Microsoft.CodeAnalysis.SolutionInfo) Microsoft.CodeAnalysis.Workspace.OnSolutionReloaded(Microsoft.CodeAnalysis.SolutionInfo) Microsoft.CodeAnalysis.Workspace.OnSolutionRemoved() Microsoft.CodeAnalysis.Workspace.OnProjectAdded(Microsoft.CodeAnalysis.ProjectInfo) Microsoft.CodeAnalysis.Workspace.OnProjectReloaded(Microsoft.CodeAnalysis.ProjectInfo) Microsoft.CodeAnalysis.Workspace.OnProjectRemoved(Microsoft.CodeAnalysis.ProjectId) Microsoft.CodeAnalysis.Workspace.CheckProjectCanBeRemoved(Microsoft.CodeAnalysis.ProjectId) Microsoft.CodeAnalysis.Workspace.OnAssemblyNameChanged(Microsoft.CodeAnalysis.ProjectId, System.String) Microsoft.CodeAnalysis.Workspace.OnOutputFilePathChanged(Microsoft.CodeAnalysis.ProjectId, System.String) Microsoft.CodeAnalysis.Workspace.OnProjectNameChanged(Microsoft.CodeAnalysis.ProjectId, System.String, System.String) Microsoft.CodeAnalysis.Workspace.OnCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.CompilationOptions) Microsoft.CodeAnalysis.Workspace.OnParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ParseOptions) Microsoft.CodeAnalysis.Workspace.OnProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference) Microsoft.CodeAnalysis.Workspace.OnProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference) Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference) Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference) Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference) Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference) Microsoft.CodeAnalysis.Workspace.OnDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo) Microsoft.CodeAnalysis.Workspace.OnDocumentReloaded(Microsoft.CodeAnalysis.DocumentInfo) Microsoft.CodeAnalysis.Workspace.OnDocumentRemoved(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.CheckDocumentCanBeRemoved(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.OnDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.TextLoader) Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.TextLoader) Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceText, Microsoft.CodeAnalysis.PreservationMode) Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceText, Microsoft.CodeAnalysis.PreservationMode) Microsoft.CodeAnalysis.Workspace.OnDocumentSourceCodeKindChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.SourceCodeKind) Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo) Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.UpdateReferencesAfterAdd() Microsoft.CodeAnalysis.Workspace.CanApplyChange(Microsoft.CodeAnalysis.ApplyChangesKind) Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution) Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(Microsoft.CodeAnalysis.ProjectChanges) Microsoft.CodeAnalysis.Workspace.ApplyProjectAdded(Microsoft.CodeAnalysis.ProjectInfo) Microsoft.CodeAnalysis.Workspace.ApplyProjectRemoved(Microsoft.CodeAnalysis.ProjectId) Microsoft.CodeAnalysis.Workspace.ApplyCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.CompilationOptions) Microsoft.CodeAnalysis.Workspace.ApplyParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ParseOptions) Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference) Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference) Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference) Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference) Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference) Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference) Microsoft.CodeAnalysis.Workspace.ApplyDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo, Microsoft.CodeAnalysis.Text.SourceText) Microsoft.CodeAnalysis.Workspace.ApplyDocumentRemoved(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.ApplyDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceText) Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo, Microsoft.CodeAnalysis.Text.SourceText) Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceText) Microsoft.CodeAnalysis.Workspace.CheckSolutionIsEmpty() Microsoft.CodeAnalysis.Workspace.CheckProjectIsInCurrentSolution(Microsoft.CodeAnalysis.ProjectId) Microsoft.CodeAnalysis.Workspace.CheckProjectIsNotInCurrentSolution(Microsoft.CodeAnalysis.ProjectId) Microsoft.CodeAnalysis.Workspace.CheckProjectHasProjectReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference) Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveProjectReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference) Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveTransitiveProjectReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectId) Microsoft.CodeAnalysis.Workspace.CheckProjectHasMetadataReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference) Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveMetadataReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference) Microsoft.CodeAnalysis.Workspace.CheckProjectHasAnalyzerReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference) Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveAnalyzerReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference) Microsoft.CodeAnalysis.Workspace.CheckDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.CheckDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.GetProjectName(Microsoft.CodeAnalysis.ProjectId) Microsoft.CodeAnalysis.Workspace.GetDocumentName(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.GetAdditionalDocumentName(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.ClearOpenDocument(Microsoft.CodeAnalysis.DocumentId, System.Boolean) Microsoft.CodeAnalysis.Workspace.OpenDocument(Microsoft.CodeAnalysis.DocumentId, System.Boolean) Microsoft.CodeAnalysis.Workspace.CloseDocument(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.OpenAdditionalDocument(Microsoft.CodeAnalysis.DocumentId, System.Boolean) Microsoft.CodeAnalysis.Workspace.CloseAdditionalDocument(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.CheckCanOpenDocuments() Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotContainOpenDocuments(Microsoft.CodeAnalysis.ProjectId) Microsoft.CodeAnalysis.Workspace.IsDocumentOpen(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.GetOpenDocumentIds(Microsoft.CodeAnalysis.ProjectId) Microsoft.CodeAnalysis.Workspace.GetRelatedDocumentIds(Microsoft.CodeAnalysis.Text.SourceTextContainer) Microsoft.CodeAnalysis.Workspace.GetDocumentIdInCurrentContext(Microsoft.CodeAnalysis.Text.SourceTextContainer) Microsoft.CodeAnalysis.Workspace.OnDocumentContextUpdated(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.CheckDocumentIsClosed(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.CheckDocumentIsOpen(Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.OnDocumentOpened(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceTextContainer, System.Boolean) Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentOpened(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceTextContainer, System.Boolean) Microsoft.CodeAnalysis.Workspace.OnDocumentClosed(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.TextLoader, System.Boolean) Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentClosed(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.TextLoader) Microsoft.CodeAnalysis.Workspace.AdjustReloadedSolution(Microsoft.CodeAnalysis.Solution, Microsoft.CodeAnalysis.Solution) Microsoft.CodeAnalysis.Workspace.AdjustReloadedProject(Microsoft.CodeAnalysis.Project, Microsoft.CodeAnalysis.Project) Microsoft.CodeAnalysis.Workspace.RaiseWorkspaceChangedEventAsync(Microsoft.CodeAnalysis.WorkspaceChangeKind, Microsoft.CodeAnalysis.Solution, Microsoft.CodeAnalysis.Solution, Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.DocumentId) Microsoft.CodeAnalysis.Workspace.OnWorkspaceFailed(Microsoft.CodeAnalysis.WorkspaceDiagnostic) Microsoft.CodeAnalysis.Workspace.RaiseDocumentOpenedEventAsync(Microsoft.CodeAnalysis.Document) Microsoft.CodeAnalysis.Workspace.RaiseDocumentClosedEventAsync(Microsoft.CodeAnalysis.Document) Microsoft.CodeAnalysis.Workspace.RaiseDocumentActiveContextChangedEventAsync(Microsoft.CodeAnalysis.Document) Microsoft.CodeAnalysis.Workspace.TryGetWorkspace(Microsoft.CodeAnalysis.Text.SourceTextContainer, Microsoft.CodeAnalysis.Workspace) Microsoft.CodeAnalysis.Workspace.RegisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer) Microsoft.CodeAnalysis.Workspace.UnregisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer) Microsoft.CodeAnalysis.Workspace.GetWorkspaceRegistration(Microsoft.CodeAnalysis.Text.SourceTextContainer) Microsoft.CodeAnalysis.Workspace.Services Microsoft.CodeAnalysis.Workspace.PartialSemanticsEnabled Microsoft.CodeAnalysis.Workspace.Kind Microsoft.CodeAnalysis.Workspace.CurrentSolution Microsoft.CodeAnalysis.Workspace.Options Microsoft.CodeAnalysis.Workspace.CanOpenDocuments Microsoft.CodeAnalysis.Workspace.WorkspaceChanged Microsoft.CodeAnalysis.Workspace.WorkspaceFailed Microsoft.CodeAnalysis.Workspace.DocumentOpened Microsoft.CodeAnalysis.Workspace.DocumentClosed Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.CodeAnalysis.Workspaces.Dnx Assembly :Microsoft.CodeAnalysis.Workspaces.Dnx.dll Syntax public class ProjectJsonWorkspace : Workspace, IDisposable Constructors | Improve this Doc View Source ProjectJsonWorkspace(String) Declaration public ProjectJsonWorkspace(string projectPath) Parameters Type Name Description String projectPath | Improve this Doc View Source ProjectJsonWorkspace(String[]) Declaration public ProjectJsonWorkspace(string[] projectPaths) Parameters Type Name Description String [] projectPaths Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.CodeAnalysis.Workspaces.Dnx.html": {
    "href": "api/Microsoft.CodeAnalysis.Workspaces.Dnx.html",
    "title": "Namespace Microsoft.CodeAnalysis.Workspaces.Dnx | DocFX website",
    "keywords": "Namespace Microsoft.CodeAnalysis.Workspaces.Dnx Classes ProjectJsonWorkspace"
  },
  "api/Microsoft.DocAsCode.AssemblyLicenseAttribute.html": {
    "href": "api/Microsoft.DocAsCode.AssemblyLicenseAttribute.html",
    "title": "Class AssemblyLicenseAttribute | DocFX website",
    "keywords": "Class AssemblyLicenseAttribute Inheritance Object Attribute CustomAssemblyTextAttribute AssemblyLicenseAttribute Inherited Members CustomAssemblyTextAttribute.Value Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class AssemblyLicenseAttribute : CustomAssemblyTextAttribute, _Attribute Constructors | Improve this Doc View Source AssemblyLicenseAttribute(String[]) Declaration public AssemblyLicenseAttribute(params string[] lines) Parameters Type Name Description String [] lines Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AssemblyUsageAttribute.html": {
    "href": "api/Microsoft.DocAsCode.AssemblyUsageAttribute.html",
    "title": "Class AssemblyUsageAttribute | DocFX website",
    "keywords": "Class AssemblyUsageAttribute Inheritance Object Attribute CustomAssemblyTextAttribute AssemblyUsageAttribute Inherited Members CustomAssemblyTextAttribute.Value Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode Assembly :docfx.dll Syntax public class AssemblyUsageAttribute : CustomAssemblyTextAttribute, _Attribute Constructors | Improve this Doc View Source AssemblyUsageAttribute(String[]) Declaration public AssemblyUsageAttribute(params string[] lines) Parameters Type Name Description String [] lines Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockRule.html",
    "title": "Class AzureBlockquoteBlockRule | DocFX website",
    "keywords": "Class AzureBlockquoteBlockRule Inheritance Object MarkdownBlockquoteBlockRule AzureBlockquoteBlockRule Inherited Members MarkdownBlockquoteBlockRule.Blockquote Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureBlockquoteBlockRule : MarkdownBlockquoteBlockRule, IMarkdownRule Fields | Improve this Doc View Source _azureLeadingBlankRegex Declaration public static readonly Regex _azureLeadingBlankRegex Field Value Type Description Regex Properties | Improve this Doc View Source LeadingBlockquote Declaration public override Regex LeadingBlockquote { get; } Property Value Type Description Regex Overrides MarkdownBlockquoteBlockRule.LeadingBlockquote | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides MarkdownBlockquoteBlockRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides MarkdownBlockquoteBlockRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockToken.html",
    "title": "Class AzureBlockquoteBlockToken | DocFX website",
    "keywords": "Class AzureBlockquoteBlockToken Inheritance Object MarkdownBlockquoteBlockToken AzureBlockquoteBlockToken Inherited Members MarkdownBlockquoteBlockToken.Rule MarkdownBlockquoteBlockToken.Context MarkdownBlockquoteBlockToken.Tokens MarkdownBlockquoteBlockToken.SourceInfo MarkdownBlockquoteBlockToken.Rewrite(IMarkdownRewriteEngine) MarkdownBlockquoteBlockToken.GetChildren() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureBlockquoteBlockToken : MarkdownBlockquoteBlockToken, IMarkdownExpression, IMarkdownToken, IMarkdownRewritable<MarkdownBlockquoteBlockToken> Constructors | Improve this Doc View Source AzureBlockquoteBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public AzureBlockquoteBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> tokens, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens SourceInfo sourceInfo Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureEngineBuilder.html",
    "title": "Class AzureEngineBuilder | DocFX website",
    "keywords": "Class AzureEngineBuilder Inheritance Object MarkdownEngineBuilder GfmEngineBuilder AzureEngineBuilder Inherited Members MarkdownEngineBuilder.Options MarkdownEngineBuilder.BlockRules MarkdownEngineBuilder.InlineRules MarkdownEngineBuilder.Rewriter MarkdownEngineBuilder.TokenTreeValidator MarkdownEngineBuilder.CreateParseContext() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureEngineBuilder : GfmEngineBuilder Constructors | Improve this Doc View Source AzureEngineBuilder(Options) Declaration public AzureEngineBuilder(Options options) Parameters Type Name Description Options options Methods | Improve this Doc View Source BuildBlockRules() Declaration protected override void BuildBlockRules() Overrides GfmEngineBuilder.BuildBlockRules() | Improve this Doc View Source BuildInlineRules() Declaration protected override void BuildInlineRules() Overrides GfmEngineBuilder.BuildInlineRules() | Improve this Doc View Source BuildRules() Declaration protected override void BuildRules() Overrides GfmEngineBuilder.BuildRules() | Improve this Doc View Source CreateEngine(Object) Declaration public override IMarkdownEngine CreateEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description IMarkdownEngine Overrides MarkdownEngineBuilder.CreateEngine(Object) | Improve this Doc View Source CreateRewriters() Declaration protected void CreateRewriters() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureFileInfo.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureFileInfo.html",
    "title": "Class AzureFileInfo | DocFX website",
    "keywords": "Class AzureFileInfo Inheritance Object AzureFileInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureFileInfo Properties | Improve this Doc View Source FileName Indicate the azure file name. It's global unique in azure content Declaration public string FileName { get; set; } Property Value Type Description String | Improve this Doc View Source FilePath Indicate currently absolute path of azure file Declaration public string FilePath { get; set; } Property Value Type Description String | Improve this Doc View Source NeedTransformToAzureExternalLink Indicate whether the current relative path need to be changed to external link. If the current file is in docset, then false. Otherwise true. Declaration public bool NeedTransformToAzureExternalLink { get; set; } Property Value Type Description Boolean | Improve this Doc View Source UriPrefix Indicate the uri prefix except the asset id Declaration public string UriPrefix { get; set; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockRule.html",
    "title": "Class AzureHtmlMetadataBlockRule | DocFX website",
    "keywords": "Class AzureHtmlMetadataBlockRule Inheritance Object AzureHtmlMetadataBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureHtmlMetadataBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureHtmlMetadataRegex Declaration public virtual Regex AzureHtmlMetadataRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockToken.html",
    "title": "Class AzureHtmlMetadataBlockToken | DocFX website",
    "keywords": "Class AzureHtmlMetadataBlockToken Inheritance Object AzureHtmlMetadataBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureHtmlMetadataBlockToken : IMarkdownToken Constructors | Improve this Doc View Source AzureHtmlMetadataBlockToken(IMarkdownRule, IMarkdownContext, IReadOnlyDictionary<String, String>, IReadOnlyDictionary<String, String>, SourceInfo) Declaration public AzureHtmlMetadataBlockToken(IMarkdownRule rule, IMarkdownContext context, IReadOnlyDictionary<string, string> properties, IReadOnlyDictionary<string, string> tags, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context IReadOnlyDictionary < String , String > properties IReadOnlyDictionary < String , String > tags SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Properties Declaration public IReadOnlyDictionary<string, string> Properties { get; set; } Property Value Type Description IReadOnlyDictionary < String , String > | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source Tags Declaration public IReadOnlyDictionary<string, string> Tags { get; set; } Property Value Type Description IReadOnlyDictionary < String , String > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBasicToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBasicToken.html",
    "title": "Class AzureIncludeBasicToken | DocFX website",
    "keywords": "Class AzureIncludeBasicToken Inheritance Object AzureIncludeBasicToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public abstract class AzureIncludeBasicToken : IMarkdownToken Constructors | Improve this Doc View Source AzureIncludeBasicToken(IMarkdownRule, IMarkdownContext, String, String, String, ImmutableArray<IMarkdownToken>, String, SourceInfo) Declaration protected AzureIncludeBasicToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, ImmutableArray<IMarkdownToken> tokens, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens String raw SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Raw Declaration public string Raw { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source Src Declaration public string Src { get; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String | Improve this Doc View Source Tokens Declaration public ImmutableArray<IMarkdownToken> Tokens { get; } Property Value Type Description System.Collections.Immutable.ImmutableArray < IMarkdownToken > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockRule.html",
    "title": "Class AzureIncludeBlockRule | DocFX website",
    "keywords": "Class AzureIncludeBlockRule Inheritance Object AzureIncludeBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockToken.html",
    "title": "Class AzureIncludeBlockToken | DocFX website",
    "keywords": "Class AzureIncludeBlockToken Inheritance Object AzureIncludeBasicToken AzureIncludeBlockToken Inherited Members AzureIncludeBasicToken.Rule AzureIncludeBasicToken.Context AzureIncludeBasicToken.Src AzureIncludeBasicToken.Name AzureIncludeBasicToken.Title AzureIncludeBasicToken.Raw AzureIncludeBasicToken.SourceInfo AzureIncludeBasicToken.Tokens Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeBlockToken : AzureIncludeBasicToken, IMarkdownToken, IMarkdownRewritable<AzureIncludeBlockToken> Constructors | Improve this Doc View Source AzureIncludeBlockToken(IMarkdownRule, IMarkdownContext, String, String, String, ImmutableArray<IMarkdownToken>, String, SourceInfo) Declaration public AzureIncludeBlockToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, ImmutableArray<IMarkdownToken> tokens, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens String raw SourceInfo sourceInfo Methods | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public AzureIncludeBlockToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description AzureIncludeBlockToken Implements IMarkdownRewritable<AzureIncludeBlockToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineRule.html",
    "title": "Class AzureIncludeInlineRule | DocFX website",
    "keywords": "Class AzureIncludeInlineRule Inheritance Object AzureIncludeInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeInlineRule : IMarkdownRule Properties | Improve this Doc View Source AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineToken.html",
    "title": "Class AzureIncludeInlineToken | DocFX website",
    "keywords": "Class AzureIncludeInlineToken Inheritance Object AzureIncludeBasicToken AzureIncludeInlineToken Inherited Members AzureIncludeBasicToken.Rule AzureIncludeBasicToken.Context AzureIncludeBasicToken.Src AzureIncludeBasicToken.Name AzureIncludeBasicToken.Title AzureIncludeBasicToken.Raw AzureIncludeBasicToken.SourceInfo AzureIncludeBasicToken.Tokens Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeInlineToken : AzureIncludeBasicToken, IMarkdownToken, IMarkdownRewritable<AzureIncludeInlineToken> Constructors | Improve this Doc View Source AzureIncludeInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, ImmutableArray<IMarkdownToken>, String, SourceInfo) Declaration public AzureIncludeInlineToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, ImmutableArray<IMarkdownToken> tokens, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title System.Collections.Immutable.ImmutableArray < IMarkdownToken > tokens String raw SourceInfo sourceInfo Methods | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public AzureIncludeInlineToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description AzureIncludeInlineToken Implements IMarkdownRewritable<AzureIncludeInlineToken>.Rewrite(IMarkdownRewriteEngine) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarkdownRenderer.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarkdownRenderer.html",
    "title": "Class AzureMarkdownRenderer | DocFX website",
    "keywords": "Class AzureMarkdownRenderer Inheritance Object MarkdownRenderer DfmMarkdownRenderer AzureMarkdownRenderer Inherited Members DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmSectionBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownListItemBlockToken, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMarkdownRenderer : DfmMarkdownRenderer Methods | Improve this Doc View Source Render(IMarkdownRenderer, AzureIncludeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, AzureIncludeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render AzureIncludeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, AzureIncludeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, AzureIncludeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render AzureIncludeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, AzureVideoBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, AzureVideoBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render AzureVideoBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarked.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarked.html",
    "title": "Class AzureMarked | DocFX website",
    "keywords": "Class AzureMarked Inheritance Object AzureMarked Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMarked Methods | Improve this Doc View Source Markup(String, String, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureVideoInfo>, IReadOnlyDictionary<String, AzureFileInfo>) Declaration public static string Markup(string src, string path = null, IReadOnlyDictionary<string, AzureFileInfo> azureMarkdownFileInfoMapping = null, IReadOnlyDictionary<string, AzureVideoInfo> azureVideoInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureResourceFileInfoMapping = null) Parameters Type Name Description String src String path IReadOnlyDictionary < String , AzureFileInfo > azureMarkdownFileInfoMapping IReadOnlyDictionary < String , AzureVideoInfo > azureVideoInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureResourceFileInfoMapping Returns Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationEngineBuilder.html",
    "title": "Class AzureMigrationEngineBuilder | DocFX website",
    "keywords": "Class AzureMigrationEngineBuilder Inheritance Object MarkdownEngineBuilder GfmEngineBuilder AzureMigrationEngineBuilder Inherited Members MarkdownEngineBuilder.Options MarkdownEngineBuilder.BlockRules MarkdownEngineBuilder.InlineRules MarkdownEngineBuilder.Rewriter MarkdownEngineBuilder.TokenTreeValidator MarkdownEngineBuilder.CreateParseContext() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationEngineBuilder : GfmEngineBuilder Constructors | Improve this Doc View Source AzureMigrationEngineBuilder(Options) Declaration public AzureMigrationEngineBuilder(Options options) Parameters Type Name Description Options options Methods | Improve this Doc View Source BuildBlockRules() Declaration protected override void BuildBlockRules() Overrides GfmEngineBuilder.BuildBlockRules() | Improve this Doc View Source BuildInlineRules() Declaration protected override void BuildInlineRules() Overrides GfmEngineBuilder.BuildInlineRules() | Improve this Doc View Source BuildRules() Declaration protected override void BuildRules() Overrides GfmEngineBuilder.BuildRules() | Improve this Doc View Source CreateEngine(Object) Declaration public override IMarkdownEngine CreateEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description IMarkdownEngine Overrides MarkdownEngineBuilder.CreateEngine(Object) | Improve this Doc View Source CreateRewriters() Declaration protected void CreateRewriters() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationHtmlMetadataBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationHtmlMetadataBlockRule.html",
    "title": "Class AzureMigrationHtmlMetadataBlockRule | DocFX website",
    "keywords": "Class AzureMigrationHtmlMetadataBlockRule Inheritance Object AzureMigrationHtmlMetadataBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationHtmlMetadataBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureHtmlMetadataRegex Declaration public virtual Regex AzureHtmlMetadataRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBasicToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBasicToken.html",
    "title": "Class AzureMigrationIncludeBasicToken | DocFX website",
    "keywords": "Class AzureMigrationIncludeBasicToken Inheritance Object AzureMigrationIncludeBasicToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public abstract class AzureMigrationIncludeBasicToken : IMarkdownToken Constructors | Improve this Doc View Source AzureMigrationIncludeBasicToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration protected AzureMigrationIncludeBasicToken(IMarkdownRule rule, IMarkdownContext context, string name, string src, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String src String title SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source Src Declaration public string Src { get; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockRule.html",
    "title": "Class AzureMigrationIncludeBlockRule | DocFX website",
    "keywords": "Class AzureMigrationIncludeBlockRule Inheritance Object AzureMigrationIncludeBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockToken.html",
    "title": "Class AzureMigrationIncludeBlockToken | DocFX website",
    "keywords": "Class AzureMigrationIncludeBlockToken Inheritance Object AzureMigrationIncludeBasicToken AzureMigrationIncludeBlockToken Inherited Members AzureMigrationIncludeBasicToken.Rule AzureMigrationIncludeBasicToken.Context AzureMigrationIncludeBasicToken.Name AzureMigrationIncludeBasicToken.Src AzureMigrationIncludeBasicToken.Title AzureMigrationIncludeBasicToken.SourceInfo Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeBlockToken : AzureMigrationIncludeBasicToken, IMarkdownToken Constructors | Improve this Doc View Source AzureMigrationIncludeBlockToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration public AzureMigrationIncludeBlockToken(IMarkdownRule rule, IMarkdownContext context, string name, string src, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String src String title SourceInfo sourceInfo Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineRule.html",
    "title": "Class AzureMigrationIncludeInlineRule | DocFX website",
    "keywords": "Class AzureMigrationIncludeInlineRule Inheritance Object AzureMigrationIncludeInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.AzureMarkdownRewriters Assembly :Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeInlineRule : IMarkdownRule Properties | Improve this Doc View Source AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.IXRefContainer.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.IXRefContainer.html",
    "title": "Interface IXRefContainer | DocFX website",
    "keywords": "Interface IXRefContainer Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public interface IXRefContainer Properties | Improve this Doc View Source IsEmbeddedRedirections Declaration bool IsEmbeddedRedirections { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source GetReader() Declaration IXRefContainerReader GetReader() Returns Type Description IXRefContainerReader | Improve this Doc View Source GetRedirections() Declaration IEnumerable<XRefMapRedirection> GetRedirections() Returns Type Description IEnumerable < XRefMapRedirection > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.IXRefContainerReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.IXRefContainerReader.html",
    "title": "Interface IXRefContainerReader | DocFX website",
    "keywords": "Interface IXRefContainerReader Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public interface IXRefContainerReader Methods | Improve this Doc View Source Find(String) Declaration XRefSpec Find(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.JintProcessorHelper.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.JintProcessorHelper.html",
    "title": "Class JintProcessorHelper | DocFX website",
    "keywords": "Class JintProcessorHelper Inheritance Object JintProcessorHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public static class JintProcessorHelper Methods | Improve this Doc View Source ConvertJTokenToJsValue(JToken) Declaration public static JsValue ConvertJTokenToJsValue(JToken raw) Parameters Type Name Description Newtonsoft.Json.Linq.JToken raw Returns Type Description Jint.Native.JsValue | Improve this Doc View Source ConvertStrongTypeToJsValue(Object) Declaration public static JsValue ConvertStrongTypeToJsValue(object raw) Parameters Type Name Description Object raw Returns Type Description Jint.Native.JsValue"
  },
  "api/Microsoft.DocAsCode.Build.Engine.JsonTokenTreeServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.JsonTokenTreeServiceProvider.html",
    "title": "Class JsonTokenTreeServiceProvider | DocFX website",
    "keywords": "Class JsonTokenTreeServiceProvider Inheritance Object JsonTokenTreeServiceProvider Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"JsonTokenTree\", typeof (IMarkdownServiceProvider))] public class JsonTokenTreeServiceProvider : IMarkdownServiceProvider Properties | Improve this Doc View Source TokenTreeValidator Declaration [ImportMany] public IEnumerable<IMarkdownTokenTreeValidator> TokenTreeValidator { get; set; } Property Value Type Description IEnumerable < IMarkdownTokenTreeValidator > Methods | Improve this Doc View Source CreateMarkdownService(MarkdownServiceParameters) Declaration public IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService Implements IMarkdownServiceProvider.CreateMarkdownService(MarkdownServiceParameters) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ResourceCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ResourceCollection.html",
    "title": "Class ResourceCollection | DocFX website",
    "keywords": "Class ResourceCollection Inheritance Object ResourceCollection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public abstract class ResourceCollection : IDisposable Properties | Improve this Doc View Source IsEmpty Declaration public abstract bool IsEmpty { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description String | Improve this Doc View Source Names Declaration public abstract IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Override Object.Finalize by defining a destructor Declaration protected void Finalize() | Improve this Doc View Source GetResource(String) Declaration public virtual string GetResource(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source GetResources(String) Declaration public IEnumerable<KeyValuePair<string, string>> GetResources(string selector = null) Parameters Type Name Description String selector Returns Type Description IEnumerable < KeyValuePair < String , String >> | Improve this Doc View Source GetResourceStream(String) Declaration public abstract Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream | Improve this Doc View Source GetResourceStreams(String) Declaration public IEnumerable<KeyValuePair<string, Stream>> GetResourceStreams(string selector = null) Parameters Type Name Description String selector Returns Type Description IEnumerable < KeyValuePair < String , Stream >> | Improve this Doc View Source GetString(Stream) Declaration protected static string GetString(Stream stream) Parameters Type Name Description Stream stream Returns Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ResourceFileExceedsMaxDepthException.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ResourceFileExceedsMaxDepthException.html",
    "title": "Class ResourceFileExceedsMaxDepthException | DocFX website",
    "keywords": "Class ResourceFileExceedsMaxDepthException Inheritance Object Exception DocfxException ResourceFileExceedsMaxDepthException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class ResourceFileExceedsMaxDepthException : DocfxException, ISerializable, _Exception Constructors | Improve this Doc View Source ResourceFileExceedsMaxDepthException(Int32, String, String) Declaration public ResourceFileExceedsMaxDepthException(int maxDepth, string fileName, string resourceName) Parameters Type Name Description Int32 maxDepth String fileName String resourceName | Improve this Doc View Source ResourceFileExceedsMaxDepthException(SerializationInfo, StreamingContext) Declaration protected ResourceFileExceedsMaxDepthException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Properties | Improve this Doc View Source DirectoryName Declaration public string DirectoryName { get; } Property Value Type Description String | Improve this Doc View Source MaxDepth Declaration public int MaxDepth { get; } Property Value Type Description Int32 | Improve this Doc View Source ResourceName Declaration public string ResourceName { get; } Property Value Type Description String Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Overrides Exception.GetObjectData(SerializationInfo, StreamingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.ResourceFinder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ResourceFinder.html",
    "title": "Class ResourceFinder | DocFX website",
    "keywords": "Class ResourceFinder Inheritance Object ResourceFinder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class ResourceFinder Constructors | Improve this Doc View Source ResourceFinder(Assembly, String, String) Declaration public ResourceFinder(Assembly assembly, string rootNamespace, string baseDirectory = null) Parameters Type Name Description Assembly assembly String rootNamespace String baseDirectory Methods | Improve this Doc View Source Find(String) Search in order: Inside OverrideFolder, NOTE sub-folders are NOT included a. Folder with provided name b. ZIP file with provided name Inside Embedded Resources a. ZIP file with provided name Declaration public ResourceCollection Find(string name) Parameters Type Name Description String name The resource name provided Returns Type Description ResourceCollection If found, return the resource collection; if not, return null Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.html",
    "title": "Class SingleDocumentBuilder | DocFX website",
    "keywords": "Class SingleDocumentBuilder Inheritance Object SingleDocumentBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class SingleDocumentBuilder : IDisposable Properties | Improve this Doc View Source Container Declaration public CompositionHost Container { get; set; } Property Value Type Description System.Composition.Hosting.CompositionHost | Improve this Doc View Source MetadataValidators Declaration public IEnumerable<IInputMetadataValidator> MetadataValidators { get; set; } Property Value Type Description IEnumerable < IInputMetadataValidator > | Improve this Doc View Source Processors Declaration public IEnumerable<IDocumentProcessor> Processors { get; set; } Property Value Type Description IEnumerable < IDocumentProcessor > Methods | Improve this Doc View Source Build(DocumentBuildParameters) Declaration public Manifest Build(DocumentBuildParameters parameters) Parameters Type Name Description DocumentBuildParameters parameters Returns Type Description Manifest | Improve this Doc View Source Build(IDocumentProcessor, DocumentBuildParameters, IMarkdownService) Declaration public static ImmutableList<FileModel> Build(IDocumentProcessor processor, DocumentBuildParameters parameters, IMarkdownService markdownService) Parameters Type Name Description IDocumentProcessor processor DocumentBuildParameters parameters IMarkdownService markdownService Returns Type Description System.Collections.Immutable.ImmutableList < FileModel > | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.Template.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Template.html",
    "title": "Class Template | DocFX website",
    "keywords": "Class Template Inheritance Object Template Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class Template Constructors | Improve this Doc View Source Template(String, DocumentBuildContext, TemplateRendererResource, TemplatePreprocessorResource, ResourceCollection, Int32) Declaration public Template(string name, DocumentBuildContext context, TemplateRendererResource templateResource, TemplatePreprocessorResource scriptResource, ResourceCollection resourceCollection, int maxParallelism) Parameters Type Name Description String name DocumentBuildContext context TemplateRendererResource templateResource TemplatePreprocessorResource scriptResource ResourceCollection resourceCollection Int32 maxParallelism Properties | Improve this Doc View Source ContainsGetOptions Declaration public bool ContainsGetOptions { get; } Property Value Type Description Boolean | Improve this Doc View Source ContainsModelTransformation Declaration public bool ContainsModelTransformation { get; } Property Value Type Description Boolean | Improve this Doc View Source ContainsTemplateRenderer Declaration public bool ContainsTemplateRenderer { get; } Property Value Type Description Boolean | Improve this Doc View Source Extension Declaration public string Extension { get; } Property Value Type Description String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Resources Declaration public IEnumerable<TemplateResourceInfo> Resources { get; } Property Value Type Description IEnumerable < TemplateResourceInfo > | Improve this Doc View Source ScriptName Declaration public string ScriptName { get; } Property Value Type Description String | Improve this Doc View Source TemplateType Declaration public TemplateType TemplateType { get; } Property Value Type Description TemplateType | Improve this Doc View Source Type Declaration public string Type { get; } Property Value Type Description String Methods | Improve this Doc View Source GetOptions(Object) exports.getOptions = function (model) { return { bookmarks : { uid1: \"bookmark1\" }, isShared: true } } Declaration public TransformModelOptions GetOptions(object model) Parameters Type Name Description Object model Returns Type Description TransformModelOptions | Improve this Doc View Source Transform(Object) Transform from view model to the final result using template Supported template languages are mustache and liquid Declaration public string Transform(object model) Parameters Type Name Description Object model The input view model Returns Type Description String The output after applying template | Improve this Doc View Source TransformModel(Object) Transform from raw model to view model TODO: refactor to merge model and attrs into one input model Declaration public object TransformModel(object model) Parameters Type Name Description Object model The raw model Returns Type Description Object The view model Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateBundle.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateBundle.html",
    "title": "Class TemplateBundle | DocFX website",
    "keywords": "Class TemplateBundle Inheritance Object TemplateBundle Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateBundle Constructors | Improve this Doc View Source TemplateBundle(String, IEnumerable<Template>) Declaration public TemplateBundle(string documentType, IEnumerable<Template> templates) Parameters Type Name Description String documentType IEnumerable < Template > templates Properties | Improve this Doc View Source DocumentType Declaration public string DocumentType { get; } Property Value Type Description String | Improve this Doc View Source Extension Declaration public string Extension { get; } Property Value Type Description String | Improve this Doc View Source Resources Declaration public IEnumerable<TemplateResourceInfo> Resources { get; } Property Value Type Description IEnumerable < TemplateResourceInfo > | Improve this Doc View Source Templates Declaration public IEnumerable<Template> Templates { get; } Property Value Type Description IEnumerable < Template > Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateCollection.html",
    "title": "Class TemplateCollection | DocFX website",
    "keywords": "Class TemplateCollection Inheritance Object Dictionary < String , TemplateBundle > TemplateCollection Inherited Members Dictionary<String, TemplateBundle>.Add(String, TemplateBundle) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>) Dictionary<String, TemplateBundle>.Clear() Dictionary<String, TemplateBundle>.ContainsKey(String) Dictionary<String, TemplateBundle>.ContainsValue(TemplateBundle) Dictionary<String, TemplateBundle>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.GetEnumerator() Dictionary<String, TemplateBundle>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, TemplateBundle>.OnDeserialization(Object) Dictionary<String, TemplateBundle>.Remove(String) Dictionary<String, TemplateBundle>.TryGetValue(String, TemplateBundle) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>[], System.Int32) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.set_Item(System.Object, System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.Add(System.Object, System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.Contains(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.Remove(System.Object) Dictionary<String, TemplateBundle>.Comparer Dictionary<String, TemplateBundle>.Count Dictionary<String, TemplateBundle>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Keys Dictionary<String, TemplateBundle>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Values Dictionary<String, TemplateBundle>.Item[String] System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.IsReadOnly System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.ICollection.SyncRoot System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.IsFixedSize System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.IsReadOnly System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.Item[System.Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateCollection : Dictionary<string, TemplateBundle>, IDictionary<string, TemplateBundle>, ICollection<KeyValuePair<string, TemplateBundle>>, IDictionary, ICollection, IReadOnlyDictionary<string, TemplateBundle>, IReadOnlyCollection<KeyValuePair<string, TemplateBundle>>, IEnumerable<KeyValuePair<string, TemplateBundle>>, IEnumerable, ISerializable, IDeserializationCallback Constructors | Improve this Doc View Source TemplateCollection(ResourceCollection, DocumentBuildContext, Int32) Declaration public TemplateCollection(ResourceCollection provider, DocumentBuildContext context, int maxParallelism) Parameters Type Name Description ResourceCollection provider DocumentBuildContext context Int32 maxParallelism Properties | Improve this Doc View Source Item[String] Declaration public TemplateBundle this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description TemplateBundle Extension Methods TaskHelper.ForEachInParallelAsync<KeyValuePair<String, TemplateBundle>>(Func<KeyValuePair<String, TemplateBundle>, Task>, Int32) TaskHelper.ForEachInParallelAsync<KeyValuePair<String, TemplateBundle>>(Func<KeyValuePair<String, TemplateBundle>, Task>) TaskHelper.SelectInParallelAsync<KeyValuePair<String, TemplateBundle>, TResult>(Func<KeyValuePair<String, TemplateBundle>, Task<TResult>>, Int32) TaskHelper.SelectInParallelAsync<KeyValuePair<String, TemplateBundle>, TResult>(Func<KeyValuePair<String, TemplateBundle>, Task<TResult>>) JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateJintPreprocessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateJintPreprocessor.html",
    "title": "Class TemplateJintPreprocessor | DocFX website",
    "keywords": "Class TemplateJintPreprocessor Inheritance Object TemplateJintPreprocessor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateJintPreprocessor : ITemplatePreprocessor Constructors | Improve this Doc View Source TemplateJintPreprocessor(ResourceCollection, TemplatePreprocessorResource, DocumentBuildContext) Declaration public TemplateJintPreprocessor(ResourceCollection resourceCollection, TemplatePreprocessorResource scriptResource, DocumentBuildContext context) Parameters Type Name Description ResourceCollection resourceCollection TemplatePreprocessorResource scriptResource DocumentBuildContext context Properties | Improve this Doc View Source GetOptionsFunc Declaration public Func<object, object> GetOptionsFunc { get; } Property Value Type Description Func < Object , Object > Implements ITemplatePreprocessor.GetOptionsFunc | Improve this Doc View Source TransformModelFunc Declaration public Func<object, object> TransformModelFunc { get; } Property Value Type Description Func < Object , Object > Implements ITemplatePreprocessor.TransformModelFunc Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateManager.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateManager.html",
    "title": "Class TemplateManager | DocFX website",
    "keywords": "Class TemplateManager Inheritance Object TemplateManager Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class TemplateManager Constructors | Improve this Doc View Source TemplateManager(Assembly, String, List<String>, List<String>, String) Declaration public TemplateManager(Assembly assembly, string rootNamespace, List<string> templates, List<string> themes, string baseDirectory) Parameters Type Name Description Assembly assembly String rootNamespace List < String > templates List < String > themes String baseDirectory Methods | Improve this Doc View Source GetTemplateProcessor(DocumentBuildContext, Int32) Declaration public TemplateProcessor GetTemplateProcessor(DocumentBuildContext context, int maxParallelism) Parameters Type Name Description DocumentBuildContext context Int32 maxParallelism Returns Type Description TemplateProcessor | Improve this Doc View Source GetTemplatesHash() Declaration public string GetTemplatesHash() Returns Type Description String | Improve this Doc View Source ProcessTheme(String, Boolean) Declaration public void ProcessTheme(string outputDirectory, bool overwrite) Parameters Type Name Description String outputDirectory Boolean overwrite | Improve this Doc View Source TryExportTemplateFiles(String, String) Declaration public bool TryExportTemplateFiles(string outputDirectory, string regexFilter = null) Parameters Type Name Description String outputDirectory String regexFilter Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateModelTransformer.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateModelTransformer.html",
    "title": "Class TemplateModelTransformer | DocFX website",
    "keywords": "Class TemplateModelTransformer Inheritance Object TemplateModelTransformer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateModelTransformer Constructors | Improve this Doc View Source TemplateModelTransformer(DocumentBuildContext, TemplateCollection, ApplyTemplateSettings, IDictionary<String, Object>) Declaration public TemplateModelTransformer(DocumentBuildContext context, TemplateCollection templateCollection, ApplyTemplateSettings settings, IDictionary<string, object> globals) Parameters Type Name Description DocumentBuildContext context TemplateCollection templateCollection ApplyTemplateSettings settings IDictionary < String , Object > globals Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplatePreprocessorResource.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplatePreprocessorResource.html",
    "title": "Class TemplatePreprocessorResource | DocFX website",
    "keywords": "Class TemplatePreprocessorResource Inheritance Object TemplatePreprocessorResource Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplatePreprocessorResource Constructors | Improve this Doc View Source TemplatePreprocessorResource(String, String) Declaration public TemplatePreprocessorResource(string resourceName, string content) Parameters Type Name Description String resourceName String content Properties | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source ResourceName Declaration public string ResourceName { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateProcessor.html",
    "title": "Class TemplateProcessor | DocFX website",
    "keywords": "Class TemplateProcessor Inheritance Object TemplateProcessor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Build.Engine Assembly :Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateProcessor : IDisposable Constructors | Improve this Doc View Source TemplateProcessor(ResourceCollection, DocumentBuildContext, Int32) TemplateName can be either file or folder If TemplateName is file, it is considered as the default template If TemplateName is a folder, files inside the folder is considered as the template, each file is named after {DocumentType}.{extension} Declaration public TemplateProcessor(ResourceCollection resourceProvider, DocumentBuildContext context, int maxParallelism = 0) Parameters Type Name Description ResourceCollection resourceProvider DocumentBuildContext context Int32 maxParallelism Fields | Improve this Doc View Source DefaultProcessor Declaration public static readonly TemplateProcessor DefaultProcessor Field Value Type Description TemplateProcessor Properties | Improve this Doc View Source Tokens Declaration public IDictionary<string, string> Tokens { get; } Property Value Type Description IDictionary < String , String > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() | Improve this Doc View Source GetTemplateBundle(String) Declaration public TemplateBundle GetTemplateBundle(string documentType) Parameters Type Name Description String documentType Returns Type Description TemplateBundle | Improve this Doc View Source TryGetFileExtension(String, out String) Declaration public bool TryGetFileExtension(string documentType, out string fileExtension) Parameters Type Name Description String documentType String fileExtension Returns Type Description Boolean Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockRule.html",
    "title": "Class DfmIncludeBlockRule | DocFX website",
    "keywords": "Class DfmIncludeBlockRule Inheritance Object DfmIncludeBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeBlockRule : IMarkdownRule Properties | Improve this Doc View Source Include Declaration public virtual Regex Include { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockToken.html",
    "title": "Class DfmIncludeBlockToken | DocFX website",
    "keywords": "Class DfmIncludeBlockToken Inheritance Object DfmIncludeBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeBlockToken : IMarkdownToken Constructors | Improve this Doc View Source DfmIncludeBlockToken(IMarkdownRule, IMarkdownContext, String, String, String, String, SourceInfo) Declaration public DfmIncludeBlockToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title String raw SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Raw Declaration public string Raw { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source Src Declaration public string Src { get; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineRule.html",
    "title": "Class DfmIncludeInlineRule | DocFX website",
    "keywords": "Class DfmIncludeInlineRule Inheritance Object DfmIncludeInlineRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeInlineRule : IMarkdownRule Properties | Improve this Doc View Source Include Declaration public virtual Regex Include { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineToken.html",
    "title": "Class DfmIncludeInlineToken | DocFX website",
    "keywords": "Class DfmIncludeInlineToken Inheritance Object DfmIncludeInlineToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeInlineToken : IMarkdownToken Constructors | Improve this Doc View Source DfmIncludeInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, String, SourceInfo) Declaration public DfmIncludeInlineToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title String raw SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Raw Declaration public string Raw { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo | Improve this Doc View Source Src Declaration public string Src { get; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmMarkdownRenderer.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmMarkdownRenderer.html",
    "title": "Class DfmMarkdownRenderer | DocFX website",
    "keywords": "Class DfmMarkdownRenderer Inheritance Object MarkdownRenderer DfmMarkdownRenderer Inherited Members MarkdownRenderer.Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) MarkdownRenderer.Render(IMarkdownRenderer, MarkdownListItemBlockToken, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmMarkdownRenderer : MarkdownRenderer Methods | Improve this Doc View Source Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmIncludeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmIncludeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmIncludeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render DfmIncludeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmNoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmNoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmSectionBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmSectionBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmSectionBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmVideoBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmVideoBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmYamlHeaderBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmYamlHeaderBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockRule.html",
    "title": "Class DfmNoteBlockRule | DocFX website",
    "keywords": "Class DfmNoteBlockRule Inheritance Object DfmNoteBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmNoteBlockRule : IMarkdownRule Properties | Improve this Doc View Source DfmNoteRegex Declaration public virtual Regex DfmNoteRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockToken.html",
    "title": "Class DfmNoteBlockToken | DocFX website",
    "keywords": "Class DfmNoteBlockToken Inheritance Object DfmNoteBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmNoteBlockToken : IMarkdownToken, IDfmBlockSpecialSplitToken Constructors | Improve this Doc View Source DfmNoteBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public DfmNoteBlockToken(IMarkdownRule rule, IMarkdownContext context, string noteType, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String noteType String content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source NoteType Declaration public string NoteType { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmParagraphBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmParagraphBlockRule.html",
    "title": "Class DfmParagraphBlockRule | DocFX website",
    "keywords": "Class DfmParagraphBlockRule Inheritance Object MarkdownParagraphBlockRule GfmParagraphBlockRule DfmParagraphBlockRule Inherited Members MarkdownParagraphBlockRule.Name MarkdownParagraphBlockRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmParagraphBlockRule : GfmParagraphBlockRule, IMarkdownRule Fields | Improve this Doc View Source _paragraph Declaration public static readonly Regex _paragraph Field Value Type Description Regex Properties | Improve this Doc View Source Paragraph Declaration public override Regex Paragraph { get; } Property Value Type Description Regex Overrides GfmParagraphBlockRule.Paragraph Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmRenderer.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmRenderer.html",
    "title": "Class DfmRenderer | DocFX website",
    "keywords": "Class DfmRenderer Inheritance Object HtmlRenderer DfmRenderer Inherited Members HtmlRenderer.Render(IMarkdownRenderer, MarkdownNewLineBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownCodeBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownHrBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownListBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownListItemBlockToken) HtmlRenderer.Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownParagraphBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownTextToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownNonParagraphBlockToken, MarkdownBlockContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownEscapeInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownImageInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownCodeInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, GfmDelInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownTagInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownBrInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, GfmEmojiInlineToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownTextToken, MarkdownInlineContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownIgnoreToken, IMarkdownContext) HtmlRenderer.Render(IMarkdownRenderer, MarkdownRawToken, IMarkdownContext) HtmlRenderer.AppendSourceInfo(StringBuffer, IMarkdownRenderer, IMarkdownToken) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmRenderer : HtmlRenderer Properties | Improve this Doc View Source Tokens Declaration public ImmutableDictionary<string, string> Tokens { get; set; } Property Value Type Description System.Collections.Immutable.ImmutableDictionary < String , String > Methods | Improve this Doc View Source Render(IMarkdownRenderer, DfmFencesBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmFencesBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmIncludeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmIncludeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmIncludeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmIncludeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmNoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmNoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmVideoBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmVideoBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmXrefInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmXrefInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmXrefInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmYamlHeaderBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmYamlHeaderBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public override StringBuffer Render(IMarkdownRenderer renderer, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Overrides HtmlRenderer.Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockRule.html",
    "title": "Class DfmSectionBlockRule | DocFX website",
    "keywords": "Class DfmSectionBlockRule Inheritance Object DfmSectionBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmSectionBlockRule : IMarkdownRule Fields | Improve this Doc View Source _sectionRegex Declaration public static readonly Regex _sectionRegex Field Value Type Description Regex Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockToken.html",
    "title": "Class DfmSectionBlockToken | DocFX website",
    "keywords": "Class DfmSectionBlockToken Inheritance Object DfmSectionBlockToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmSectionBlockToken : IMarkdownToken, IDfmBlockSpecialSplitToken Constructors | Improve this Doc View Source DfmSectionBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public DfmSectionBlockToken(IMarkdownRule rule, IMarkdownContext context, string attributes, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String attributes SourceInfo sourceInfo Properties | Improve this Doc View Source Attributes Declaration public string Attributes { get; } Property Value Type Description String | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext Implements IMarkdownToken.Context | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule Implements IMarkdownToken.Rule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IMarkdownToken.SourceInfo Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTagNameResolveResult.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTagNameResolveResult.html",
    "title": "Class DfmTagNameResolveResult | DocFX website",
    "keywords": "Class DfmTagNameResolveResult Inheritance Object DfmTagNameResolveResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTagNameResolveResult Properties | Improve this Doc View Source EndLine Declaration public int EndLine { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ErrorMessage Declaration public string ErrorMessage { get; set; } Property Value Type Description String | Improve this Doc View Source ExcludesLines Declaration public HashSet<int> ExcludesLines { get; set; } Property Value Type Description HashSet < Int32 > | Improve this Doc View Source IsSuccessful Declaration public bool IsSuccessful { get; set; } Property Value Type Description Boolean | Improve this Doc View Source StartLine Declaration public int StartLine { get; set; } Property Value Type Description Int32 Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTextInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTextInlineRule.html",
    "title": "Class DfmTextInlineRule | DocFX website",
    "keywords": "Class DfmTextInlineRule Inheritance Object MarkdownTextInlineRule DfmTextInlineRule Inherited Members MarkdownTextInlineRule.Name MarkdownTextInlineRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) MarkdownTextInlineRule.Smartypants(Options, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTextInlineRule : MarkdownTextInlineRule, IMarkdownRule Properties | Improve this Doc View Source Text Override the one in MarkdownLite, difference is: If there is a @ following . , , , ; , : , ! , ? or whitespace, exclude it as it is a xref Declaration public override Regex Text { get; } Property Value Type Description Regex Overrides MarkdownTextInlineRule.Text Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  },
  "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockRule.html",
    "title": "Class DfmVideoBlockRule | DocFX website",
    "keywords": "Class DfmVideoBlockRule Inheritance Object DfmVideoBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace :Microsoft.DocAsCode.Dfm Assembly :Microsoft.DocAsCode.Dfm.dll Syntax public class DfmVideoBlockRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Implements IMarkdownRule.Name | Improve this Doc View Source VideoRegex Declaration public virtual Regex VideoRegex { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Implements IMarkdownRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) Extension Methods JsonUtility.ToJsonString(Formatting, JsonSerializer)"
  }
}